using Minecraft.Schemas;
using Minecraft.Data.Blocks;
using Minecraft.Registry;
using Minecraft.Data.Components.Types;
using Minecraft.Schemas.Blocks.BlockEnums;
using Minecraft.Data.Generated.BlockTypes;

using Minecraft.Packets.Config.ClientBound;
using Minecraft.Packets.Config.ServerBound;
using Minecraft.Packets.Login.ClientBound;
using Minecraft.Packets.Login.ServerBound;
using Minecraft.Packets.Play.ClientBound;
using Minecraft.Packets.Play.ServerBound;
using Minecraft.Packets.Status.ClientBound;
using Minecraft.Packets.Status.ServerBound;
using Minecraft.Packets.Handshake;

namespace Minecraft.Data.Generated;

// Generated using the CodeGen project. Do not edit manually.
//
// Last updated: 2025-07-29
public static class VanillaRegistry {
    public static readonly MinecraftRegistry Data = new();

    static VanillaRegistry() {
        Data.Particles.Add(Particle.AngryVillager);
        Data.Particles.Add(Particle.Ash);
        Data.Particles.Add(Particle.Block);
        Data.Particles.Add(Particle.BlockCrumble);
        Data.Particles.Add(Particle.BlockMarker);
        Data.Particles.Add(Particle.Bubble);
        Data.Particles.Add(Particle.BubbleColumnUp);
        Data.Particles.Add(Particle.BubblePop);
        Data.Particles.Add(Particle.CampfireCosySmoke);
        Data.Particles.Add(Particle.CampfireSignalSmoke);
        Data.Particles.Add(Particle.CherryLeaves);
        Data.Particles.Add(Particle.Cloud);
        Data.Particles.Add(Particle.Composter);
        Data.Particles.Add(Particle.CrimsonSpore);
        Data.Particles.Add(Particle.Crit);
        Data.Particles.Add(Particle.CurrentDown);
        Data.Particles.Add(Particle.DamageIndicator);
        Data.Particles.Add(Particle.Dolphin);
        Data.Particles.Add(Particle.DragonBreath);
        Data.Particles.Add(Particle.DrippingDripstoneLava);
        Data.Particles.Add(Particle.DrippingDripstoneWater);
        Data.Particles.Add(Particle.DrippingHoney);
        Data.Particles.Add(Particle.DrippingLava);
        Data.Particles.Add(Particle.DrippingObsidianTear);
        Data.Particles.Add(Particle.DrippingWater);
        Data.Particles.Add(Particle.Dust);
        Data.Particles.Add(Particle.DustColorTransition);
        Data.Particles.Add(Particle.DustPillar);
        Data.Particles.Add(Particle.DustPlume);
        Data.Particles.Add(Particle.Effect);
        Data.Particles.Add(Particle.EggCrack);
        Data.Particles.Add(Particle.ElderGuardian);
        Data.Particles.Add(Particle.ElectricSpark);
        Data.Particles.Add(Particle.Enchant);
        Data.Particles.Add(Particle.EnchantedHit);
        Data.Particles.Add(Particle.EndRod);
        Data.Particles.Add(Particle.EntityEffect);
        Data.Particles.Add(Particle.Explosion);
        Data.Particles.Add(Particle.ExplosionEmitter);
        Data.Particles.Add(Particle.FallingDripstoneLava);
        Data.Particles.Add(Particle.FallingDripstoneWater);
        Data.Particles.Add(Particle.FallingDust);
        Data.Particles.Add(Particle.FallingHoney);
        Data.Particles.Add(Particle.FallingLava);
        Data.Particles.Add(Particle.FallingNectar);
        Data.Particles.Add(Particle.FallingObsidianTear);
        Data.Particles.Add(Particle.FallingSporeBlossom);
        Data.Particles.Add(Particle.FallingWater);
        Data.Particles.Add(Particle.Firefly);
        Data.Particles.Add(Particle.Firework);
        Data.Particles.Add(Particle.Fishing);
        Data.Particles.Add(Particle.Flame);
        Data.Particles.Add(Particle.Flash);
        Data.Particles.Add(Particle.Glow);
        Data.Particles.Add(Particle.GlowSquidInk);
        Data.Particles.Add(Particle.Gust);
        Data.Particles.Add(Particle.GustEmitterLarge);
        Data.Particles.Add(Particle.GustEmitterSmall);
        Data.Particles.Add(Particle.HappyVillager);
        Data.Particles.Add(Particle.Heart);
        Data.Particles.Add(Particle.Infested);
        Data.Particles.Add(Particle.InstantEffect);
        Data.Particles.Add(Particle.Item);
        Data.Particles.Add(Particle.ItemCobweb);
        Data.Particles.Add(Particle.ItemSlime);
        Data.Particles.Add(Particle.ItemSnowball);
        Data.Particles.Add(Particle.LandingHoney);
        Data.Particles.Add(Particle.LandingLava);
        Data.Particles.Add(Particle.LandingObsidianTear);
        Data.Particles.Add(Particle.LargeSmoke);
        Data.Particles.Add(Particle.Lava);
        Data.Particles.Add(Particle.Mycelium);
        Data.Particles.Add(Particle.Nautilus);
        Data.Particles.Add(Particle.Note);
        Data.Particles.Add(Particle.OminousSpawning);
        Data.Particles.Add(Particle.PaleOakLeaves);
        Data.Particles.Add(Particle.Poof);
        Data.Particles.Add(Particle.Portal);
        Data.Particles.Add(Particle.RaidOmen);
        Data.Particles.Add(Particle.Rain);
        Data.Particles.Add(Particle.ReversePortal);
        Data.Particles.Add(Particle.Scrape);
        Data.Particles.Add(Particle.SculkCharge);
        Data.Particles.Add(Particle.SculkChargePop);
        Data.Particles.Add(Particle.SculkSoul);
        Data.Particles.Add(Particle.Shriek);
        Data.Particles.Add(Particle.SmallFlame);
        Data.Particles.Add(Particle.SmallGust);
        Data.Particles.Add(Particle.Smoke);
        Data.Particles.Add(Particle.Sneeze);
        Data.Particles.Add(Particle.Snowflake);
        Data.Particles.Add(Particle.SonicBoom);
        Data.Particles.Add(Particle.Soul);
        Data.Particles.Add(Particle.SoulFireFlame);
        Data.Particles.Add(Particle.Spit);
        Data.Particles.Add(Particle.Splash);
        Data.Particles.Add(Particle.SporeBlossomAir);
        Data.Particles.Add(Particle.SquidInk);
        Data.Particles.Add(Particle.SweepAttack);
        Data.Particles.Add(Particle.TintedLeaves);
        Data.Particles.Add(Particle.TotemOfUndying);
        Data.Particles.Add(Particle.Trail);
        Data.Particles.Add(Particle.TrialOmen);
        Data.Particles.Add(Particle.TrialSpawnerDetection);
        Data.Particles.Add(Particle.TrialSpawnerDetectionOminous);
        Data.Particles.Add(Particle.Underwater);
        Data.Particles.Add(Particle.VaultConnection);
        Data.Particles.Add(Particle.Vibration);
        Data.Particles.Add(Particle.WarpedSpore);
        Data.Particles.Add(Particle.WaxOff);
        Data.Particles.Add(Particle.WaxOn);
        Data.Particles.Add(Particle.WhiteAsh);
        Data.Particles.Add(Particle.WhiteSmoke);
        Data.Particles.Add(Particle.Witch);










        Data.Packets.Add(ConnectionState.None, false, 0x00, typeof(ServerBoundHandshakePacket), ServerBoundHandshakePacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Configuration, false, 0x00, typeof(ServerBoundClientInformationPacket), ServerBoundClientInformationPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Configuration, false, 0x01, typeof(ServerBoundCookieResponsePacket), ServerBoundCookieResponsePacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Configuration, false, 0x02, typeof(ServerBoundPluginMessagePacket), ServerBoundPluginMessagePacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Configuration, false, 0x03, typeof(ServerBoundAcknowledgeFinishConfigurationPacket), ServerBoundAcknowledgeFinishConfigurationPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Configuration, false, 0x04, typeof(ServerBoundKeepAlivePacket), ServerBoundKeepAlivePacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Configuration, false, 0x05, typeof(ServerBoundPongPacket), ServerBoundPongPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Configuration, false, 0x06, typeof(ServerBoundResourcePackResponsePacket), ServerBoundResourcePackResponsePacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Configuration, false, 0x07, typeof(ServerBoundKnownPacksPacket), ServerBoundKnownPacksPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Login, false, 0x04, typeof(ServerBoundCookieResponsePacket), ServerBoundCookieResponsePacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Login, false, 0x02, typeof(ServerBoundLoginPluginResponsePacket), ServerBoundLoginPluginResponsePacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Login, false, 0x00, typeof(ServerBoundLoginStartPacket), ServerBoundLoginStartPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Login, false, 0x01, typeof(ServerBoundEncryptionResponsePacket), ServerBoundEncryptionResponsePacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Login, false, 0x03, typeof(ServerBoundLoginAcknowledgedPacket), ServerBoundLoginAcknowledgedPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, false, 0x00, typeof(ServerBoundConfirmTeleportPacket), ServerBoundConfirmTeleportPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, false, 0x08, typeof(ServerBoundChatMessagePacket), ServerBoundChatMessagePacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, false, 0x0A, typeof(ServerBoundChunkBatchReceivedPacket), ServerBoundChunkBatchReceivedPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, false, 0x0B, typeof(ServerBoundClientStatusPacket), ServerBoundClientStatusPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, false, 0x0D, typeof(ServerBoundClientInformationPacket), ServerBoundClientInformationPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, false, 0x0C, typeof(ServerBoundClientTickEndPacket), ServerBoundClientTickEndPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, false, 0x0F, typeof(ServerBoundAcknowledgeConfigurationPacket), ServerBoundAcknowledgeConfigurationPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, false, 0x11, typeof(ServerBoundClickContainerPacket), ServerBoundClickContainerPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, false, 0x14, typeof(ServerBoundCookieResponsePacket), ServerBoundCookieResponsePacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, false, 0x15, typeof(ServerBoundPluginMessagePacket), ServerBoundPluginMessagePacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, false, 0x19, typeof(ServerBoundInteractPacket), ServerBoundInteractPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, false, 0x1B, typeof(ServerBoundKeepAlivePacket), ServerBoundKeepAlivePacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, false, 0x1D, typeof(ServerBoundSetPlayerPositionPacket), ServerBoundSetPlayerPositionPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, false, 0x1E, typeof(ServerBoundSetPlayerPosAndRotPacket), ServerBoundSetPlayerPosAndRotPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, false, 0x1F, typeof(ServerBoundSetPlayerRotationPacket), ServerBoundSetPlayerRotationPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, false, 0x20, typeof(ServerBoundSetMovementFlagsPacket), ServerBoundSetMovementFlagsPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, false, 0x23, typeof(ServerBoundPickItemFromBlockPacket), ServerBoundPickItemFromBlockPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, false, 0x24, typeof(ServerBoundPickItemFromEntityPacket), ServerBoundPickItemFromEntityPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, false, 0x25, typeof(ServerBoundPingRequestPacket), ServerBoundPingRequestPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, false, 0x28, typeof(ServerBoundPlayerActionPacket), ServerBoundPlayerActionPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, false, 0x29, typeof(ServerBoundPlayerCommandPacket), ServerBoundPlayerCommandPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, false, 0x2A, typeof(ServerBoundPlayerInputPacket), ServerBoundPlayerInputPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, false, 0x2B, typeof(ServerBoundPlayerLoadedPacket), ServerBoundPlayerLoadedPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, false, 0x2C, typeof(ServerBoundPongPacket), ServerBoundPongPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, false, 0x30, typeof(ServerBoundResourcePackResponsePacket), ServerBoundResourcePackResponsePacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, false, 0x34, typeof(ServerBoundSetHeldItemPacket), ServerBoundSetHeldItemPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, false, 0x3C, typeof(ServerBoundSwingArmPacket), ServerBoundSwingArmPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, false, 0x40, typeof(ServerBoundUseItemPacket), ServerBoundUseItemPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, false, 0x3F, typeof(ServerBoundUseItemOnPacket), ServerBoundUseItemOnPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Status, false, 0x01, typeof(ServerBoundPingRequestPacket), ServerBoundPingRequestPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Status, false, 0x00, typeof(ServerBoundStatusRequestPacket), ServerBoundStatusRequestPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Configuration, true, 0x00, typeof(ClientBoundCookieRequestPacket), ClientBoundCookieRequestPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Configuration, true, 0x01, typeof(ClientBoundPluginMessagePacket), ClientBoundPluginMessagePacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Configuration, true, 0x0F, typeof(ClientBoundCustomReportDetailsPacket), ClientBoundCustomReportDetailsPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Configuration, true, 0x02, typeof(ClientBoundDisconnectPacket), ClientBoundDisconnectPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Configuration, true, 0x03, typeof(ClientBoundFinishConfigurationPacket), ClientBoundFinishConfigurationPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Configuration, true, 0x04, typeof(ClientBoundKeepAlivePacket), ClientBoundKeepAlivePacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Configuration, true, 0x05, typeof(ClientBoundPingPacket), ClientBoundPingPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Configuration, true, 0x07, typeof(ClientBoundRegistryDataPacket), ClientBoundRegistryDataPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Configuration, true, 0x06, typeof(ClientBoundResetChatPacket), ClientBoundResetChatPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Configuration, true, 0x08, typeof(ClientBoundRemoveResourcePackPacket), ClientBoundRemoveResourcePackPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Configuration, true, 0x09, typeof(ClientBoundAddResourcePackPacket), ClientBoundAddResourcePackPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Configuration, true, 0x0E, typeof(ClientBoundKnownPacksPacket), ClientBoundKnownPacksPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Configuration, true, 0x10, typeof(ClientBoundServerLinksPacket), ClientBoundServerLinksPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Configuration, true, 0x0A, typeof(ClientBoundStoreCookiePacket), ClientBoundStoreCookiePacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Configuration, true, 0x0B, typeof(ClientBoundTransferPacket), ClientBoundTransferPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Configuration, true, 0x0C, typeof(ClientBoundFeatureFlagsPacket), ClientBoundFeatureFlagsPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Configuration, true, 0x0D, typeof(ClientBoundUpdateTagsPacket), ClientBoundUpdateTagsPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Login, true, 0x05, typeof(ClientBoundCookieRequestPacket), ClientBoundCookieRequestPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Login, true, 0x04, typeof(ClientBoundLoginPluginRequestPacket), ClientBoundLoginPluginRequestPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Login, true, 0x01, typeof(ClientBoundEncryptionRequestPacket), ClientBoundEncryptionRequestPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Login, true, 0x03, typeof(ClientBoundSetCompressionPacket), ClientBoundSetCompressionPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Login, true, 0x00, typeof(ClientBoundLoginDisconnectPacket), ClientBoundLoginDisconnectPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Login, true, 0x02, typeof(ClientBoundLoginSuccessPacket), ClientBoundLoginSuccessPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x01, typeof(ClientBoundSpawnEntityPacket), ClientBoundSpawnEntityPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x02, typeof(ClientBoundEntityAnimationPacket), ClientBoundEntityAnimationPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x04, typeof(ClientBoundAcknowledgeBlockChangePacket), ClientBoundAcknowledgeBlockChangePacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x05, typeof(ClientBoundSetBlockDestroyStagePacket), ClientBoundSetBlockDestroyStagePacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x06, typeof(ClientBoundBlockEntityDataPacket), ClientBoundBlockEntityDataPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x08, typeof(ClientBoundBlockUpdatePacket), ClientBoundBlockUpdatePacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x00, typeof(ClientBoundBundleDelimiterPacket), ClientBoundBundleDelimiterPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x0A, typeof(ClientBoundChangeDifficultyPacket), ClientBoundChangeDifficultyPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x0B, typeof(ClientBoundChunkBatchFinishedPacket), ClientBoundChunkBatchFinishedPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x0C, typeof(ClientBoundChunkBatchStartPacket), ClientBoundChunkBatchStartPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x0E, typeof(ClientBoundClearTitlesPacket), ClientBoundClearTitlesPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x11, typeof(ClientBoundCloseContainerPacket), ClientBoundCloseContainerPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x12, typeof(ClientBoundSetContainerContentPacket), ClientBoundSetContainerContentPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x14, typeof(ClientBoundSetContainerSlotPacket), ClientBoundSetContainerSlotPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x15, typeof(ClientBoundCookieRequestPacket), ClientBoundCookieRequestPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x18, typeof(ClientBoundPluginMessagePacket), ClientBoundPluginMessagePacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x81, typeof(ClientBoundCustomReportDetailsPacket), ClientBoundCustomReportDetailsPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x1C, typeof(ClientBoundDisconnectPacket), ClientBoundDisconnectPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x1E, typeof(ClientBoundEntityEventPacket), ClientBoundEntityEventPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x1F, typeof(ClientBoundTeleportEntityPacket), ClientBoundTeleportEntityPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x21, typeof(ClientBoundUnloadChunkPacket), ClientBoundUnloadChunkPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x22, typeof(ClientBoundGameEventPacket), ClientBoundGameEventPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x24, typeof(ClientBoundHurtAnimationPacket), ClientBoundHurtAnimationPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x25, typeof(ClientBoundInitialiseWorldBorderPacket), ClientBoundInitialiseWorldBorderPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x26, typeof(ClientBoundKeepAlivePacket), ClientBoundKeepAlivePacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x27, typeof(ClientBoundChunkDataAndUpdateLightPacket), ClientBoundChunkDataAndUpdateLightPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x29, typeof(ClientBoundParticlePacket), ClientBoundParticlePacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x2B, typeof(ClientBoundLoginPacket), ClientBoundLoginPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x2E, typeof(ClientBoundUpdateEntityPositionPacket), ClientBoundUpdateEntityPositionPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x2F, typeof(ClientBoundUpdateEntityPosAndRotPacket), ClientBoundUpdateEntityPosAndRotPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x31, typeof(ClientBoundUpdateEntityRotationPacket), ClientBoundUpdateEntityRotationPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x34, typeof(ClientBoundOpenScreenPacket), ClientBoundOpenScreenPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x36, typeof(ClientBoundPingPacket), ClientBoundPingPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x39, typeof(ClientBoundPlayerAbilitiesPacket), ClientBoundPlayerAbilitiesPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x3D, typeof(ClientBoundCombatDeathPacket), ClientBoundCombatDeathPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x3E, typeof(ClientBoundPlayerInfoRemovePacket), ClientBoundPlayerInfoRemovePacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x3F, typeof(ClientBoundPlayerInfoUpdatePacket), ClientBoundPlayerInfoUpdatePacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x41, typeof(ClientBoundSynchronisePlayerPositionPacket), ClientBoundSynchronisePlayerPositionPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x37, typeof(ClientBoundPingResponsePacket), ClientBoundPingResponsePacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x46, typeof(ClientBoundRemoveEntitiesPacket), ClientBoundRemoveEntitiesPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x49, typeof(ClientBoundRemoveResourcePackPacket), ClientBoundRemoveResourcePackPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x4A, typeof(ClientBoundAddResourcePackPacket), ClientBoundAddResourcePackPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x4B, typeof(ClientBoundRespawnPacket), ClientBoundRespawnPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x4C, typeof(ClientBoundSetHeadRotationPacket), ClientBoundSetHeadRotationPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x82, typeof(ClientBoundServerLinksPacket), ClientBoundServerLinksPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x50, typeof(ClientBoundSetActionBarTextPacket), ClientBoundSetActionBarTextPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x56, typeof(ClientBoundSetCameraPacket), ClientBoundSetCameraPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x57, typeof(ClientBoundSetCenterChunkPacket), ClientBoundSetCenterChunkPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x59, typeof(ClientBoundSetCursorItemPacket), ClientBoundSetCursorItemPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x5A, typeof(ClientBoundSetDefaultSpawnPositionPacket), ClientBoundSetDefaultSpawnPositionPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x5C, typeof(ClientBoundSetEntityMetadataPacket), ClientBoundSetEntityMetadataPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x5E, typeof(ClientBoundSetEntityVelocityPacket), ClientBoundSetEntityVelocityPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x5F, typeof(ClientBoundSetEquipmentPacket), ClientBoundSetEquipmentPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x60, typeof(ClientBoundSetExperiencePacket), ClientBoundSetExperiencePacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x61, typeof(ClientBoundSetHealthPacket), ClientBoundSetHealthPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x62, typeof(ClientBoundSetHeldItemPacket), ClientBoundSetHeldItemPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x69, typeof(ClientBoundSetSubtitleTextPacket), ClientBoundSetSubtitleTextPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x6A, typeof(ClientBoundUpdateTimePacket), ClientBoundUpdateTimePacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x6B, typeof(ClientBoundSetTitleTextPacket), ClientBoundSetTitleTextPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x6C, typeof(ClientBoundSetTitleAnimationTimesPacket), ClientBoundSetTitleAnimationTimesPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x6E, typeof(ClientBoundSoundEffectPacket), ClientBoundSoundEffectPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x6D, typeof(ClientBoundEntitySoundEffectPacket), ClientBoundEntitySoundEffectPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x6F, typeof(ClientBoundStartConfigurationPacket), ClientBoundStartConfigurationPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x71, typeof(ClientBoundStoreCookiePacket), ClientBoundStoreCookiePacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x72, typeof(ClientBoundSystemChatMessagePacket), ClientBoundSystemChatMessagePacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x73, typeof(ClientBoundSetTabListHeaderFooterPacket), ClientBoundSetTabListHeaderFooterPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x75, typeof(ClientBoundPickupItemPacket), ClientBoundPickupItemPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x7A, typeof(ClientBoundTransferPacket), ClientBoundTransferPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x7C, typeof(ClientBoundUpdateAttributesPacket), ClientBoundUpdateAttributesPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Play, true, 0x7F, typeof(ClientBoundUpdateTagsPacket), ClientBoundUpdateTagsPacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Status, true, 0x01, typeof(ClientBoundPingResponsePacket), ClientBoundPingResponsePacket.Deserialiser);
        Data.Packets.Add(ConnectionState.Status, true, 0x00, typeof(ClientBoundStatusResponsePacket), ClientBoundStatusResponsePacket.Deserialiser);

        Data.DataComponents.Add(DataComponent.AttributeModifiers, 13);
        Data.DataComponents.Add(DataComponent.CanBreak, 12);
        Data.DataComponents.Add(DataComponent.CanPlaceOn, 11);
        Data.DataComponents.Add(DataComponent.Consumable, 21);
        Data.DataComponents.Add(DataComponent.CreativeSlotLock, 17);
        Data.DataComponents.Add(DataComponent.CustomData, 0);
        Data.DataComponents.Add(DataComponent.CustomModelData, 14);
        Data.DataComponents.Add(DataComponent.CustomName, 5);
        Data.DataComponents.Add(DataComponent.Damage, 3);
        Data.DataComponents.Add(DataComponent.EnchantmentGlintOverride, 18);
        Data.DataComponents.Add(DataComponent.Enchantments, 10);
        Data.DataComponents.Add(DataComponent.Equippable, 28);
        Data.DataComponents.Add(DataComponent.Food, 20);
        Data.DataComponents.Add(DataComponent.IntangibleProjectile, 19);
        Data.DataComponents.Add(DataComponent.ItemModel, 7);
        Data.DataComponents.Add(DataComponent.ItemName, 6);
        Data.DataComponents.Add(DataComponent.Lore, 8);
        Data.DataComponents.Add(DataComponent.MaxDamage, 2);
        Data.DataComponents.Add(DataComponent.MaxStackSize, 1);
        Data.DataComponents.Add(DataComponent.Rarity, 9);
        Data.DataComponents.Add(DataComponent.RepairCost, 16);
        Data.DataComponents.Add(DataComponent.Tool, 25);
        Data.DataComponents.Add(DataComponent.TooltipDisplay, 15);
        Data.DataComponents.Add(DataComponent.Unbreakable, 4);

        Data.Items.Add(Item.AcaciaBoat);
        Data.Items.Add(Item.AcaciaButton);
        Data.Items.Add(Item.AcaciaChestBoat);
        Data.Items.Add(Item.AcaciaDoor);
        Data.Items.Add(Item.AcaciaFence);
        Data.Items.Add(Item.AcaciaFenceGate);
        Data.Items.Add(Item.AcaciaHangingSign);
        Data.Items.Add(Item.AcaciaLeaves);
        Data.Items.Add(Item.AcaciaLog);
        Data.Items.Add(Item.AcaciaPlanks);
        Data.Items.Add(Item.AcaciaPressurePlate);
        Data.Items.Add(Item.AcaciaSapling);
        Data.Items.Add(Item.AcaciaSign);
        Data.Items.Add(Item.AcaciaSlab);
        Data.Items.Add(Item.AcaciaStairs);
        Data.Items.Add(Item.AcaciaTrapdoor);
        Data.Items.Add(Item.AcaciaWood);
        Data.Items.Add(Item.ActivatorRail);
        Data.Items.Add(Item.Air);
        Data.Items.Add(Item.AllaySpawnEgg);
        Data.Items.Add(Item.Allium);
        Data.Items.Add(Item.AmethystBlock);
        Data.Items.Add(Item.AmethystCluster);
        Data.Items.Add(Item.AmethystShard);
        Data.Items.Add(Item.AncientDebris);
        Data.Items.Add(Item.Andesite);
        Data.Items.Add(Item.AndesiteSlab);
        Data.Items.Add(Item.AndesiteStairs);
        Data.Items.Add(Item.AndesiteWall);
        Data.Items.Add(Item.AnglerPotterySherd);
        Data.Items.Add(Item.Anvil);
        Data.Items.Add(Item.Apple);
        Data.Items.Add(Item.ArcherPotterySherd);
        Data.Items.Add(Item.ArmadilloScute);
        Data.Items.Add(Item.ArmadilloSpawnEgg);
        Data.Items.Add(Item.ArmorStand);
        Data.Items.Add(Item.ArmsUpPotterySherd);
        Data.Items.Add(Item.Arrow);
        Data.Items.Add(Item.AxolotlBucket);
        Data.Items.Add(Item.AxolotlSpawnEgg);
        Data.Items.Add(Item.Azalea);
        Data.Items.Add(Item.AzaleaLeaves);
        Data.Items.Add(Item.AzureBluet);
        Data.Items.Add(Item.BakedPotato);
        Data.Items.Add(Item.Bamboo);
        Data.Items.Add(Item.BambooBlock);
        Data.Items.Add(Item.BambooButton);
        Data.Items.Add(Item.BambooChestRaft);
        Data.Items.Add(Item.BambooDoor);
        Data.Items.Add(Item.BambooFence);
        Data.Items.Add(Item.BambooFenceGate);
        Data.Items.Add(Item.BambooHangingSign);
        Data.Items.Add(Item.BambooMosaic);
        Data.Items.Add(Item.BambooMosaicSlab);
        Data.Items.Add(Item.BambooMosaicStairs);
        Data.Items.Add(Item.BambooPlanks);
        Data.Items.Add(Item.BambooPressurePlate);
        Data.Items.Add(Item.BambooRaft);
        Data.Items.Add(Item.BambooSign);
        Data.Items.Add(Item.BambooSlab);
        Data.Items.Add(Item.BambooStairs);
        Data.Items.Add(Item.BambooTrapdoor);
        Data.Items.Add(Item.Barrel);
        Data.Items.Add(Item.Barrier);
        Data.Items.Add(Item.Basalt);
        Data.Items.Add(Item.BatSpawnEgg);
        Data.Items.Add(Item.Beacon);
        Data.Items.Add(Item.Bedrock);
        Data.Items.Add(Item.BeeNest);
        Data.Items.Add(Item.BeeSpawnEgg);
        Data.Items.Add(Item.Beef);
        Data.Items.Add(Item.Beehive);
        Data.Items.Add(Item.Beetroot);
        Data.Items.Add(Item.BeetrootSeeds);
        Data.Items.Add(Item.BeetrootSoup);
        Data.Items.Add(Item.Bell);
        Data.Items.Add(Item.BigDripleaf);
        Data.Items.Add(Item.BirchBoat);
        Data.Items.Add(Item.BirchButton);
        Data.Items.Add(Item.BirchChestBoat);
        Data.Items.Add(Item.BirchDoor);
        Data.Items.Add(Item.BirchFence);
        Data.Items.Add(Item.BirchFenceGate);
        Data.Items.Add(Item.BirchHangingSign);
        Data.Items.Add(Item.BirchLeaves);
        Data.Items.Add(Item.BirchLog);
        Data.Items.Add(Item.BirchPlanks);
        Data.Items.Add(Item.BirchPressurePlate);
        Data.Items.Add(Item.BirchSapling);
        Data.Items.Add(Item.BirchSign);
        Data.Items.Add(Item.BirchSlab);
        Data.Items.Add(Item.BirchStairs);
        Data.Items.Add(Item.BirchTrapdoor);
        Data.Items.Add(Item.BirchWood);
        Data.Items.Add(Item.BlackBanner);
        Data.Items.Add(Item.BlackBed);
        Data.Items.Add(Item.BlackBundle);
        Data.Items.Add(Item.BlackCandle);
        Data.Items.Add(Item.BlackCarpet);
        Data.Items.Add(Item.BlackConcrete);
        Data.Items.Add(Item.BlackConcretePowder);
        Data.Items.Add(Item.BlackDye);
        Data.Items.Add(Item.BlackGlazedTerracotta);
        Data.Items.Add(Item.BlackHarness);
        Data.Items.Add(Item.BlackShulkerBox);
        Data.Items.Add(Item.BlackStainedGlass);
        Data.Items.Add(Item.BlackStainedGlassPane);
        Data.Items.Add(Item.BlackTerracotta);
        Data.Items.Add(Item.BlackWool);
        Data.Items.Add(Item.Blackstone);
        Data.Items.Add(Item.BlackstoneSlab);
        Data.Items.Add(Item.BlackstoneStairs);
        Data.Items.Add(Item.BlackstoneWall);
        Data.Items.Add(Item.BladePotterySherd);
        Data.Items.Add(Item.BlastFurnace);
        Data.Items.Add(Item.BlazePowder);
        Data.Items.Add(Item.BlazeRod);
        Data.Items.Add(Item.BlazeSpawnEgg);
        Data.Items.Add(Item.BlueBanner);
        Data.Items.Add(Item.BlueBed);
        Data.Items.Add(Item.BlueBundle);
        Data.Items.Add(Item.BlueCandle);
        Data.Items.Add(Item.BlueCarpet);
        Data.Items.Add(Item.BlueConcrete);
        Data.Items.Add(Item.BlueConcretePowder);
        Data.Items.Add(Item.BlueDye);
        Data.Items.Add(Item.BlueEgg);
        Data.Items.Add(Item.BlueGlazedTerracotta);
        Data.Items.Add(Item.BlueHarness);
        Data.Items.Add(Item.BlueIce);
        Data.Items.Add(Item.BlueOrchid);
        Data.Items.Add(Item.BlueShulkerBox);
        Data.Items.Add(Item.BlueStainedGlass);
        Data.Items.Add(Item.BlueStainedGlassPane);
        Data.Items.Add(Item.BlueTerracotta);
        Data.Items.Add(Item.BlueWool);
        Data.Items.Add(Item.BoggedSpawnEgg);
        Data.Items.Add(Item.BoltArmorTrimSmithingTemplate);
        Data.Items.Add(Item.Bone);
        Data.Items.Add(Item.BoneBlock);
        Data.Items.Add(Item.BoneMeal);
        Data.Items.Add(Item.Book);
        Data.Items.Add(Item.Bookshelf);
        Data.Items.Add(Item.BordureIndentedBannerPattern);
        Data.Items.Add(Item.Bow);
        Data.Items.Add(Item.Bowl);
        Data.Items.Add(Item.BrainCoral);
        Data.Items.Add(Item.BrainCoralBlock);
        Data.Items.Add(Item.BrainCoralFan);
        Data.Items.Add(Item.Bread);
        Data.Items.Add(Item.BreezeRod);
        Data.Items.Add(Item.BreezeSpawnEgg);
        Data.Items.Add(Item.BrewerPotterySherd);
        Data.Items.Add(Item.BrewingStand);
        Data.Items.Add(Item.Brick);
        Data.Items.Add(Item.BrickSlab);
        Data.Items.Add(Item.BrickStairs);
        Data.Items.Add(Item.BrickWall);
        Data.Items.Add(Item.Bricks);
        Data.Items.Add(Item.BrownBanner);
        Data.Items.Add(Item.BrownBed);
        Data.Items.Add(Item.BrownBundle);
        Data.Items.Add(Item.BrownCandle);
        Data.Items.Add(Item.BrownCarpet);
        Data.Items.Add(Item.BrownConcrete);
        Data.Items.Add(Item.BrownConcretePowder);
        Data.Items.Add(Item.BrownDye);
        Data.Items.Add(Item.BrownEgg);
        Data.Items.Add(Item.BrownGlazedTerracotta);
        Data.Items.Add(Item.BrownHarness);
        Data.Items.Add(Item.BrownMushroom);
        Data.Items.Add(Item.BrownMushroomBlock);
        Data.Items.Add(Item.BrownShulkerBox);
        Data.Items.Add(Item.BrownStainedGlass);
        Data.Items.Add(Item.BrownStainedGlassPane);
        Data.Items.Add(Item.BrownTerracotta);
        Data.Items.Add(Item.BrownWool);
        Data.Items.Add(Item.Brush);
        Data.Items.Add(Item.BubbleCoral);
        Data.Items.Add(Item.BubbleCoralBlock);
        Data.Items.Add(Item.BubbleCoralFan);
        Data.Items.Add(Item.Bucket);
        Data.Items.Add(Item.BuddingAmethyst);
        Data.Items.Add(Item.Bundle);
        Data.Items.Add(Item.BurnPotterySherd);
        Data.Items.Add(Item.Bush);
        Data.Items.Add(Item.Cactus);
        Data.Items.Add(Item.CactusFlower);
        Data.Items.Add(Item.Cake);
        Data.Items.Add(Item.Calcite);
        Data.Items.Add(Item.CalibratedSculkSensor);
        Data.Items.Add(Item.CamelSpawnEgg);
        Data.Items.Add(Item.Campfire);
        Data.Items.Add(Item.Candle);
        Data.Items.Add(Item.Carrot);
        Data.Items.Add(Item.CarrotOnAStick);
        Data.Items.Add(Item.CartographyTable);
        Data.Items.Add(Item.CarvedPumpkin);
        Data.Items.Add(Item.CatSpawnEgg);
        Data.Items.Add(Item.Cauldron);
        Data.Items.Add(Item.CaveSpiderSpawnEgg);
        Data.Items.Add(Item.Chain);
        Data.Items.Add(Item.ChainCommandBlock);
        Data.Items.Add(Item.ChainmailBoots);
        Data.Items.Add(Item.ChainmailChestplate);
        Data.Items.Add(Item.ChainmailHelmet);
        Data.Items.Add(Item.ChainmailLeggings);
        Data.Items.Add(Item.Charcoal);
        Data.Items.Add(Item.CherryBoat);
        Data.Items.Add(Item.CherryButton);
        Data.Items.Add(Item.CherryChestBoat);
        Data.Items.Add(Item.CherryDoor);
        Data.Items.Add(Item.CherryFence);
        Data.Items.Add(Item.CherryFenceGate);
        Data.Items.Add(Item.CherryHangingSign);
        Data.Items.Add(Item.CherryLeaves);
        Data.Items.Add(Item.CherryLog);
        Data.Items.Add(Item.CherryPlanks);
        Data.Items.Add(Item.CherryPressurePlate);
        Data.Items.Add(Item.CherrySapling);
        Data.Items.Add(Item.CherrySign);
        Data.Items.Add(Item.CherrySlab);
        Data.Items.Add(Item.CherryStairs);
        Data.Items.Add(Item.CherryTrapdoor);
        Data.Items.Add(Item.CherryWood);
        Data.Items.Add(Item.Chest);
        Data.Items.Add(Item.ChestMinecart);
        Data.Items.Add(Item.Chicken);
        Data.Items.Add(Item.ChickenSpawnEgg);
        Data.Items.Add(Item.ChippedAnvil);
        Data.Items.Add(Item.ChiseledBookshelf);
        Data.Items.Add(Item.ChiseledCopper);
        Data.Items.Add(Item.ChiseledDeepslate);
        Data.Items.Add(Item.ChiseledNetherBricks);
        Data.Items.Add(Item.ChiseledPolishedBlackstone);
        Data.Items.Add(Item.ChiseledQuartzBlock);
        Data.Items.Add(Item.ChiseledRedSandstone);
        Data.Items.Add(Item.ChiseledResinBricks);
        Data.Items.Add(Item.ChiseledSandstone);
        Data.Items.Add(Item.ChiseledStoneBricks);
        Data.Items.Add(Item.ChiseledTuff);
        Data.Items.Add(Item.ChiseledTuffBricks);
        Data.Items.Add(Item.ChorusFlower);
        Data.Items.Add(Item.ChorusFruit);
        Data.Items.Add(Item.ChorusPlant);
        Data.Items.Add(Item.Clay);
        Data.Items.Add(Item.ClayBall);
        Data.Items.Add(Item.Clock);
        Data.Items.Add(Item.ClosedEyeblossom);
        Data.Items.Add(Item.Coal);
        Data.Items.Add(Item.CoalBlock);
        Data.Items.Add(Item.CoalOre);
        Data.Items.Add(Item.CoarseDirt);
        Data.Items.Add(Item.CoastArmorTrimSmithingTemplate);
        Data.Items.Add(Item.CobbledDeepslate);
        Data.Items.Add(Item.CobbledDeepslateSlab);
        Data.Items.Add(Item.CobbledDeepslateStairs);
        Data.Items.Add(Item.CobbledDeepslateWall);
        Data.Items.Add(Item.Cobblestone);
        Data.Items.Add(Item.CobblestoneSlab);
        Data.Items.Add(Item.CobblestoneStairs);
        Data.Items.Add(Item.CobblestoneWall);
        Data.Items.Add(Item.Cobweb);
        Data.Items.Add(Item.CocoaBeans);
        Data.Items.Add(Item.Cod);
        Data.Items.Add(Item.CodBucket);
        Data.Items.Add(Item.CodSpawnEgg);
        Data.Items.Add(Item.CommandBlock);
        Data.Items.Add(Item.CommandBlockMinecart);
        Data.Items.Add(Item.Comparator);
        Data.Items.Add(Item.Compass);
        Data.Items.Add(Item.Composter);
        Data.Items.Add(Item.Conduit);
        Data.Items.Add(Item.CookedBeef);
        Data.Items.Add(Item.CookedChicken);
        Data.Items.Add(Item.CookedCod);
        Data.Items.Add(Item.CookedMutton);
        Data.Items.Add(Item.CookedPorkchop);
        Data.Items.Add(Item.CookedRabbit);
        Data.Items.Add(Item.CookedSalmon);
        Data.Items.Add(Item.Cookie);
        Data.Items.Add(Item.CopperBlock);
        Data.Items.Add(Item.CopperBulb);
        Data.Items.Add(Item.CopperDoor);
        Data.Items.Add(Item.CopperGrate);
        Data.Items.Add(Item.CopperIngot);
        Data.Items.Add(Item.CopperOre);
        Data.Items.Add(Item.CopperTrapdoor);
        Data.Items.Add(Item.Cornflower);
        Data.Items.Add(Item.CowSpawnEgg);
        Data.Items.Add(Item.CrackedDeepslateBricks);
        Data.Items.Add(Item.CrackedDeepslateTiles);
        Data.Items.Add(Item.CrackedNetherBricks);
        Data.Items.Add(Item.CrackedPolishedBlackstoneBricks);
        Data.Items.Add(Item.CrackedStoneBricks);
        Data.Items.Add(Item.Crafter);
        Data.Items.Add(Item.CraftingTable);
        Data.Items.Add(Item.CreakingHeart);
        Data.Items.Add(Item.CreakingSpawnEgg);
        Data.Items.Add(Item.CreeperBannerPattern);
        Data.Items.Add(Item.CreeperHead);
        Data.Items.Add(Item.CreeperSpawnEgg);
        Data.Items.Add(Item.CrimsonButton);
        Data.Items.Add(Item.CrimsonDoor);
        Data.Items.Add(Item.CrimsonFence);
        Data.Items.Add(Item.CrimsonFenceGate);
        Data.Items.Add(Item.CrimsonFungus);
        Data.Items.Add(Item.CrimsonHangingSign);
        Data.Items.Add(Item.CrimsonHyphae);
        Data.Items.Add(Item.CrimsonNylium);
        Data.Items.Add(Item.CrimsonPlanks);
        Data.Items.Add(Item.CrimsonPressurePlate);
        Data.Items.Add(Item.CrimsonRoots);
        Data.Items.Add(Item.CrimsonSign);
        Data.Items.Add(Item.CrimsonSlab);
        Data.Items.Add(Item.CrimsonStairs);
        Data.Items.Add(Item.CrimsonStem);
        Data.Items.Add(Item.CrimsonTrapdoor);
        Data.Items.Add(Item.Crossbow);
        Data.Items.Add(Item.CryingObsidian);
        Data.Items.Add(Item.CutCopper);
        Data.Items.Add(Item.CutCopperSlab);
        Data.Items.Add(Item.CutCopperStairs);
        Data.Items.Add(Item.CutRedSandstone);
        Data.Items.Add(Item.CutRedSandstoneSlab);
        Data.Items.Add(Item.CutSandstone);
        Data.Items.Add(Item.CutSandstoneSlab);
        Data.Items.Add(Item.CyanBanner);
        Data.Items.Add(Item.CyanBed);
        Data.Items.Add(Item.CyanBundle);
        Data.Items.Add(Item.CyanCandle);
        Data.Items.Add(Item.CyanCarpet);
        Data.Items.Add(Item.CyanConcrete);
        Data.Items.Add(Item.CyanConcretePowder);
        Data.Items.Add(Item.CyanDye);
        Data.Items.Add(Item.CyanGlazedTerracotta);
        Data.Items.Add(Item.CyanHarness);
        Data.Items.Add(Item.CyanShulkerBox);
        Data.Items.Add(Item.CyanStainedGlass);
        Data.Items.Add(Item.CyanStainedGlassPane);
        Data.Items.Add(Item.CyanTerracotta);
        Data.Items.Add(Item.CyanWool);
        Data.Items.Add(Item.DamagedAnvil);
        Data.Items.Add(Item.Dandelion);
        Data.Items.Add(Item.DangerPotterySherd);
        Data.Items.Add(Item.DarkOakBoat);
        Data.Items.Add(Item.DarkOakButton);
        Data.Items.Add(Item.DarkOakChestBoat);
        Data.Items.Add(Item.DarkOakDoor);
        Data.Items.Add(Item.DarkOakFence);
        Data.Items.Add(Item.DarkOakFenceGate);
        Data.Items.Add(Item.DarkOakHangingSign);
        Data.Items.Add(Item.DarkOakLeaves);
        Data.Items.Add(Item.DarkOakLog);
        Data.Items.Add(Item.DarkOakPlanks);
        Data.Items.Add(Item.DarkOakPressurePlate);
        Data.Items.Add(Item.DarkOakSapling);
        Data.Items.Add(Item.DarkOakSign);
        Data.Items.Add(Item.DarkOakSlab);
        Data.Items.Add(Item.DarkOakStairs);
        Data.Items.Add(Item.DarkOakTrapdoor);
        Data.Items.Add(Item.DarkOakWood);
        Data.Items.Add(Item.DarkPrismarine);
        Data.Items.Add(Item.DarkPrismarineSlab);
        Data.Items.Add(Item.DarkPrismarineStairs);
        Data.Items.Add(Item.DaylightDetector);
        Data.Items.Add(Item.DeadBrainCoral);
        Data.Items.Add(Item.DeadBrainCoralBlock);
        Data.Items.Add(Item.DeadBrainCoralFan);
        Data.Items.Add(Item.DeadBubbleCoral);
        Data.Items.Add(Item.DeadBubbleCoralBlock);
        Data.Items.Add(Item.DeadBubbleCoralFan);
        Data.Items.Add(Item.DeadBush);
        Data.Items.Add(Item.DeadFireCoral);
        Data.Items.Add(Item.DeadFireCoralBlock);
        Data.Items.Add(Item.DeadFireCoralFan);
        Data.Items.Add(Item.DeadHornCoral);
        Data.Items.Add(Item.DeadHornCoralBlock);
        Data.Items.Add(Item.DeadHornCoralFan);
        Data.Items.Add(Item.DeadTubeCoral);
        Data.Items.Add(Item.DeadTubeCoralBlock);
        Data.Items.Add(Item.DeadTubeCoralFan);
        Data.Items.Add(Item.DebugStick);
        Data.Items.Add(Item.DecoratedPot);
        Data.Items.Add(Item.Deepslate);
        Data.Items.Add(Item.DeepslateBrickSlab);
        Data.Items.Add(Item.DeepslateBrickStairs);
        Data.Items.Add(Item.DeepslateBrickWall);
        Data.Items.Add(Item.DeepslateBricks);
        Data.Items.Add(Item.DeepslateCoalOre);
        Data.Items.Add(Item.DeepslateCopperOre);
        Data.Items.Add(Item.DeepslateDiamondOre);
        Data.Items.Add(Item.DeepslateEmeraldOre);
        Data.Items.Add(Item.DeepslateGoldOre);
        Data.Items.Add(Item.DeepslateIronOre);
        Data.Items.Add(Item.DeepslateLapisOre);
        Data.Items.Add(Item.DeepslateRedstoneOre);
        Data.Items.Add(Item.DeepslateTileSlab);
        Data.Items.Add(Item.DeepslateTileStairs);
        Data.Items.Add(Item.DeepslateTileWall);
        Data.Items.Add(Item.DeepslateTiles);
        Data.Items.Add(Item.DetectorRail);
        Data.Items.Add(Item.Diamond);
        Data.Items.Add(Item.DiamondAxe);
        Data.Items.Add(Item.DiamondBlock);
        Data.Items.Add(Item.DiamondBoots);
        Data.Items.Add(Item.DiamondChestplate);
        Data.Items.Add(Item.DiamondHelmet);
        Data.Items.Add(Item.DiamondHoe);
        Data.Items.Add(Item.DiamondHorseArmor);
        Data.Items.Add(Item.DiamondLeggings);
        Data.Items.Add(Item.DiamondOre);
        Data.Items.Add(Item.DiamondPickaxe);
        Data.Items.Add(Item.DiamondShovel);
        Data.Items.Add(Item.DiamondSword);
        Data.Items.Add(Item.Diorite);
        Data.Items.Add(Item.DioriteSlab);
        Data.Items.Add(Item.DioriteStairs);
        Data.Items.Add(Item.DioriteWall);
        Data.Items.Add(Item.Dirt);
        Data.Items.Add(Item.DirtPath);
        Data.Items.Add(Item.DiscFragment5);
        Data.Items.Add(Item.Dispenser);
        Data.Items.Add(Item.DolphinSpawnEgg);
        Data.Items.Add(Item.DonkeySpawnEgg);
        Data.Items.Add(Item.DragonBreath);
        Data.Items.Add(Item.DragonEgg);
        Data.Items.Add(Item.DragonHead);
        Data.Items.Add(Item.DriedGhast);
        Data.Items.Add(Item.DriedKelp);
        Data.Items.Add(Item.DriedKelpBlock);
        Data.Items.Add(Item.DripstoneBlock);
        Data.Items.Add(Item.Dropper);
        Data.Items.Add(Item.DrownedSpawnEgg);
        Data.Items.Add(Item.DuneArmorTrimSmithingTemplate);
        Data.Items.Add(Item.EchoShard);
        Data.Items.Add(Item.Egg);
        Data.Items.Add(Item.ElderGuardianSpawnEgg);
        Data.Items.Add(Item.Elytra);
        Data.Items.Add(Item.Emerald);
        Data.Items.Add(Item.EmeraldBlock);
        Data.Items.Add(Item.EmeraldOre);
        Data.Items.Add(Item.EnchantedBook);
        Data.Items.Add(Item.EnchantedGoldenApple);
        Data.Items.Add(Item.EnchantingTable);
        Data.Items.Add(Item.EndCrystal);
        Data.Items.Add(Item.EndPortalFrame);
        Data.Items.Add(Item.EndRod);
        Data.Items.Add(Item.EndStone);
        Data.Items.Add(Item.EndStoneBrickSlab);
        Data.Items.Add(Item.EndStoneBrickStairs);
        Data.Items.Add(Item.EndStoneBrickWall);
        Data.Items.Add(Item.EndStoneBricks);
        Data.Items.Add(Item.EnderChest);
        Data.Items.Add(Item.EnderDragonSpawnEgg);
        Data.Items.Add(Item.EnderEye);
        Data.Items.Add(Item.EnderPearl);
        Data.Items.Add(Item.EndermanSpawnEgg);
        Data.Items.Add(Item.EndermiteSpawnEgg);
        Data.Items.Add(Item.EvokerSpawnEgg);
        Data.Items.Add(Item.ExperienceBottle);
        Data.Items.Add(Item.ExplorerPotterySherd);
        Data.Items.Add(Item.ExposedChiseledCopper);
        Data.Items.Add(Item.ExposedCopper);
        Data.Items.Add(Item.ExposedCopperBulb);
        Data.Items.Add(Item.ExposedCopperDoor);
        Data.Items.Add(Item.ExposedCopperGrate);
        Data.Items.Add(Item.ExposedCopperTrapdoor);
        Data.Items.Add(Item.ExposedCutCopper);
        Data.Items.Add(Item.ExposedCutCopperSlab);
        Data.Items.Add(Item.ExposedCutCopperStairs);
        Data.Items.Add(Item.EyeArmorTrimSmithingTemplate);
        Data.Items.Add(Item.Farmland);
        Data.Items.Add(Item.Feather);
        Data.Items.Add(Item.FermentedSpiderEye);
        Data.Items.Add(Item.Fern);
        Data.Items.Add(Item.FieldMasonedBannerPattern);
        Data.Items.Add(Item.FilledMap);
        Data.Items.Add(Item.FireCharge);
        Data.Items.Add(Item.FireCoral);
        Data.Items.Add(Item.FireCoralBlock);
        Data.Items.Add(Item.FireCoralFan);
        Data.Items.Add(Item.FireflyBush);
        Data.Items.Add(Item.FireworkRocket);
        Data.Items.Add(Item.FireworkStar);
        Data.Items.Add(Item.FishingRod);
        Data.Items.Add(Item.FletchingTable);
        Data.Items.Add(Item.Flint);
        Data.Items.Add(Item.FlintAndSteel);
        Data.Items.Add(Item.FlowArmorTrimSmithingTemplate);
        Data.Items.Add(Item.FlowBannerPattern);
        Data.Items.Add(Item.FlowPotterySherd);
        Data.Items.Add(Item.FlowerBannerPattern);
        Data.Items.Add(Item.FlowerPot);
        Data.Items.Add(Item.FloweringAzalea);
        Data.Items.Add(Item.FloweringAzaleaLeaves);
        Data.Items.Add(Item.FoxSpawnEgg);
        Data.Items.Add(Item.FriendPotterySherd);
        Data.Items.Add(Item.FrogSpawnEgg);
        Data.Items.Add(Item.Frogspawn);
        Data.Items.Add(Item.Furnace);
        Data.Items.Add(Item.FurnaceMinecart);
        Data.Items.Add(Item.GhastSpawnEgg);
        Data.Items.Add(Item.GhastTear);
        Data.Items.Add(Item.GildedBlackstone);
        Data.Items.Add(Item.Glass);
        Data.Items.Add(Item.GlassBottle);
        Data.Items.Add(Item.GlassPane);
        Data.Items.Add(Item.GlisteringMelonSlice);
        Data.Items.Add(Item.GlobeBannerPattern);
        Data.Items.Add(Item.GlowBerries);
        Data.Items.Add(Item.GlowInkSac);
        Data.Items.Add(Item.GlowItemFrame);
        Data.Items.Add(Item.GlowLichen);
        Data.Items.Add(Item.GlowSquidSpawnEgg);
        Data.Items.Add(Item.Glowstone);
        Data.Items.Add(Item.GlowstoneDust);
        Data.Items.Add(Item.GoatHorn);
        Data.Items.Add(Item.GoatSpawnEgg);
        Data.Items.Add(Item.GoldBlock);
        Data.Items.Add(Item.GoldIngot);
        Data.Items.Add(Item.GoldNugget);
        Data.Items.Add(Item.GoldOre);
        Data.Items.Add(Item.GoldenApple);
        Data.Items.Add(Item.GoldenAxe);
        Data.Items.Add(Item.GoldenBoots);
        Data.Items.Add(Item.GoldenCarrot);
        Data.Items.Add(Item.GoldenChestplate);
        Data.Items.Add(Item.GoldenHelmet);
        Data.Items.Add(Item.GoldenHoe);
        Data.Items.Add(Item.GoldenHorseArmor);
        Data.Items.Add(Item.GoldenLeggings);
        Data.Items.Add(Item.GoldenPickaxe);
        Data.Items.Add(Item.GoldenShovel);
        Data.Items.Add(Item.GoldenSword);
        Data.Items.Add(Item.Granite);
        Data.Items.Add(Item.GraniteSlab);
        Data.Items.Add(Item.GraniteStairs);
        Data.Items.Add(Item.GraniteWall);
        Data.Items.Add(Item.GrassBlock);
        Data.Items.Add(Item.Gravel);
        Data.Items.Add(Item.GrayBanner);
        Data.Items.Add(Item.GrayBed);
        Data.Items.Add(Item.GrayBundle);
        Data.Items.Add(Item.GrayCandle);
        Data.Items.Add(Item.GrayCarpet);
        Data.Items.Add(Item.GrayConcrete);
        Data.Items.Add(Item.GrayConcretePowder);
        Data.Items.Add(Item.GrayDye);
        Data.Items.Add(Item.GrayGlazedTerracotta);
        Data.Items.Add(Item.GrayHarness);
        Data.Items.Add(Item.GrayShulkerBox);
        Data.Items.Add(Item.GrayStainedGlass);
        Data.Items.Add(Item.GrayStainedGlassPane);
        Data.Items.Add(Item.GrayTerracotta);
        Data.Items.Add(Item.GrayWool);
        Data.Items.Add(Item.GreenBanner);
        Data.Items.Add(Item.GreenBed);
        Data.Items.Add(Item.GreenBundle);
        Data.Items.Add(Item.GreenCandle);
        Data.Items.Add(Item.GreenCarpet);
        Data.Items.Add(Item.GreenConcrete);
        Data.Items.Add(Item.GreenConcretePowder);
        Data.Items.Add(Item.GreenDye);
        Data.Items.Add(Item.GreenGlazedTerracotta);
        Data.Items.Add(Item.GreenHarness);
        Data.Items.Add(Item.GreenShulkerBox);
        Data.Items.Add(Item.GreenStainedGlass);
        Data.Items.Add(Item.GreenStainedGlassPane);
        Data.Items.Add(Item.GreenTerracotta);
        Data.Items.Add(Item.GreenWool);
        Data.Items.Add(Item.Grindstone);
        Data.Items.Add(Item.GuardianSpawnEgg);
        Data.Items.Add(Item.Gunpowder);
        Data.Items.Add(Item.GusterBannerPattern);
        Data.Items.Add(Item.GusterPotterySherd);
        Data.Items.Add(Item.HangingRoots);
        Data.Items.Add(Item.HappyGhastSpawnEgg);
        Data.Items.Add(Item.HayBlock);
        Data.Items.Add(Item.HeartOfTheSea);
        Data.Items.Add(Item.HeartPotterySherd);
        Data.Items.Add(Item.HeartbreakPotterySherd);
        Data.Items.Add(Item.HeavyCore);
        Data.Items.Add(Item.HeavyWeightedPressurePlate);
        Data.Items.Add(Item.HoglinSpawnEgg);
        Data.Items.Add(Item.HoneyBlock);
        Data.Items.Add(Item.HoneyBottle);
        Data.Items.Add(Item.Honeycomb);
        Data.Items.Add(Item.HoneycombBlock);
        Data.Items.Add(Item.Hopper);
        Data.Items.Add(Item.HopperMinecart);
        Data.Items.Add(Item.HornCoral);
        Data.Items.Add(Item.HornCoralBlock);
        Data.Items.Add(Item.HornCoralFan);
        Data.Items.Add(Item.HorseSpawnEgg);
        Data.Items.Add(Item.HostArmorTrimSmithingTemplate);
        Data.Items.Add(Item.HowlPotterySherd);
        Data.Items.Add(Item.HuskSpawnEgg);
        Data.Items.Add(Item.Ice);
        Data.Items.Add(Item.InfestedChiseledStoneBricks);
        Data.Items.Add(Item.InfestedCobblestone);
        Data.Items.Add(Item.InfestedCrackedStoneBricks);
        Data.Items.Add(Item.InfestedDeepslate);
        Data.Items.Add(Item.InfestedMossyStoneBricks);
        Data.Items.Add(Item.InfestedStone);
        Data.Items.Add(Item.InfestedStoneBricks);
        Data.Items.Add(Item.InkSac);
        Data.Items.Add(Item.IronAxe);
        Data.Items.Add(Item.IronBars);
        Data.Items.Add(Item.IronBlock);
        Data.Items.Add(Item.IronBoots);
        Data.Items.Add(Item.IronChestplate);
        Data.Items.Add(Item.IronDoor);
        Data.Items.Add(Item.IronGolemSpawnEgg);
        Data.Items.Add(Item.IronHelmet);
        Data.Items.Add(Item.IronHoe);
        Data.Items.Add(Item.IronHorseArmor);
        Data.Items.Add(Item.IronIngot);
        Data.Items.Add(Item.IronLeggings);
        Data.Items.Add(Item.IronNugget);
        Data.Items.Add(Item.IronOre);
        Data.Items.Add(Item.IronPickaxe);
        Data.Items.Add(Item.IronShovel);
        Data.Items.Add(Item.IronSword);
        Data.Items.Add(Item.IronTrapdoor);
        Data.Items.Add(Item.ItemFrame);
        Data.Items.Add(Item.JackOLantern);
        Data.Items.Add(Item.Jigsaw);
        Data.Items.Add(Item.Jukebox);
        Data.Items.Add(Item.JungleBoat);
        Data.Items.Add(Item.JungleButton);
        Data.Items.Add(Item.JungleChestBoat);
        Data.Items.Add(Item.JungleDoor);
        Data.Items.Add(Item.JungleFence);
        Data.Items.Add(Item.JungleFenceGate);
        Data.Items.Add(Item.JungleHangingSign);
        Data.Items.Add(Item.JungleLeaves);
        Data.Items.Add(Item.JungleLog);
        Data.Items.Add(Item.JunglePlanks);
        Data.Items.Add(Item.JunglePressurePlate);
        Data.Items.Add(Item.JungleSapling);
        Data.Items.Add(Item.JungleSign);
        Data.Items.Add(Item.JungleSlab);
        Data.Items.Add(Item.JungleStairs);
        Data.Items.Add(Item.JungleTrapdoor);
        Data.Items.Add(Item.JungleWood);
        Data.Items.Add(Item.Kelp);
        Data.Items.Add(Item.KnowledgeBook);
        Data.Items.Add(Item.Ladder);
        Data.Items.Add(Item.Lantern);
        Data.Items.Add(Item.LapisBlock);
        Data.Items.Add(Item.LapisLazuli);
        Data.Items.Add(Item.LapisOre);
        Data.Items.Add(Item.LargeAmethystBud);
        Data.Items.Add(Item.LargeFern);
        Data.Items.Add(Item.LavaBucket);
        Data.Items.Add(Item.Lead);
        Data.Items.Add(Item.LeafLitter);
        Data.Items.Add(Item.Leather);
        Data.Items.Add(Item.LeatherBoots);
        Data.Items.Add(Item.LeatherChestplate);
        Data.Items.Add(Item.LeatherHelmet);
        Data.Items.Add(Item.LeatherHorseArmor);
        Data.Items.Add(Item.LeatherLeggings);
        Data.Items.Add(Item.Lectern);
        Data.Items.Add(Item.Lever);
        Data.Items.Add(Item.Light);
        Data.Items.Add(Item.LightBlueBanner);
        Data.Items.Add(Item.LightBlueBed);
        Data.Items.Add(Item.LightBlueBundle);
        Data.Items.Add(Item.LightBlueCandle);
        Data.Items.Add(Item.LightBlueCarpet);
        Data.Items.Add(Item.LightBlueConcrete);
        Data.Items.Add(Item.LightBlueConcretePowder);
        Data.Items.Add(Item.LightBlueDye);
        Data.Items.Add(Item.LightBlueGlazedTerracotta);
        Data.Items.Add(Item.LightBlueHarness);
        Data.Items.Add(Item.LightBlueShulkerBox);
        Data.Items.Add(Item.LightBlueStainedGlass);
        Data.Items.Add(Item.LightBlueStainedGlassPane);
        Data.Items.Add(Item.LightBlueTerracotta);
        Data.Items.Add(Item.LightBlueWool);
        Data.Items.Add(Item.LightGrayBanner);
        Data.Items.Add(Item.LightGrayBed);
        Data.Items.Add(Item.LightGrayBundle);
        Data.Items.Add(Item.LightGrayCandle);
        Data.Items.Add(Item.LightGrayCarpet);
        Data.Items.Add(Item.LightGrayConcrete);
        Data.Items.Add(Item.LightGrayConcretePowder);
        Data.Items.Add(Item.LightGrayDye);
        Data.Items.Add(Item.LightGrayGlazedTerracotta);
        Data.Items.Add(Item.LightGrayHarness);
        Data.Items.Add(Item.LightGrayShulkerBox);
        Data.Items.Add(Item.LightGrayStainedGlass);
        Data.Items.Add(Item.LightGrayStainedGlassPane);
        Data.Items.Add(Item.LightGrayTerracotta);
        Data.Items.Add(Item.LightGrayWool);
        Data.Items.Add(Item.LightWeightedPressurePlate);
        Data.Items.Add(Item.LightningRod);
        Data.Items.Add(Item.Lilac);
        Data.Items.Add(Item.LilyOfTheValley);
        Data.Items.Add(Item.LilyPad);
        Data.Items.Add(Item.LimeBanner);
        Data.Items.Add(Item.LimeBed);
        Data.Items.Add(Item.LimeBundle);
        Data.Items.Add(Item.LimeCandle);
        Data.Items.Add(Item.LimeCarpet);
        Data.Items.Add(Item.LimeConcrete);
        Data.Items.Add(Item.LimeConcretePowder);
        Data.Items.Add(Item.LimeDye);
        Data.Items.Add(Item.LimeGlazedTerracotta);
        Data.Items.Add(Item.LimeHarness);
        Data.Items.Add(Item.LimeShulkerBox);
        Data.Items.Add(Item.LimeStainedGlass);
        Data.Items.Add(Item.LimeStainedGlassPane);
        Data.Items.Add(Item.LimeTerracotta);
        Data.Items.Add(Item.LimeWool);
        Data.Items.Add(Item.LingeringPotion);
        Data.Items.Add(Item.LlamaSpawnEgg);
        Data.Items.Add(Item.Lodestone);
        Data.Items.Add(Item.Loom);
        Data.Items.Add(Item.Mace);
        Data.Items.Add(Item.MagentaBanner);
        Data.Items.Add(Item.MagentaBed);
        Data.Items.Add(Item.MagentaBundle);
        Data.Items.Add(Item.MagentaCandle);
        Data.Items.Add(Item.MagentaCarpet);
        Data.Items.Add(Item.MagentaConcrete);
        Data.Items.Add(Item.MagentaConcretePowder);
        Data.Items.Add(Item.MagentaDye);
        Data.Items.Add(Item.MagentaGlazedTerracotta);
        Data.Items.Add(Item.MagentaHarness);
        Data.Items.Add(Item.MagentaShulkerBox);
        Data.Items.Add(Item.MagentaStainedGlass);
        Data.Items.Add(Item.MagentaStainedGlassPane);
        Data.Items.Add(Item.MagentaTerracotta);
        Data.Items.Add(Item.MagentaWool);
        Data.Items.Add(Item.MagmaBlock);
        Data.Items.Add(Item.MagmaCream);
        Data.Items.Add(Item.MagmaCubeSpawnEgg);
        Data.Items.Add(Item.MangroveBoat);
        Data.Items.Add(Item.MangroveButton);
        Data.Items.Add(Item.MangroveChestBoat);
        Data.Items.Add(Item.MangroveDoor);
        Data.Items.Add(Item.MangroveFence);
        Data.Items.Add(Item.MangroveFenceGate);
        Data.Items.Add(Item.MangroveHangingSign);
        Data.Items.Add(Item.MangroveLeaves);
        Data.Items.Add(Item.MangroveLog);
        Data.Items.Add(Item.MangrovePlanks);
        Data.Items.Add(Item.MangrovePressurePlate);
        Data.Items.Add(Item.MangrovePropagule);
        Data.Items.Add(Item.MangroveRoots);
        Data.Items.Add(Item.MangroveSign);
        Data.Items.Add(Item.MangroveSlab);
        Data.Items.Add(Item.MangroveStairs);
        Data.Items.Add(Item.MangroveTrapdoor);
        Data.Items.Add(Item.MangroveWood);
        Data.Items.Add(Item.Map);
        Data.Items.Add(Item.MediumAmethystBud);
        Data.Items.Add(Item.Melon);
        Data.Items.Add(Item.MelonSeeds);
        Data.Items.Add(Item.MelonSlice);
        Data.Items.Add(Item.MilkBucket);
        Data.Items.Add(Item.Minecart);
        Data.Items.Add(Item.MinerPotterySherd);
        Data.Items.Add(Item.MojangBannerPattern);
        Data.Items.Add(Item.MooshroomSpawnEgg);
        Data.Items.Add(Item.MossBlock);
        Data.Items.Add(Item.MossCarpet);
        Data.Items.Add(Item.MossyCobblestone);
        Data.Items.Add(Item.MossyCobblestoneSlab);
        Data.Items.Add(Item.MossyCobblestoneStairs);
        Data.Items.Add(Item.MossyCobblestoneWall);
        Data.Items.Add(Item.MossyStoneBrickSlab);
        Data.Items.Add(Item.MossyStoneBrickStairs);
        Data.Items.Add(Item.MossyStoneBrickWall);
        Data.Items.Add(Item.MossyStoneBricks);
        Data.Items.Add(Item.MournerPotterySherd);
        Data.Items.Add(Item.Mud);
        Data.Items.Add(Item.MudBrickSlab);
        Data.Items.Add(Item.MudBrickStairs);
        Data.Items.Add(Item.MudBrickWall);
        Data.Items.Add(Item.MudBricks);
        Data.Items.Add(Item.MuddyMangroveRoots);
        Data.Items.Add(Item.MuleSpawnEgg);
        Data.Items.Add(Item.MushroomStem);
        Data.Items.Add(Item.MushroomStew);
        Data.Items.Add(Item.MusicDisc11);
        Data.Items.Add(Item.MusicDisc13);
        Data.Items.Add(Item.MusicDisc5);
        Data.Items.Add(Item.MusicDiscBlocks);
        Data.Items.Add(Item.MusicDiscCat);
        Data.Items.Add(Item.MusicDiscChirp);
        Data.Items.Add(Item.MusicDiscCreator);
        Data.Items.Add(Item.MusicDiscCreatorMusicBox);
        Data.Items.Add(Item.MusicDiscFar);
        Data.Items.Add(Item.MusicDiscLavaChicken);
        Data.Items.Add(Item.MusicDiscMall);
        Data.Items.Add(Item.MusicDiscMellohi);
        Data.Items.Add(Item.MusicDiscOtherside);
        Data.Items.Add(Item.MusicDiscPigstep);
        Data.Items.Add(Item.MusicDiscPrecipice);
        Data.Items.Add(Item.MusicDiscRelic);
        Data.Items.Add(Item.MusicDiscStal);
        Data.Items.Add(Item.MusicDiscStrad);
        Data.Items.Add(Item.MusicDiscTears);
        Data.Items.Add(Item.MusicDiscWait);
        Data.Items.Add(Item.MusicDiscWard);
        Data.Items.Add(Item.Mutton);
        Data.Items.Add(Item.Mycelium);
        Data.Items.Add(Item.NameTag);
        Data.Items.Add(Item.NautilusShell);
        Data.Items.Add(Item.NetherBrick);
        Data.Items.Add(Item.NetherBrickFence);
        Data.Items.Add(Item.NetherBrickSlab);
        Data.Items.Add(Item.NetherBrickStairs);
        Data.Items.Add(Item.NetherBrickWall);
        Data.Items.Add(Item.NetherBricks);
        Data.Items.Add(Item.NetherGoldOre);
        Data.Items.Add(Item.NetherQuartzOre);
        Data.Items.Add(Item.NetherSprouts);
        Data.Items.Add(Item.NetherStar);
        Data.Items.Add(Item.NetherWart);
        Data.Items.Add(Item.NetherWartBlock);
        Data.Items.Add(Item.NetheriteAxe);
        Data.Items.Add(Item.NetheriteBlock);
        Data.Items.Add(Item.NetheriteBoots);
        Data.Items.Add(Item.NetheriteChestplate);
        Data.Items.Add(Item.NetheriteHelmet);
        Data.Items.Add(Item.NetheriteHoe);
        Data.Items.Add(Item.NetheriteIngot);
        Data.Items.Add(Item.NetheriteLeggings);
        Data.Items.Add(Item.NetheritePickaxe);
        Data.Items.Add(Item.NetheriteScrap);
        Data.Items.Add(Item.NetheriteShovel);
        Data.Items.Add(Item.NetheriteSword);
        Data.Items.Add(Item.NetheriteUpgradeSmithingTemplate);
        Data.Items.Add(Item.Netherrack);
        Data.Items.Add(Item.NoteBlock);
        Data.Items.Add(Item.OakBoat);
        Data.Items.Add(Item.OakButton);
        Data.Items.Add(Item.OakChestBoat);
        Data.Items.Add(Item.OakDoor);
        Data.Items.Add(Item.OakFence);
        Data.Items.Add(Item.OakFenceGate);
        Data.Items.Add(Item.OakHangingSign);
        Data.Items.Add(Item.OakLeaves);
        Data.Items.Add(Item.OakLog);
        Data.Items.Add(Item.OakPlanks);
        Data.Items.Add(Item.OakPressurePlate);
        Data.Items.Add(Item.OakSapling);
        Data.Items.Add(Item.OakSign);
        Data.Items.Add(Item.OakSlab);
        Data.Items.Add(Item.OakStairs);
        Data.Items.Add(Item.OakTrapdoor);
        Data.Items.Add(Item.OakWood);
        Data.Items.Add(Item.Observer);
        Data.Items.Add(Item.Obsidian);
        Data.Items.Add(Item.OcelotSpawnEgg);
        Data.Items.Add(Item.OchreFroglight);
        Data.Items.Add(Item.OminousBottle);
        Data.Items.Add(Item.OminousTrialKey);
        Data.Items.Add(Item.OpenEyeblossom);
        Data.Items.Add(Item.OrangeBanner);
        Data.Items.Add(Item.OrangeBed);
        Data.Items.Add(Item.OrangeBundle);
        Data.Items.Add(Item.OrangeCandle);
        Data.Items.Add(Item.OrangeCarpet);
        Data.Items.Add(Item.OrangeConcrete);
        Data.Items.Add(Item.OrangeConcretePowder);
        Data.Items.Add(Item.OrangeDye);
        Data.Items.Add(Item.OrangeGlazedTerracotta);
        Data.Items.Add(Item.OrangeHarness);
        Data.Items.Add(Item.OrangeShulkerBox);
        Data.Items.Add(Item.OrangeStainedGlass);
        Data.Items.Add(Item.OrangeStainedGlassPane);
        Data.Items.Add(Item.OrangeTerracotta);
        Data.Items.Add(Item.OrangeTulip);
        Data.Items.Add(Item.OrangeWool);
        Data.Items.Add(Item.OxeyeDaisy);
        Data.Items.Add(Item.OxidizedChiseledCopper);
        Data.Items.Add(Item.OxidizedCopper);
        Data.Items.Add(Item.OxidizedCopperBulb);
        Data.Items.Add(Item.OxidizedCopperDoor);
        Data.Items.Add(Item.OxidizedCopperGrate);
        Data.Items.Add(Item.OxidizedCopperTrapdoor);
        Data.Items.Add(Item.OxidizedCutCopper);
        Data.Items.Add(Item.OxidizedCutCopperSlab);
        Data.Items.Add(Item.OxidizedCutCopperStairs);
        Data.Items.Add(Item.PackedIce);
        Data.Items.Add(Item.PackedMud);
        Data.Items.Add(Item.Painting);
        Data.Items.Add(Item.PaleHangingMoss);
        Data.Items.Add(Item.PaleMossBlock);
        Data.Items.Add(Item.PaleMossCarpet);
        Data.Items.Add(Item.PaleOakBoat);
        Data.Items.Add(Item.PaleOakButton);
        Data.Items.Add(Item.PaleOakChestBoat);
        Data.Items.Add(Item.PaleOakDoor);
        Data.Items.Add(Item.PaleOakFence);
        Data.Items.Add(Item.PaleOakFenceGate);
        Data.Items.Add(Item.PaleOakHangingSign);
        Data.Items.Add(Item.PaleOakLeaves);
        Data.Items.Add(Item.PaleOakLog);
        Data.Items.Add(Item.PaleOakPlanks);
        Data.Items.Add(Item.PaleOakPressurePlate);
        Data.Items.Add(Item.PaleOakSapling);
        Data.Items.Add(Item.PaleOakSign);
        Data.Items.Add(Item.PaleOakSlab);
        Data.Items.Add(Item.PaleOakStairs);
        Data.Items.Add(Item.PaleOakTrapdoor);
        Data.Items.Add(Item.PaleOakWood);
        Data.Items.Add(Item.PandaSpawnEgg);
        Data.Items.Add(Item.Paper);
        Data.Items.Add(Item.ParrotSpawnEgg);
        Data.Items.Add(Item.PearlescentFroglight);
        Data.Items.Add(Item.Peony);
        Data.Items.Add(Item.PetrifiedOakSlab);
        Data.Items.Add(Item.PhantomMembrane);
        Data.Items.Add(Item.PhantomSpawnEgg);
        Data.Items.Add(Item.PigSpawnEgg);
        Data.Items.Add(Item.PiglinBannerPattern);
        Data.Items.Add(Item.PiglinBruteSpawnEgg);
        Data.Items.Add(Item.PiglinHead);
        Data.Items.Add(Item.PiglinSpawnEgg);
        Data.Items.Add(Item.PillagerSpawnEgg);
        Data.Items.Add(Item.PinkBanner);
        Data.Items.Add(Item.PinkBed);
        Data.Items.Add(Item.PinkBundle);
        Data.Items.Add(Item.PinkCandle);
        Data.Items.Add(Item.PinkCarpet);
        Data.Items.Add(Item.PinkConcrete);
        Data.Items.Add(Item.PinkConcretePowder);
        Data.Items.Add(Item.PinkDye);
        Data.Items.Add(Item.PinkGlazedTerracotta);
        Data.Items.Add(Item.PinkHarness);
        Data.Items.Add(Item.PinkPetals);
        Data.Items.Add(Item.PinkShulkerBox);
        Data.Items.Add(Item.PinkStainedGlass);
        Data.Items.Add(Item.PinkStainedGlassPane);
        Data.Items.Add(Item.PinkTerracotta);
        Data.Items.Add(Item.PinkTulip);
        Data.Items.Add(Item.PinkWool);
        Data.Items.Add(Item.Piston);
        Data.Items.Add(Item.PitcherPlant);
        Data.Items.Add(Item.PitcherPod);
        Data.Items.Add(Item.PlayerHead);
        Data.Items.Add(Item.PlentyPotterySherd);
        Data.Items.Add(Item.Podzol);
        Data.Items.Add(Item.PointedDripstone);
        Data.Items.Add(Item.PoisonousPotato);
        Data.Items.Add(Item.PolarBearSpawnEgg);
        Data.Items.Add(Item.PolishedAndesite);
        Data.Items.Add(Item.PolishedAndesiteSlab);
        Data.Items.Add(Item.PolishedAndesiteStairs);
        Data.Items.Add(Item.PolishedBasalt);
        Data.Items.Add(Item.PolishedBlackstone);
        Data.Items.Add(Item.PolishedBlackstoneBrickSlab);
        Data.Items.Add(Item.PolishedBlackstoneBrickStairs);
        Data.Items.Add(Item.PolishedBlackstoneBrickWall);
        Data.Items.Add(Item.PolishedBlackstoneBricks);
        Data.Items.Add(Item.PolishedBlackstoneButton);
        Data.Items.Add(Item.PolishedBlackstonePressurePlate);
        Data.Items.Add(Item.PolishedBlackstoneSlab);
        Data.Items.Add(Item.PolishedBlackstoneStairs);
        Data.Items.Add(Item.PolishedBlackstoneWall);
        Data.Items.Add(Item.PolishedDeepslate);
        Data.Items.Add(Item.PolishedDeepslateSlab);
        Data.Items.Add(Item.PolishedDeepslateStairs);
        Data.Items.Add(Item.PolishedDeepslateWall);
        Data.Items.Add(Item.PolishedDiorite);
        Data.Items.Add(Item.PolishedDioriteSlab);
        Data.Items.Add(Item.PolishedDioriteStairs);
        Data.Items.Add(Item.PolishedGranite);
        Data.Items.Add(Item.PolishedGraniteSlab);
        Data.Items.Add(Item.PolishedGraniteStairs);
        Data.Items.Add(Item.PolishedTuff);
        Data.Items.Add(Item.PolishedTuffSlab);
        Data.Items.Add(Item.PolishedTuffStairs);
        Data.Items.Add(Item.PolishedTuffWall);
        Data.Items.Add(Item.PoppedChorusFruit);
        Data.Items.Add(Item.Poppy);
        Data.Items.Add(Item.Porkchop);
        Data.Items.Add(Item.Potato);
        Data.Items.Add(Item.Potion);
        Data.Items.Add(Item.PowderSnowBucket);
        Data.Items.Add(Item.PoweredRail);
        Data.Items.Add(Item.Prismarine);
        Data.Items.Add(Item.PrismarineBrickSlab);
        Data.Items.Add(Item.PrismarineBrickStairs);
        Data.Items.Add(Item.PrismarineBricks);
        Data.Items.Add(Item.PrismarineCrystals);
        Data.Items.Add(Item.PrismarineShard);
        Data.Items.Add(Item.PrismarineSlab);
        Data.Items.Add(Item.PrismarineStairs);
        Data.Items.Add(Item.PrismarineWall);
        Data.Items.Add(Item.PrizePotterySherd);
        Data.Items.Add(Item.Pufferfish);
        Data.Items.Add(Item.PufferfishBucket);
        Data.Items.Add(Item.PufferfishSpawnEgg);
        Data.Items.Add(Item.Pumpkin);
        Data.Items.Add(Item.PumpkinPie);
        Data.Items.Add(Item.PumpkinSeeds);
        Data.Items.Add(Item.PurpleBanner);
        Data.Items.Add(Item.PurpleBed);
        Data.Items.Add(Item.PurpleBundle);
        Data.Items.Add(Item.PurpleCandle);
        Data.Items.Add(Item.PurpleCarpet);
        Data.Items.Add(Item.PurpleConcrete);
        Data.Items.Add(Item.PurpleConcretePowder);
        Data.Items.Add(Item.PurpleDye);
        Data.Items.Add(Item.PurpleGlazedTerracotta);
        Data.Items.Add(Item.PurpleHarness);
        Data.Items.Add(Item.PurpleShulkerBox);
        Data.Items.Add(Item.PurpleStainedGlass);
        Data.Items.Add(Item.PurpleStainedGlassPane);
        Data.Items.Add(Item.PurpleTerracotta);
        Data.Items.Add(Item.PurpleWool);
        Data.Items.Add(Item.PurpurBlock);
        Data.Items.Add(Item.PurpurPillar);
        Data.Items.Add(Item.PurpurSlab);
        Data.Items.Add(Item.PurpurStairs);
        Data.Items.Add(Item.Quartz);
        Data.Items.Add(Item.QuartzBlock);
        Data.Items.Add(Item.QuartzBricks);
        Data.Items.Add(Item.QuartzPillar);
        Data.Items.Add(Item.QuartzSlab);
        Data.Items.Add(Item.QuartzStairs);
        Data.Items.Add(Item.Rabbit);
        Data.Items.Add(Item.RabbitFoot);
        Data.Items.Add(Item.RabbitHide);
        Data.Items.Add(Item.RabbitSpawnEgg);
        Data.Items.Add(Item.RabbitStew);
        Data.Items.Add(Item.Rail);
        Data.Items.Add(Item.RaiserArmorTrimSmithingTemplate);
        Data.Items.Add(Item.RavagerSpawnEgg);
        Data.Items.Add(Item.RawCopper);
        Data.Items.Add(Item.RawCopperBlock);
        Data.Items.Add(Item.RawGold);
        Data.Items.Add(Item.RawGoldBlock);
        Data.Items.Add(Item.RawIron);
        Data.Items.Add(Item.RawIronBlock);
        Data.Items.Add(Item.RecoveryCompass);
        Data.Items.Add(Item.RedBanner);
        Data.Items.Add(Item.RedBed);
        Data.Items.Add(Item.RedBundle);
        Data.Items.Add(Item.RedCandle);
        Data.Items.Add(Item.RedCarpet);
        Data.Items.Add(Item.RedConcrete);
        Data.Items.Add(Item.RedConcretePowder);
        Data.Items.Add(Item.RedDye);
        Data.Items.Add(Item.RedGlazedTerracotta);
        Data.Items.Add(Item.RedHarness);
        Data.Items.Add(Item.RedMushroom);
        Data.Items.Add(Item.RedMushroomBlock);
        Data.Items.Add(Item.RedNetherBrickSlab);
        Data.Items.Add(Item.RedNetherBrickStairs);
        Data.Items.Add(Item.RedNetherBrickWall);
        Data.Items.Add(Item.RedNetherBricks);
        Data.Items.Add(Item.RedSand);
        Data.Items.Add(Item.RedSandstone);
        Data.Items.Add(Item.RedSandstoneSlab);
        Data.Items.Add(Item.RedSandstoneStairs);
        Data.Items.Add(Item.RedSandstoneWall);
        Data.Items.Add(Item.RedShulkerBox);
        Data.Items.Add(Item.RedStainedGlass);
        Data.Items.Add(Item.RedStainedGlassPane);
        Data.Items.Add(Item.RedTerracotta);
        Data.Items.Add(Item.RedTulip);
        Data.Items.Add(Item.RedWool);
        Data.Items.Add(Item.Redstone);
        Data.Items.Add(Item.RedstoneBlock);
        Data.Items.Add(Item.RedstoneLamp);
        Data.Items.Add(Item.RedstoneOre);
        Data.Items.Add(Item.RedstoneTorch);
        Data.Items.Add(Item.ReinforcedDeepslate);
        Data.Items.Add(Item.Repeater);
        Data.Items.Add(Item.RepeatingCommandBlock);
        Data.Items.Add(Item.ResinBlock);
        Data.Items.Add(Item.ResinBrick);
        Data.Items.Add(Item.ResinBrickSlab);
        Data.Items.Add(Item.ResinBrickStairs);
        Data.Items.Add(Item.ResinBrickWall);
        Data.Items.Add(Item.ResinBricks);
        Data.Items.Add(Item.ResinClump);
        Data.Items.Add(Item.RespawnAnchor);
        Data.Items.Add(Item.RibArmorTrimSmithingTemplate);
        Data.Items.Add(Item.RootedDirt);
        Data.Items.Add(Item.RoseBush);
        Data.Items.Add(Item.RottenFlesh);
        Data.Items.Add(Item.Saddle);
        Data.Items.Add(Item.Salmon);
        Data.Items.Add(Item.SalmonBucket);
        Data.Items.Add(Item.SalmonSpawnEgg);
        Data.Items.Add(Item.Sand);
        Data.Items.Add(Item.Sandstone);
        Data.Items.Add(Item.SandstoneSlab);
        Data.Items.Add(Item.SandstoneStairs);
        Data.Items.Add(Item.SandstoneWall);
        Data.Items.Add(Item.Scaffolding);
        Data.Items.Add(Item.ScrapePotterySherd);
        Data.Items.Add(Item.Sculk);
        Data.Items.Add(Item.SculkCatalyst);
        Data.Items.Add(Item.SculkSensor);
        Data.Items.Add(Item.SculkShrieker);
        Data.Items.Add(Item.SculkVein);
        Data.Items.Add(Item.SeaLantern);
        Data.Items.Add(Item.SeaPickle);
        Data.Items.Add(Item.Seagrass);
        Data.Items.Add(Item.SentryArmorTrimSmithingTemplate);
        Data.Items.Add(Item.ShaperArmorTrimSmithingTemplate);
        Data.Items.Add(Item.SheafPotterySherd);
        Data.Items.Add(Item.Shears);
        Data.Items.Add(Item.SheepSpawnEgg);
        Data.Items.Add(Item.ShelterPotterySherd);
        Data.Items.Add(Item.Shield);
        Data.Items.Add(Item.ShortDryGrass);
        Data.Items.Add(Item.ShortGrass);
        Data.Items.Add(Item.Shroomlight);
        Data.Items.Add(Item.ShulkerBox);
        Data.Items.Add(Item.ShulkerShell);
        Data.Items.Add(Item.ShulkerSpawnEgg);
        Data.Items.Add(Item.SilenceArmorTrimSmithingTemplate);
        Data.Items.Add(Item.SilverfishSpawnEgg);
        Data.Items.Add(Item.SkeletonHorseSpawnEgg);
        Data.Items.Add(Item.SkeletonSkull);
        Data.Items.Add(Item.SkeletonSpawnEgg);
        Data.Items.Add(Item.SkullBannerPattern);
        Data.Items.Add(Item.SkullPotterySherd);
        Data.Items.Add(Item.SlimeBall);
        Data.Items.Add(Item.SlimeBlock);
        Data.Items.Add(Item.SlimeSpawnEgg);
        Data.Items.Add(Item.SmallAmethystBud);
        Data.Items.Add(Item.SmallDripleaf);
        Data.Items.Add(Item.SmithingTable);
        Data.Items.Add(Item.Smoker);
        Data.Items.Add(Item.SmoothBasalt);
        Data.Items.Add(Item.SmoothQuartz);
        Data.Items.Add(Item.SmoothQuartzSlab);
        Data.Items.Add(Item.SmoothQuartzStairs);
        Data.Items.Add(Item.SmoothRedSandstone);
        Data.Items.Add(Item.SmoothRedSandstoneSlab);
        Data.Items.Add(Item.SmoothRedSandstoneStairs);
        Data.Items.Add(Item.SmoothSandstone);
        Data.Items.Add(Item.SmoothSandstoneSlab);
        Data.Items.Add(Item.SmoothSandstoneStairs);
        Data.Items.Add(Item.SmoothStone);
        Data.Items.Add(Item.SmoothStoneSlab);
        Data.Items.Add(Item.SnifferEgg);
        Data.Items.Add(Item.SnifferSpawnEgg);
        Data.Items.Add(Item.SnortPotterySherd);
        Data.Items.Add(Item.SnoutArmorTrimSmithingTemplate);
        Data.Items.Add(Item.Snow);
        Data.Items.Add(Item.SnowBlock);
        Data.Items.Add(Item.SnowGolemSpawnEgg);
        Data.Items.Add(Item.Snowball);
        Data.Items.Add(Item.SoulCampfire);
        Data.Items.Add(Item.SoulLantern);
        Data.Items.Add(Item.SoulSand);
        Data.Items.Add(Item.SoulSoil);
        Data.Items.Add(Item.SoulTorch);
        Data.Items.Add(Item.Spawner);
        Data.Items.Add(Item.SpectralArrow);
        Data.Items.Add(Item.SpiderEye);
        Data.Items.Add(Item.SpiderSpawnEgg);
        Data.Items.Add(Item.SpireArmorTrimSmithingTemplate);
        Data.Items.Add(Item.SplashPotion);
        Data.Items.Add(Item.Sponge);
        Data.Items.Add(Item.SporeBlossom);
        Data.Items.Add(Item.SpruceBoat);
        Data.Items.Add(Item.SpruceButton);
        Data.Items.Add(Item.SpruceChestBoat);
        Data.Items.Add(Item.SpruceDoor);
        Data.Items.Add(Item.SpruceFence);
        Data.Items.Add(Item.SpruceFenceGate);
        Data.Items.Add(Item.SpruceHangingSign);
        Data.Items.Add(Item.SpruceLeaves);
        Data.Items.Add(Item.SpruceLog);
        Data.Items.Add(Item.SprucePlanks);
        Data.Items.Add(Item.SprucePressurePlate);
        Data.Items.Add(Item.SpruceSapling);
        Data.Items.Add(Item.SpruceSign);
        Data.Items.Add(Item.SpruceSlab);
        Data.Items.Add(Item.SpruceStairs);
        Data.Items.Add(Item.SpruceTrapdoor);
        Data.Items.Add(Item.SpruceWood);
        Data.Items.Add(Item.Spyglass);
        Data.Items.Add(Item.SquidSpawnEgg);
        Data.Items.Add(Item.Stick);
        Data.Items.Add(Item.StickyPiston);
        Data.Items.Add(Item.Stone);
        Data.Items.Add(Item.StoneAxe);
        Data.Items.Add(Item.StoneBrickSlab);
        Data.Items.Add(Item.StoneBrickStairs);
        Data.Items.Add(Item.StoneBrickWall);
        Data.Items.Add(Item.StoneBricks);
        Data.Items.Add(Item.StoneButton);
        Data.Items.Add(Item.StoneHoe);
        Data.Items.Add(Item.StonePickaxe);
        Data.Items.Add(Item.StonePressurePlate);
        Data.Items.Add(Item.StoneShovel);
        Data.Items.Add(Item.StoneSlab);
        Data.Items.Add(Item.StoneStairs);
        Data.Items.Add(Item.StoneSword);
        Data.Items.Add(Item.Stonecutter);
        Data.Items.Add(Item.StraySpawnEgg);
        Data.Items.Add(Item.StriderSpawnEgg);
        Data.Items.Add(Item.String);
        Data.Items.Add(Item.StrippedAcaciaLog);
        Data.Items.Add(Item.StrippedAcaciaWood);
        Data.Items.Add(Item.StrippedBambooBlock);
        Data.Items.Add(Item.StrippedBirchLog);
        Data.Items.Add(Item.StrippedBirchWood);
        Data.Items.Add(Item.StrippedCherryLog);
        Data.Items.Add(Item.StrippedCherryWood);
        Data.Items.Add(Item.StrippedCrimsonHyphae);
        Data.Items.Add(Item.StrippedCrimsonStem);
        Data.Items.Add(Item.StrippedDarkOakLog);
        Data.Items.Add(Item.StrippedDarkOakWood);
        Data.Items.Add(Item.StrippedJungleLog);
        Data.Items.Add(Item.StrippedJungleWood);
        Data.Items.Add(Item.StrippedMangroveLog);
        Data.Items.Add(Item.StrippedMangroveWood);
        Data.Items.Add(Item.StrippedOakLog);
        Data.Items.Add(Item.StrippedOakWood);
        Data.Items.Add(Item.StrippedPaleOakLog);
        Data.Items.Add(Item.StrippedPaleOakWood);
        Data.Items.Add(Item.StrippedSpruceLog);
        Data.Items.Add(Item.StrippedSpruceWood);
        Data.Items.Add(Item.StrippedWarpedHyphae);
        Data.Items.Add(Item.StrippedWarpedStem);
        Data.Items.Add(Item.StructureBlock);
        Data.Items.Add(Item.StructureVoid);
        Data.Items.Add(Item.Sugar);
        Data.Items.Add(Item.SugarCane);
        Data.Items.Add(Item.Sunflower);
        Data.Items.Add(Item.SuspiciousGravel);
        Data.Items.Add(Item.SuspiciousSand);
        Data.Items.Add(Item.SuspiciousStew);
        Data.Items.Add(Item.SweetBerries);
        Data.Items.Add(Item.TadpoleBucket);
        Data.Items.Add(Item.TadpoleSpawnEgg);
        Data.Items.Add(Item.TallDryGrass);
        Data.Items.Add(Item.TallGrass);
        Data.Items.Add(Item.Target);
        Data.Items.Add(Item.Terracotta);
        Data.Items.Add(Item.TestBlock);
        Data.Items.Add(Item.TestInstanceBlock);
        Data.Items.Add(Item.TideArmorTrimSmithingTemplate);
        Data.Items.Add(Item.TintedGlass);
        Data.Items.Add(Item.TippedArrow);
        Data.Items.Add(Item.Tnt);
        Data.Items.Add(Item.TntMinecart);
        Data.Items.Add(Item.Torch);
        Data.Items.Add(Item.Torchflower);
        Data.Items.Add(Item.TorchflowerSeeds);
        Data.Items.Add(Item.TotemOfUndying);
        Data.Items.Add(Item.TraderLlamaSpawnEgg);
        Data.Items.Add(Item.TrappedChest);
        Data.Items.Add(Item.TrialKey);
        Data.Items.Add(Item.TrialSpawner);
        Data.Items.Add(Item.Trident);
        Data.Items.Add(Item.TripwireHook);
        Data.Items.Add(Item.TropicalFish);
        Data.Items.Add(Item.TropicalFishBucket);
        Data.Items.Add(Item.TropicalFishSpawnEgg);
        Data.Items.Add(Item.TubeCoral);
        Data.Items.Add(Item.TubeCoralBlock);
        Data.Items.Add(Item.TubeCoralFan);
        Data.Items.Add(Item.Tuff);
        Data.Items.Add(Item.TuffBrickSlab);
        Data.Items.Add(Item.TuffBrickStairs);
        Data.Items.Add(Item.TuffBrickWall);
        Data.Items.Add(Item.TuffBricks);
        Data.Items.Add(Item.TuffSlab);
        Data.Items.Add(Item.TuffStairs);
        Data.Items.Add(Item.TuffWall);
        Data.Items.Add(Item.TurtleEgg);
        Data.Items.Add(Item.TurtleHelmet);
        Data.Items.Add(Item.TurtleScute);
        Data.Items.Add(Item.TurtleSpawnEgg);
        Data.Items.Add(Item.TwistingVines);
        Data.Items.Add(Item.Vault);
        Data.Items.Add(Item.VerdantFroglight);
        Data.Items.Add(Item.VexArmorTrimSmithingTemplate);
        Data.Items.Add(Item.VexSpawnEgg);
        Data.Items.Add(Item.VillagerSpawnEgg);
        Data.Items.Add(Item.VindicatorSpawnEgg);
        Data.Items.Add(Item.Vine);
        Data.Items.Add(Item.WanderingTraderSpawnEgg);
        Data.Items.Add(Item.WardArmorTrimSmithingTemplate);
        Data.Items.Add(Item.WardenSpawnEgg);
        Data.Items.Add(Item.WarpedButton);
        Data.Items.Add(Item.WarpedDoor);
        Data.Items.Add(Item.WarpedFence);
        Data.Items.Add(Item.WarpedFenceGate);
        Data.Items.Add(Item.WarpedFungus);
        Data.Items.Add(Item.WarpedFungusOnAStick);
        Data.Items.Add(Item.WarpedHangingSign);
        Data.Items.Add(Item.WarpedHyphae);
        Data.Items.Add(Item.WarpedNylium);
        Data.Items.Add(Item.WarpedPlanks);
        Data.Items.Add(Item.WarpedPressurePlate);
        Data.Items.Add(Item.WarpedRoots);
        Data.Items.Add(Item.WarpedSign);
        Data.Items.Add(Item.WarpedSlab);
        Data.Items.Add(Item.WarpedStairs);
        Data.Items.Add(Item.WarpedStem);
        Data.Items.Add(Item.WarpedTrapdoor);
        Data.Items.Add(Item.WarpedWartBlock);
        Data.Items.Add(Item.WaterBucket);
        Data.Items.Add(Item.WaxedChiseledCopper);
        Data.Items.Add(Item.WaxedCopperBlock);
        Data.Items.Add(Item.WaxedCopperBulb);
        Data.Items.Add(Item.WaxedCopperDoor);
        Data.Items.Add(Item.WaxedCopperGrate);
        Data.Items.Add(Item.WaxedCopperTrapdoor);
        Data.Items.Add(Item.WaxedCutCopper);
        Data.Items.Add(Item.WaxedCutCopperSlab);
        Data.Items.Add(Item.WaxedCutCopperStairs);
        Data.Items.Add(Item.WaxedExposedChiseledCopper);
        Data.Items.Add(Item.WaxedExposedCopper);
        Data.Items.Add(Item.WaxedExposedCopperBulb);
        Data.Items.Add(Item.WaxedExposedCopperDoor);
        Data.Items.Add(Item.WaxedExposedCopperGrate);
        Data.Items.Add(Item.WaxedExposedCopperTrapdoor);
        Data.Items.Add(Item.WaxedExposedCutCopper);
        Data.Items.Add(Item.WaxedExposedCutCopperSlab);
        Data.Items.Add(Item.WaxedExposedCutCopperStairs);
        Data.Items.Add(Item.WaxedOxidizedChiseledCopper);
        Data.Items.Add(Item.WaxedOxidizedCopper);
        Data.Items.Add(Item.WaxedOxidizedCopperBulb);
        Data.Items.Add(Item.WaxedOxidizedCopperDoor);
        Data.Items.Add(Item.WaxedOxidizedCopperGrate);
        Data.Items.Add(Item.WaxedOxidizedCopperTrapdoor);
        Data.Items.Add(Item.WaxedOxidizedCutCopper);
        Data.Items.Add(Item.WaxedOxidizedCutCopperSlab);
        Data.Items.Add(Item.WaxedOxidizedCutCopperStairs);
        Data.Items.Add(Item.WaxedWeatheredChiseledCopper);
        Data.Items.Add(Item.WaxedWeatheredCopper);
        Data.Items.Add(Item.WaxedWeatheredCopperBulb);
        Data.Items.Add(Item.WaxedWeatheredCopperDoor);
        Data.Items.Add(Item.WaxedWeatheredCopperGrate);
        Data.Items.Add(Item.WaxedWeatheredCopperTrapdoor);
        Data.Items.Add(Item.WaxedWeatheredCutCopper);
        Data.Items.Add(Item.WaxedWeatheredCutCopperSlab);
        Data.Items.Add(Item.WaxedWeatheredCutCopperStairs);
        Data.Items.Add(Item.WayfinderArmorTrimSmithingTemplate);
        Data.Items.Add(Item.WeatheredChiseledCopper);
        Data.Items.Add(Item.WeatheredCopper);
        Data.Items.Add(Item.WeatheredCopperBulb);
        Data.Items.Add(Item.WeatheredCopperDoor);
        Data.Items.Add(Item.WeatheredCopperGrate);
        Data.Items.Add(Item.WeatheredCopperTrapdoor);
        Data.Items.Add(Item.WeatheredCutCopper);
        Data.Items.Add(Item.WeatheredCutCopperSlab);
        Data.Items.Add(Item.WeatheredCutCopperStairs);
        Data.Items.Add(Item.WeepingVines);
        Data.Items.Add(Item.WetSponge);
        Data.Items.Add(Item.Wheat);
        Data.Items.Add(Item.WheatSeeds);
        Data.Items.Add(Item.WhiteBanner);
        Data.Items.Add(Item.WhiteBed);
        Data.Items.Add(Item.WhiteBundle);
        Data.Items.Add(Item.WhiteCandle);
        Data.Items.Add(Item.WhiteCarpet);
        Data.Items.Add(Item.WhiteConcrete);
        Data.Items.Add(Item.WhiteConcretePowder);
        Data.Items.Add(Item.WhiteDye);
        Data.Items.Add(Item.WhiteGlazedTerracotta);
        Data.Items.Add(Item.WhiteHarness);
        Data.Items.Add(Item.WhiteShulkerBox);
        Data.Items.Add(Item.WhiteStainedGlass);
        Data.Items.Add(Item.WhiteStainedGlassPane);
        Data.Items.Add(Item.WhiteTerracotta);
        Data.Items.Add(Item.WhiteTulip);
        Data.Items.Add(Item.WhiteWool);
        Data.Items.Add(Item.WildArmorTrimSmithingTemplate);
        Data.Items.Add(Item.Wildflowers);
        Data.Items.Add(Item.WindCharge);
        Data.Items.Add(Item.WitchSpawnEgg);
        Data.Items.Add(Item.WitherRose);
        Data.Items.Add(Item.WitherSkeletonSkull);
        Data.Items.Add(Item.WitherSkeletonSpawnEgg);
        Data.Items.Add(Item.WitherSpawnEgg);
        Data.Items.Add(Item.WolfArmor);
        Data.Items.Add(Item.WolfSpawnEgg);
        Data.Items.Add(Item.WoodenAxe);
        Data.Items.Add(Item.WoodenHoe);
        Data.Items.Add(Item.WoodenPickaxe);
        Data.Items.Add(Item.WoodenShovel);
        Data.Items.Add(Item.WoodenSword);
        Data.Items.Add(Item.WritableBook);
        Data.Items.Add(Item.WrittenBook);
        Data.Items.Add(Item.YellowBanner);
        Data.Items.Add(Item.YellowBed);
        Data.Items.Add(Item.YellowBundle);
        Data.Items.Add(Item.YellowCandle);
        Data.Items.Add(Item.YellowCarpet);
        Data.Items.Add(Item.YellowConcrete);
        Data.Items.Add(Item.YellowConcretePowder);
        Data.Items.Add(Item.YellowDye);
        Data.Items.Add(Item.YellowGlazedTerracotta);
        Data.Items.Add(Item.YellowHarness);
        Data.Items.Add(Item.YellowShulkerBox);
        Data.Items.Add(Item.YellowStainedGlass);
        Data.Items.Add(Item.YellowStainedGlassPane);
        Data.Items.Add(Item.YellowTerracotta);
        Data.Items.Add(Item.YellowWool);
        Data.Items.Add(Item.ZoglinSpawnEgg);
        Data.Items.Add(Item.ZombieHead);
        Data.Items.Add(Item.ZombieHorseSpawnEgg);
        Data.Items.Add(Item.ZombieSpawnEgg);
        Data.Items.Add(Item.ZombieVillagerSpawnEgg);
        Data.Items.Add(Item.ZombifiedPiglinSpawnEgg);

        Data.EntityTypes.Add(EntityType.AcaciaBoat);
        Data.EntityTypes.Add(EntityType.AcaciaChestBoat);
        Data.EntityTypes.Add(EntityType.Allay);
        Data.EntityTypes.Add(EntityType.AreaEffectCloud);
        Data.EntityTypes.Add(EntityType.Armadillo);
        Data.EntityTypes.Add(EntityType.ArmorStand);
        Data.EntityTypes.Add(EntityType.Arrow);
        Data.EntityTypes.Add(EntityType.Axolotl);
        Data.EntityTypes.Add(EntityType.BambooChestRaft);
        Data.EntityTypes.Add(EntityType.BambooRaft);
        Data.EntityTypes.Add(EntityType.Bat);
        Data.EntityTypes.Add(EntityType.Bee);
        Data.EntityTypes.Add(EntityType.BirchBoat);
        Data.EntityTypes.Add(EntityType.BirchChestBoat);
        Data.EntityTypes.Add(EntityType.Blaze);
        Data.EntityTypes.Add(EntityType.BlockDisplay);
        Data.EntityTypes.Add(EntityType.Bogged);
        Data.EntityTypes.Add(EntityType.Breeze);
        Data.EntityTypes.Add(EntityType.BreezeWindCharge);
        Data.EntityTypes.Add(EntityType.Camel);
        Data.EntityTypes.Add(EntityType.Cat);
        Data.EntityTypes.Add(EntityType.CaveSpider);
        Data.EntityTypes.Add(EntityType.CherryBoat);
        Data.EntityTypes.Add(EntityType.CherryChestBoat);
        Data.EntityTypes.Add(EntityType.ChestMinecart);
        Data.EntityTypes.Add(EntityType.Chicken);
        Data.EntityTypes.Add(EntityType.Cod);
        Data.EntityTypes.Add(EntityType.CommandBlockMinecart);
        Data.EntityTypes.Add(EntityType.Cow);
        Data.EntityTypes.Add(EntityType.Creaking);
        Data.EntityTypes.Add(EntityType.Creeper);
        Data.EntityTypes.Add(EntityType.DarkOakBoat);
        Data.EntityTypes.Add(EntityType.DarkOakChestBoat);
        Data.EntityTypes.Add(EntityType.Dolphin);
        Data.EntityTypes.Add(EntityType.Donkey);
        Data.EntityTypes.Add(EntityType.DragonFireball);
        Data.EntityTypes.Add(EntityType.Drowned);
        Data.EntityTypes.Add(EntityType.Egg);
        Data.EntityTypes.Add(EntityType.ElderGuardian);
        Data.EntityTypes.Add(EntityType.EndCrystal);
        Data.EntityTypes.Add(EntityType.EnderDragon);
        Data.EntityTypes.Add(EntityType.EnderPearl);
        Data.EntityTypes.Add(EntityType.Enderman);
        Data.EntityTypes.Add(EntityType.Endermite);
        Data.EntityTypes.Add(EntityType.Evoker);
        Data.EntityTypes.Add(EntityType.EvokerFangs);
        Data.EntityTypes.Add(EntityType.ExperienceBottle);
        Data.EntityTypes.Add(EntityType.ExperienceOrb);
        Data.EntityTypes.Add(EntityType.EyeOfEnder);
        Data.EntityTypes.Add(EntityType.FallingBlock);
        Data.EntityTypes.Add(EntityType.Fireball);
        Data.EntityTypes.Add(EntityType.FireworkRocket);
        Data.EntityTypes.Add(EntityType.FishingBobber);
        Data.EntityTypes.Add(EntityType.Fox);
        Data.EntityTypes.Add(EntityType.Frog);
        Data.EntityTypes.Add(EntityType.FurnaceMinecart);
        Data.EntityTypes.Add(EntityType.Ghast);
        Data.EntityTypes.Add(EntityType.Giant);
        Data.EntityTypes.Add(EntityType.GlowItemFrame);
        Data.EntityTypes.Add(EntityType.GlowSquid);
        Data.EntityTypes.Add(EntityType.Goat);
        Data.EntityTypes.Add(EntityType.Guardian);
        Data.EntityTypes.Add(EntityType.HappyGhast);
        Data.EntityTypes.Add(EntityType.Hoglin);
        Data.EntityTypes.Add(EntityType.HopperMinecart);
        Data.EntityTypes.Add(EntityType.Horse);
        Data.EntityTypes.Add(EntityType.Husk);
        Data.EntityTypes.Add(EntityType.Illusioner);
        Data.EntityTypes.Add(EntityType.Interaction);
        Data.EntityTypes.Add(EntityType.IronGolem);
        Data.EntityTypes.Add(EntityType.Item);
        Data.EntityTypes.Add(EntityType.ItemDisplay);
        Data.EntityTypes.Add(EntityType.ItemFrame);
        Data.EntityTypes.Add(EntityType.JungleBoat);
        Data.EntityTypes.Add(EntityType.JungleChestBoat);
        Data.EntityTypes.Add(EntityType.LeashKnot);
        Data.EntityTypes.Add(EntityType.LightningBolt);
        Data.EntityTypes.Add(EntityType.LingeringPotion);
        Data.EntityTypes.Add(EntityType.Llama);
        Data.EntityTypes.Add(EntityType.LlamaSpit);
        Data.EntityTypes.Add(EntityType.MagmaCube);
        Data.EntityTypes.Add(EntityType.MangroveBoat);
        Data.EntityTypes.Add(EntityType.MangroveChestBoat);
        Data.EntityTypes.Add(EntityType.Marker);
        Data.EntityTypes.Add(EntityType.Minecart);
        Data.EntityTypes.Add(EntityType.Mooshroom);
        Data.EntityTypes.Add(EntityType.Mule);
        Data.EntityTypes.Add(EntityType.OakBoat);
        Data.EntityTypes.Add(EntityType.OakChestBoat);
        Data.EntityTypes.Add(EntityType.Ocelot);
        Data.EntityTypes.Add(EntityType.OminousItemSpawner);
        Data.EntityTypes.Add(EntityType.Painting);
        Data.EntityTypes.Add(EntityType.PaleOakBoat);
        Data.EntityTypes.Add(EntityType.PaleOakChestBoat);
        Data.EntityTypes.Add(EntityType.Panda);
        Data.EntityTypes.Add(EntityType.Parrot);
        Data.EntityTypes.Add(EntityType.Phantom);
        Data.EntityTypes.Add(EntityType.Pig);
        Data.EntityTypes.Add(EntityType.Piglin);
        Data.EntityTypes.Add(EntityType.PiglinBrute);
        Data.EntityTypes.Add(EntityType.Pillager);
        Data.EntityTypes.Add(EntityType.Player);
        Data.EntityTypes.Add(EntityType.PolarBear);
        Data.EntityTypes.Add(EntityType.Pufferfish);
        Data.EntityTypes.Add(EntityType.Rabbit);
        Data.EntityTypes.Add(EntityType.Ravager);
        Data.EntityTypes.Add(EntityType.Salmon);
        Data.EntityTypes.Add(EntityType.Sheep);
        Data.EntityTypes.Add(EntityType.Shulker);
        Data.EntityTypes.Add(EntityType.ShulkerBullet);
        Data.EntityTypes.Add(EntityType.Silverfish);
        Data.EntityTypes.Add(EntityType.Skeleton);
        Data.EntityTypes.Add(EntityType.SkeletonHorse);
        Data.EntityTypes.Add(EntityType.Slime);
        Data.EntityTypes.Add(EntityType.SmallFireball);
        Data.EntityTypes.Add(EntityType.Sniffer);
        Data.EntityTypes.Add(EntityType.SnowGolem);
        Data.EntityTypes.Add(EntityType.Snowball);
        Data.EntityTypes.Add(EntityType.SpawnerMinecart);
        Data.EntityTypes.Add(EntityType.SpectralArrow);
        Data.EntityTypes.Add(EntityType.Spider);
        Data.EntityTypes.Add(EntityType.SplashPotion);
        Data.EntityTypes.Add(EntityType.SpruceBoat);
        Data.EntityTypes.Add(EntityType.SpruceChestBoat);
        Data.EntityTypes.Add(EntityType.Squid);
        Data.EntityTypes.Add(EntityType.Stray);
        Data.EntityTypes.Add(EntityType.Strider);
        Data.EntityTypes.Add(EntityType.Tadpole);
        Data.EntityTypes.Add(EntityType.TextDisplay);
        Data.EntityTypes.Add(EntityType.Tnt);
        Data.EntityTypes.Add(EntityType.TntMinecart);
        Data.EntityTypes.Add(EntityType.TraderLlama);
        Data.EntityTypes.Add(EntityType.Trident);
        Data.EntityTypes.Add(EntityType.TropicalFish);
        Data.EntityTypes.Add(EntityType.Turtle);
        Data.EntityTypes.Add(EntityType.Vex);
        Data.EntityTypes.Add(EntityType.Villager);
        Data.EntityTypes.Add(EntityType.Vindicator);
        Data.EntityTypes.Add(EntityType.WanderingTrader);
        Data.EntityTypes.Add(EntityType.Warden);
        Data.EntityTypes.Add(EntityType.WindCharge);
        Data.EntityTypes.Add(EntityType.Witch);
        Data.EntityTypes.Add(EntityType.Wither);
        Data.EntityTypes.Add(EntityType.WitherSkeleton);
        Data.EntityTypes.Add(EntityType.WitherSkull);
        Data.EntityTypes.Add(EntityType.Wolf);
        Data.EntityTypes.Add(EntityType.Zoglin);
        Data.EntityTypes.Add(EntityType.Zombie);
        Data.EntityTypes.Add(EntityType.ZombieHorse);
        Data.EntityTypes.Add(EntityType.ZombieVillager);
        Data.EntityTypes.Add(EntityType.ZombifiedPiglin);

        Data.SoundTypes.Add(SoundType.BasaltDeltasAdditions);
        Data.SoundTypes.Add(SoundType.BasaltDeltasLoop);
        Data.SoundTypes.Add(SoundType.BasaltDeltasMood);
        Data.SoundTypes.Add(SoundType.Cave);
        Data.SoundTypes.Add(SoundType.CrimsonForestAdditions);
        Data.SoundTypes.Add(SoundType.CrimsonForestLoop);
        Data.SoundTypes.Add(SoundType.CrimsonForestMood);
        Data.SoundTypes.Add(SoundType.NetherWastesAdditions);
        Data.SoundTypes.Add(SoundType.NetherWastesLoop);
        Data.SoundTypes.Add(SoundType.NetherWastesMood);
        Data.SoundTypes.Add(SoundType.SoulSandValleyAdditions);
        Data.SoundTypes.Add(SoundType.SoulSandValleyLoop);
        Data.SoundTypes.Add(SoundType.SoulSandValleyMood);
        Data.SoundTypes.Add(SoundType.UnderwaterEnter);
        Data.SoundTypes.Add(SoundType.UnderwaterExit);
        Data.SoundTypes.Add(SoundType.UnderwaterLoop);
        Data.SoundTypes.Add(SoundType.UnderwaterLoopAdditions);
        Data.SoundTypes.Add(SoundType.UnderwaterLoopAdditionsRare);
        Data.SoundTypes.Add(SoundType.UnderwaterLoopAdditionsUltraRare);
        Data.SoundTypes.Add(SoundType.WarpedForestAdditions);
        Data.SoundTypes.Add(SoundType.WarpedForestLoop);
        Data.SoundTypes.Add(SoundType.WarpedForestMood);
        Data.SoundTypes.Add(SoundType.AmethystBlockBreak);
        Data.SoundTypes.Add(SoundType.AmethystBlockChime);
        Data.SoundTypes.Add(SoundType.AmethystBlockFall);
        Data.SoundTypes.Add(SoundType.AmethystBlockHit);
        Data.SoundTypes.Add(SoundType.AmethystBlockPlace);
        Data.SoundTypes.Add(SoundType.AmethystBlockResonate);
        Data.SoundTypes.Add(SoundType.AmethystBlockStep);
        Data.SoundTypes.Add(SoundType.AmethystClusterBreak);
        Data.SoundTypes.Add(SoundType.AmethystClusterFall);
        Data.SoundTypes.Add(SoundType.AmethystClusterHit);
        Data.SoundTypes.Add(SoundType.AmethystClusterPlace);
        Data.SoundTypes.Add(SoundType.AmethystClusterStep);
        Data.SoundTypes.Add(SoundType.AncientDebrisBreak);
        Data.SoundTypes.Add(SoundType.AncientDebrisFall);
        Data.SoundTypes.Add(SoundType.AncientDebrisHit);
        Data.SoundTypes.Add(SoundType.AncientDebrisPlace);
        Data.SoundTypes.Add(SoundType.AncientDebrisStep);
        Data.SoundTypes.Add(SoundType.AnvilBreak);
        Data.SoundTypes.Add(SoundType.AnvilDestroy);
        Data.SoundTypes.Add(SoundType.AnvilFall);
        Data.SoundTypes.Add(SoundType.AnvilHit);
        Data.SoundTypes.Add(SoundType.AnvilLand);
        Data.SoundTypes.Add(SoundType.AnvilPlace);
        Data.SoundTypes.Add(SoundType.AnvilStep);
        Data.SoundTypes.Add(SoundType.AnvilUse);
        Data.SoundTypes.Add(SoundType.AzaleaBreak);
        Data.SoundTypes.Add(SoundType.AzaleaFall);
        Data.SoundTypes.Add(SoundType.AzaleaHit);
        Data.SoundTypes.Add(SoundType.AzaleaPlace);
        Data.SoundTypes.Add(SoundType.AzaleaStep);
        Data.SoundTypes.Add(SoundType.AzaleaLeavesBreak);
        Data.SoundTypes.Add(SoundType.AzaleaLeavesFall);
        Data.SoundTypes.Add(SoundType.AzaleaLeavesHit);
        Data.SoundTypes.Add(SoundType.AzaleaLeavesPlace);
        Data.SoundTypes.Add(SoundType.AzaleaLeavesStep);
        Data.SoundTypes.Add(SoundType.BambooBreak);
        Data.SoundTypes.Add(SoundType.BambooFall);
        Data.SoundTypes.Add(SoundType.BambooHit);
        Data.SoundTypes.Add(SoundType.BambooPlace);
        Data.SoundTypes.Add(SoundType.BambooStep);
        Data.SoundTypes.Add(SoundType.BambooSaplingBreak);
        Data.SoundTypes.Add(SoundType.BambooSaplingHit);
        Data.SoundTypes.Add(SoundType.BambooSaplingPlace);
        Data.SoundTypes.Add(SoundType.BambooWoodBreak);
        Data.SoundTypes.Add(SoundType.BambooWoodFall);
        Data.SoundTypes.Add(SoundType.BambooWoodHit);
        Data.SoundTypes.Add(SoundType.BambooWoodPlace);
        Data.SoundTypes.Add(SoundType.BambooWoodStep);
        Data.SoundTypes.Add(SoundType.BambooWoodButtonClickOff);
        Data.SoundTypes.Add(SoundType.BambooWoodButtonClickOn);
        Data.SoundTypes.Add(SoundType.BambooWoodDoorClose);
        Data.SoundTypes.Add(SoundType.BambooWoodDoorOpen);
        Data.SoundTypes.Add(SoundType.BambooWoodFenceGateClose);
        Data.SoundTypes.Add(SoundType.BambooWoodFenceGateOpen);
        Data.SoundTypes.Add(SoundType.BambooWoodHangingSignBreak);
        Data.SoundTypes.Add(SoundType.BambooWoodHangingSignFall);
        Data.SoundTypes.Add(SoundType.BambooWoodHangingSignHit);
        Data.SoundTypes.Add(SoundType.BambooWoodHangingSignPlace);
        Data.SoundTypes.Add(SoundType.BambooWoodHangingSignStep);
        Data.SoundTypes.Add(SoundType.BambooWoodPressurePlateClickOff);
        Data.SoundTypes.Add(SoundType.BambooWoodPressurePlateClickOn);
        Data.SoundTypes.Add(SoundType.BambooWoodTrapdoorClose);
        Data.SoundTypes.Add(SoundType.BambooWoodTrapdoorOpen);
        Data.SoundTypes.Add(SoundType.BarrelClose);
        Data.SoundTypes.Add(SoundType.BarrelOpen);
        Data.SoundTypes.Add(SoundType.BasaltBreak);
        Data.SoundTypes.Add(SoundType.BasaltFall);
        Data.SoundTypes.Add(SoundType.BasaltHit);
        Data.SoundTypes.Add(SoundType.BasaltPlace);
        Data.SoundTypes.Add(SoundType.BasaltStep);
        Data.SoundTypes.Add(SoundType.BeaconActivate);
        Data.SoundTypes.Add(SoundType.BeaconAmbient);
        Data.SoundTypes.Add(SoundType.BeaconDeactivate);
        Data.SoundTypes.Add(SoundType.BeaconPowerSelect);
        Data.SoundTypes.Add(SoundType.BeehiveDrip);
        Data.SoundTypes.Add(SoundType.BeehiveEnter);
        Data.SoundTypes.Add(SoundType.BeehiveExit);
        Data.SoundTypes.Add(SoundType.BeehiveShear);
        Data.SoundTypes.Add(SoundType.BeehiveWork);
        Data.SoundTypes.Add(SoundType.BellResonate);
        Data.SoundTypes.Add(SoundType.BellUse);
        Data.SoundTypes.Add(SoundType.BigDripleafBreak);
        Data.SoundTypes.Add(SoundType.BigDripleafFall);
        Data.SoundTypes.Add(SoundType.BigDripleafHit);
        Data.SoundTypes.Add(SoundType.BigDripleafPlace);
        Data.SoundTypes.Add(SoundType.BigDripleafStep);
        Data.SoundTypes.Add(SoundType.BigDripleafTiltDown);
        Data.SoundTypes.Add(SoundType.BigDripleafTiltUp);
        Data.SoundTypes.Add(SoundType.BlastfurnaceFireCrackle);
        Data.SoundTypes.Add(SoundType.BoneBlockBreak);
        Data.SoundTypes.Add(SoundType.BoneBlockFall);
        Data.SoundTypes.Add(SoundType.BoneBlockHit);
        Data.SoundTypes.Add(SoundType.BoneBlockPlace);
        Data.SoundTypes.Add(SoundType.BoneBlockStep);
        Data.SoundTypes.Add(SoundType.BrewingStandBrew);
        Data.SoundTypes.Add(SoundType.BubbleColumnBubblePop);
        Data.SoundTypes.Add(SoundType.BubbleColumnUpwardsAmbient);
        Data.SoundTypes.Add(SoundType.BubbleColumnUpwardsInside);
        Data.SoundTypes.Add(SoundType.BubbleColumnWhirlpoolAmbient);
        Data.SoundTypes.Add(SoundType.BubbleColumnWhirlpoolInside);
        Data.SoundTypes.Add(SoundType.CactusFlowerBreak);
        Data.SoundTypes.Add(SoundType.CactusFlowerPlace);
        Data.SoundTypes.Add(SoundType.CakeAddCandle);
        Data.SoundTypes.Add(SoundType.CalciteBreak);
        Data.SoundTypes.Add(SoundType.CalciteFall);
        Data.SoundTypes.Add(SoundType.CalciteHit);
        Data.SoundTypes.Add(SoundType.CalcitePlace);
        Data.SoundTypes.Add(SoundType.CalciteStep);
        Data.SoundTypes.Add(SoundType.CampfireCrackle);
        Data.SoundTypes.Add(SoundType.CandleAmbient);
        Data.SoundTypes.Add(SoundType.CandleBreak);
        Data.SoundTypes.Add(SoundType.CandleExtinguish);
        Data.SoundTypes.Add(SoundType.CandleFall);
        Data.SoundTypes.Add(SoundType.CandleHit);
        Data.SoundTypes.Add(SoundType.CandlePlace);
        Data.SoundTypes.Add(SoundType.CandleStep);
        Data.SoundTypes.Add(SoundType.CaveVinesBreak);
        Data.SoundTypes.Add(SoundType.CaveVinesFall);
        Data.SoundTypes.Add(SoundType.CaveVinesHit);
        Data.SoundTypes.Add(SoundType.CaveVinesPickBerries);
        Data.SoundTypes.Add(SoundType.CaveVinesPlace);
        Data.SoundTypes.Add(SoundType.CaveVinesStep);
        Data.SoundTypes.Add(SoundType.ChainBreak);
        Data.SoundTypes.Add(SoundType.ChainFall);
        Data.SoundTypes.Add(SoundType.ChainHit);
        Data.SoundTypes.Add(SoundType.ChainPlace);
        Data.SoundTypes.Add(SoundType.ChainStep);
        Data.SoundTypes.Add(SoundType.CherryLeavesBreak);
        Data.SoundTypes.Add(SoundType.CherryLeavesFall);
        Data.SoundTypes.Add(SoundType.CherryLeavesHit);
        Data.SoundTypes.Add(SoundType.CherryLeavesPlace);
        Data.SoundTypes.Add(SoundType.CherryLeavesStep);
        Data.SoundTypes.Add(SoundType.CherrySaplingBreak);
        Data.SoundTypes.Add(SoundType.CherrySaplingFall);
        Data.SoundTypes.Add(SoundType.CherrySaplingHit);
        Data.SoundTypes.Add(SoundType.CherrySaplingPlace);
        Data.SoundTypes.Add(SoundType.CherrySaplingStep);
        Data.SoundTypes.Add(SoundType.CherryWoodBreak);
        Data.SoundTypes.Add(SoundType.CherryWoodFall);
        Data.SoundTypes.Add(SoundType.CherryWoodHit);
        Data.SoundTypes.Add(SoundType.CherryWoodPlace);
        Data.SoundTypes.Add(SoundType.CherryWoodStep);
        Data.SoundTypes.Add(SoundType.CherryWoodButtonClickOff);
        Data.SoundTypes.Add(SoundType.CherryWoodButtonClickOn);
        Data.SoundTypes.Add(SoundType.CherryWoodDoorClose);
        Data.SoundTypes.Add(SoundType.CherryWoodDoorOpen);
        Data.SoundTypes.Add(SoundType.CherryWoodFenceGateClose);
        Data.SoundTypes.Add(SoundType.CherryWoodFenceGateOpen);
        Data.SoundTypes.Add(SoundType.CherryWoodHangingSignBreak);
        Data.SoundTypes.Add(SoundType.CherryWoodHangingSignFall);
        Data.SoundTypes.Add(SoundType.CherryWoodHangingSignHit);
        Data.SoundTypes.Add(SoundType.CherryWoodHangingSignPlace);
        Data.SoundTypes.Add(SoundType.CherryWoodHangingSignStep);
        Data.SoundTypes.Add(SoundType.CherryWoodPressurePlateClickOff);
        Data.SoundTypes.Add(SoundType.CherryWoodPressurePlateClickOn);
        Data.SoundTypes.Add(SoundType.CherryWoodTrapdoorClose);
        Data.SoundTypes.Add(SoundType.CherryWoodTrapdoorOpen);
        Data.SoundTypes.Add(SoundType.ChestClose);
        Data.SoundTypes.Add(SoundType.ChestLocked);
        Data.SoundTypes.Add(SoundType.ChestOpen);
        Data.SoundTypes.Add(SoundType.ChiseledBookshelfBreak);
        Data.SoundTypes.Add(SoundType.ChiseledBookshelfFall);
        Data.SoundTypes.Add(SoundType.ChiseledBookshelfHit);
        Data.SoundTypes.Add(SoundType.ChiseledBookshelfInsert);
        Data.SoundTypes.Add(SoundType.ChiseledBookshelfInsertEnchanted);
        Data.SoundTypes.Add(SoundType.ChiseledBookshelfPickup);
        Data.SoundTypes.Add(SoundType.ChiseledBookshelfPickupEnchanted);
        Data.SoundTypes.Add(SoundType.ChiseledBookshelfPlace);
        Data.SoundTypes.Add(SoundType.ChiseledBookshelfStep);
        Data.SoundTypes.Add(SoundType.ChorusFlowerDeath);
        Data.SoundTypes.Add(SoundType.ChorusFlowerGrow);
        Data.SoundTypes.Add(SoundType.CobwebBreak);
        Data.SoundTypes.Add(SoundType.CobwebFall);
        Data.SoundTypes.Add(SoundType.CobwebHit);
        Data.SoundTypes.Add(SoundType.CobwebPlace);
        Data.SoundTypes.Add(SoundType.CobwebStep);
        Data.SoundTypes.Add(SoundType.ComparatorClick);
        Data.SoundTypes.Add(SoundType.ComposterEmpty);
        Data.SoundTypes.Add(SoundType.ComposterFill);
        Data.SoundTypes.Add(SoundType.ComposterFillSuccess);
        Data.SoundTypes.Add(SoundType.ComposterReady);
        Data.SoundTypes.Add(SoundType.ConduitActivate);
        Data.SoundTypes.Add(SoundType.ConduitAmbient);
        Data.SoundTypes.Add(SoundType.ConduitAmbientShort);
        Data.SoundTypes.Add(SoundType.ConduitAttackTarget);
        Data.SoundTypes.Add(SoundType.ConduitDeactivate);
        Data.SoundTypes.Add(SoundType.CopperBreak);
        Data.SoundTypes.Add(SoundType.CopperFall);
        Data.SoundTypes.Add(SoundType.CopperHit);
        Data.SoundTypes.Add(SoundType.CopperPlace);
        Data.SoundTypes.Add(SoundType.CopperStep);
        Data.SoundTypes.Add(SoundType.CopperBulbBreak);
        Data.SoundTypes.Add(SoundType.CopperBulbFall);
        Data.SoundTypes.Add(SoundType.CopperBulbHit);
        Data.SoundTypes.Add(SoundType.CopperBulbPlace);
        Data.SoundTypes.Add(SoundType.CopperBulbStep);
        Data.SoundTypes.Add(SoundType.CopperBulbTurnOff);
        Data.SoundTypes.Add(SoundType.CopperBulbTurnOn);
        Data.SoundTypes.Add(SoundType.CopperDoorClose);
        Data.SoundTypes.Add(SoundType.CopperDoorOpen);
        Data.SoundTypes.Add(SoundType.CopperGrateBreak);
        Data.SoundTypes.Add(SoundType.CopperGrateFall);
        Data.SoundTypes.Add(SoundType.CopperGrateHit);
        Data.SoundTypes.Add(SoundType.CopperGratePlace);
        Data.SoundTypes.Add(SoundType.CopperGrateStep);
        Data.SoundTypes.Add(SoundType.CopperTrapdoorClose);
        Data.SoundTypes.Add(SoundType.CopperTrapdoorOpen);
        Data.SoundTypes.Add(SoundType.CoralBlockBreak);
        Data.SoundTypes.Add(SoundType.CoralBlockFall);
        Data.SoundTypes.Add(SoundType.CoralBlockHit);
        Data.SoundTypes.Add(SoundType.CoralBlockPlace);
        Data.SoundTypes.Add(SoundType.CoralBlockStep);
        Data.SoundTypes.Add(SoundType.CrafterCraft);
        Data.SoundTypes.Add(SoundType.CrafterFail);
        Data.SoundTypes.Add(SoundType.CreakingHeartBreak);
        Data.SoundTypes.Add(SoundType.CreakingHeartFall);
        Data.SoundTypes.Add(SoundType.CreakingHeartHit);
        Data.SoundTypes.Add(SoundType.CreakingHeartHurt);
        Data.SoundTypes.Add(SoundType.CreakingHeartIdle);
        Data.SoundTypes.Add(SoundType.CreakingHeartPlace);
        Data.SoundTypes.Add(SoundType.CreakingHeartSpawn);
        Data.SoundTypes.Add(SoundType.CreakingHeartStep);
        Data.SoundTypes.Add(SoundType.CropBreak);
        Data.SoundTypes.Add(SoundType.DeadbushIdle);
        Data.SoundTypes.Add(SoundType.DecoratedPotBreak);
        Data.SoundTypes.Add(SoundType.DecoratedPotFall);
        Data.SoundTypes.Add(SoundType.DecoratedPotHit);
        Data.SoundTypes.Add(SoundType.DecoratedPotInsert);
        Data.SoundTypes.Add(SoundType.DecoratedPotInsertFail);
        Data.SoundTypes.Add(SoundType.DecoratedPotPlace);
        Data.SoundTypes.Add(SoundType.DecoratedPotShatter);
        Data.SoundTypes.Add(SoundType.DecoratedPotStep);
        Data.SoundTypes.Add(SoundType.DeepslateBreak);
        Data.SoundTypes.Add(SoundType.DeepslateFall);
        Data.SoundTypes.Add(SoundType.DeepslateHit);
        Data.SoundTypes.Add(SoundType.DeepslatePlace);
        Data.SoundTypes.Add(SoundType.DeepslateStep);
        Data.SoundTypes.Add(SoundType.DeepslateBricksBreak);
        Data.SoundTypes.Add(SoundType.DeepslateBricksFall);
        Data.SoundTypes.Add(SoundType.DeepslateBricksHit);
        Data.SoundTypes.Add(SoundType.DeepslateBricksPlace);
        Data.SoundTypes.Add(SoundType.DeepslateBricksStep);
        Data.SoundTypes.Add(SoundType.DeepslateTilesBreak);
        Data.SoundTypes.Add(SoundType.DeepslateTilesFall);
        Data.SoundTypes.Add(SoundType.DeepslateTilesHit);
        Data.SoundTypes.Add(SoundType.DeepslateTilesPlace);
        Data.SoundTypes.Add(SoundType.DeepslateTilesStep);
        Data.SoundTypes.Add(SoundType.DispenserDispense);
        Data.SoundTypes.Add(SoundType.DispenserFail);
        Data.SoundTypes.Add(SoundType.DispenserLaunch);
        Data.SoundTypes.Add(SoundType.DriedGhastAmbient);
        Data.SoundTypes.Add(SoundType.DriedGhastAmbientWater);
        Data.SoundTypes.Add(SoundType.DriedGhastBreak);
        Data.SoundTypes.Add(SoundType.DriedGhastFall);
        Data.SoundTypes.Add(SoundType.DriedGhastPlace);
        Data.SoundTypes.Add(SoundType.DriedGhastPlaceInWater);
        Data.SoundTypes.Add(SoundType.DriedGhastStep);
        Data.SoundTypes.Add(SoundType.DriedGhastTransition);
        Data.SoundTypes.Add(SoundType.DripstoneBlockBreak);
        Data.SoundTypes.Add(SoundType.DripstoneBlockFall);
        Data.SoundTypes.Add(SoundType.DripstoneBlockHit);
        Data.SoundTypes.Add(SoundType.DripstoneBlockPlace);
        Data.SoundTypes.Add(SoundType.DripstoneBlockStep);
        Data.SoundTypes.Add(SoundType.DryGrassAmbient);
        Data.SoundTypes.Add(SoundType.EnchantmentTableUse);
        Data.SoundTypes.Add(SoundType.EndGatewaySpawn);
        Data.SoundTypes.Add(SoundType.EndPortalSpawn);
        Data.SoundTypes.Add(SoundType.EndPortalFrameFill);
        Data.SoundTypes.Add(SoundType.EnderChestClose);
        Data.SoundTypes.Add(SoundType.EnderChestOpen);
        Data.SoundTypes.Add(SoundType.EyeblossomClose);
        Data.SoundTypes.Add(SoundType.EyeblossomCloseLong);
        Data.SoundTypes.Add(SoundType.EyeblossomIdle);
        Data.SoundTypes.Add(SoundType.EyeblossomOpen);
        Data.SoundTypes.Add(SoundType.EyeblossomOpenLong);
        Data.SoundTypes.Add(SoundType.FenceGateClose);
        Data.SoundTypes.Add(SoundType.FenceGateOpen);
        Data.SoundTypes.Add(SoundType.FireAmbient);
        Data.SoundTypes.Add(SoundType.FireExtinguish);
        Data.SoundTypes.Add(SoundType.FireflyBushIdle);
        Data.SoundTypes.Add(SoundType.FloweringAzaleaBreak);
        Data.SoundTypes.Add(SoundType.FloweringAzaleaFall);
        Data.SoundTypes.Add(SoundType.FloweringAzaleaHit);
        Data.SoundTypes.Add(SoundType.FloweringAzaleaPlace);
        Data.SoundTypes.Add(SoundType.FloweringAzaleaStep);
        Data.SoundTypes.Add(SoundType.FroglightBreak);
        Data.SoundTypes.Add(SoundType.FroglightFall);
        Data.SoundTypes.Add(SoundType.FroglightHit);
        Data.SoundTypes.Add(SoundType.FroglightPlace);
        Data.SoundTypes.Add(SoundType.FroglightStep);
        Data.SoundTypes.Add(SoundType.FrogspawnBreak);
        Data.SoundTypes.Add(SoundType.FrogspawnFall);
        Data.SoundTypes.Add(SoundType.FrogspawnHatch);
        Data.SoundTypes.Add(SoundType.FrogspawnHit);
        Data.SoundTypes.Add(SoundType.FrogspawnPlace);
        Data.SoundTypes.Add(SoundType.FrogspawnStep);
        Data.SoundTypes.Add(SoundType.FungusBreak);
        Data.SoundTypes.Add(SoundType.FungusFall);
        Data.SoundTypes.Add(SoundType.FungusHit);
        Data.SoundTypes.Add(SoundType.FungusPlace);
        Data.SoundTypes.Add(SoundType.FungusStep);
        Data.SoundTypes.Add(SoundType.FurnaceFireCrackle);
        Data.SoundTypes.Add(SoundType.GildedBlackstoneBreak);
        Data.SoundTypes.Add(SoundType.GildedBlackstoneFall);
        Data.SoundTypes.Add(SoundType.GildedBlackstoneHit);
        Data.SoundTypes.Add(SoundType.GildedBlackstonePlace);
        Data.SoundTypes.Add(SoundType.GildedBlackstoneStep);
        Data.SoundTypes.Add(SoundType.GlassBreak);
        Data.SoundTypes.Add(SoundType.GlassFall);
        Data.SoundTypes.Add(SoundType.GlassHit);
        Data.SoundTypes.Add(SoundType.GlassPlace);
        Data.SoundTypes.Add(SoundType.GlassStep);
        Data.SoundTypes.Add(SoundType.GrassBreak);
        Data.SoundTypes.Add(SoundType.GrassFall);
        Data.SoundTypes.Add(SoundType.GrassHit);
        Data.SoundTypes.Add(SoundType.GrassPlace);
        Data.SoundTypes.Add(SoundType.GrassStep);
        Data.SoundTypes.Add(SoundType.GravelBreak);
        Data.SoundTypes.Add(SoundType.GravelFall);
        Data.SoundTypes.Add(SoundType.GravelHit);
        Data.SoundTypes.Add(SoundType.GravelPlace);
        Data.SoundTypes.Add(SoundType.GravelStep);
        Data.SoundTypes.Add(SoundType.GrindstoneUse);
        Data.SoundTypes.Add(SoundType.GrowingPlantCrop);
        Data.SoundTypes.Add(SoundType.HangingRootsBreak);
        Data.SoundTypes.Add(SoundType.HangingRootsFall);
        Data.SoundTypes.Add(SoundType.HangingRootsHit);
        Data.SoundTypes.Add(SoundType.HangingRootsPlace);
        Data.SoundTypes.Add(SoundType.HangingRootsStep);
        Data.SoundTypes.Add(SoundType.HangingSignBreak);
        Data.SoundTypes.Add(SoundType.HangingSignFall);
        Data.SoundTypes.Add(SoundType.HangingSignHit);
        Data.SoundTypes.Add(SoundType.HangingSignPlace);
        Data.SoundTypes.Add(SoundType.HangingSignStep);
        Data.SoundTypes.Add(SoundType.HangingSignWaxedInteractFail);
        Data.SoundTypes.Add(SoundType.HeavyCoreBreak);
        Data.SoundTypes.Add(SoundType.HeavyCoreFall);
        Data.SoundTypes.Add(SoundType.HeavyCoreHit);
        Data.SoundTypes.Add(SoundType.HeavyCorePlace);
        Data.SoundTypes.Add(SoundType.HeavyCoreStep);
        Data.SoundTypes.Add(SoundType.HoneyBlockBreak);
        Data.SoundTypes.Add(SoundType.HoneyBlockFall);
        Data.SoundTypes.Add(SoundType.HoneyBlockHit);
        Data.SoundTypes.Add(SoundType.HoneyBlockPlace);
        Data.SoundTypes.Add(SoundType.HoneyBlockSlide);
        Data.SoundTypes.Add(SoundType.HoneyBlockStep);
        Data.SoundTypes.Add(SoundType.IronBreak);
        Data.SoundTypes.Add(SoundType.IronFall);
        Data.SoundTypes.Add(SoundType.IronHit);
        Data.SoundTypes.Add(SoundType.IronPlace);
        Data.SoundTypes.Add(SoundType.IronStep);
        Data.SoundTypes.Add(SoundType.IronDoorClose);
        Data.SoundTypes.Add(SoundType.IronDoorOpen);
        Data.SoundTypes.Add(SoundType.IronTrapdoorClose);
        Data.SoundTypes.Add(SoundType.IronTrapdoorOpen);
        Data.SoundTypes.Add(SoundType.LadderBreak);
        Data.SoundTypes.Add(SoundType.LadderFall);
        Data.SoundTypes.Add(SoundType.LadderHit);
        Data.SoundTypes.Add(SoundType.LadderPlace);
        Data.SoundTypes.Add(SoundType.LadderStep);
        Data.SoundTypes.Add(SoundType.LanternBreak);
        Data.SoundTypes.Add(SoundType.LanternFall);
        Data.SoundTypes.Add(SoundType.LanternHit);
        Data.SoundTypes.Add(SoundType.LanternPlace);
        Data.SoundTypes.Add(SoundType.LanternStep);
        Data.SoundTypes.Add(SoundType.LargeAmethystBudBreak);
        Data.SoundTypes.Add(SoundType.LargeAmethystBudPlace);
        Data.SoundTypes.Add(SoundType.LavaAmbient);
        Data.SoundTypes.Add(SoundType.LavaExtinguish);
        Data.SoundTypes.Add(SoundType.LavaPop);
        Data.SoundTypes.Add(SoundType.LeafLitterBreak);
        Data.SoundTypes.Add(SoundType.LeafLitterFall);
        Data.SoundTypes.Add(SoundType.LeafLitterHit);
        Data.SoundTypes.Add(SoundType.LeafLitterPlace);
        Data.SoundTypes.Add(SoundType.LeafLitterStep);
        Data.SoundTypes.Add(SoundType.LeverClick);
        Data.SoundTypes.Add(SoundType.LilyPadPlace);
        Data.SoundTypes.Add(SoundType.LodestoneBreak);
        Data.SoundTypes.Add(SoundType.LodestoneFall);
        Data.SoundTypes.Add(SoundType.LodestoneHit);
        Data.SoundTypes.Add(SoundType.LodestonePlace);
        Data.SoundTypes.Add(SoundType.LodestoneStep);
        Data.SoundTypes.Add(SoundType.MangroveRootsBreak);
        Data.SoundTypes.Add(SoundType.MangroveRootsFall);
        Data.SoundTypes.Add(SoundType.MangroveRootsHit);
        Data.SoundTypes.Add(SoundType.MangroveRootsPlace);
        Data.SoundTypes.Add(SoundType.MangroveRootsStep);
        Data.SoundTypes.Add(SoundType.MediumAmethystBudBreak);
        Data.SoundTypes.Add(SoundType.MediumAmethystBudPlace);
        Data.SoundTypes.Add(SoundType.MetalBreak);
        Data.SoundTypes.Add(SoundType.MetalFall);
        Data.SoundTypes.Add(SoundType.MetalHit);
        Data.SoundTypes.Add(SoundType.MetalPlace);
        Data.SoundTypes.Add(SoundType.MetalStep);
        Data.SoundTypes.Add(SoundType.MetalPressurePlateClickOff);
        Data.SoundTypes.Add(SoundType.MetalPressurePlateClickOn);
        Data.SoundTypes.Add(SoundType.MossBreak);
        Data.SoundTypes.Add(SoundType.MossFall);
        Data.SoundTypes.Add(SoundType.MossHit);
        Data.SoundTypes.Add(SoundType.MossPlace);
        Data.SoundTypes.Add(SoundType.MossStep);
        Data.SoundTypes.Add(SoundType.MossCarpetBreak);
        Data.SoundTypes.Add(SoundType.MossCarpetFall);
        Data.SoundTypes.Add(SoundType.MossCarpetHit);
        Data.SoundTypes.Add(SoundType.MossCarpetPlace);
        Data.SoundTypes.Add(SoundType.MossCarpetStep);
        Data.SoundTypes.Add(SoundType.MudBreak);
        Data.SoundTypes.Add(SoundType.MudFall);
        Data.SoundTypes.Add(SoundType.MudHit);
        Data.SoundTypes.Add(SoundType.MudPlace);
        Data.SoundTypes.Add(SoundType.MudStep);
        Data.SoundTypes.Add(SoundType.MudBricksBreak);
        Data.SoundTypes.Add(SoundType.MudBricksFall);
        Data.SoundTypes.Add(SoundType.MudBricksHit);
        Data.SoundTypes.Add(SoundType.MudBricksPlace);
        Data.SoundTypes.Add(SoundType.MudBricksStep);
        Data.SoundTypes.Add(SoundType.MuddyMangroveRootsBreak);
        Data.SoundTypes.Add(SoundType.MuddyMangroveRootsFall);
        Data.SoundTypes.Add(SoundType.MuddyMangroveRootsHit);
        Data.SoundTypes.Add(SoundType.MuddyMangroveRootsPlace);
        Data.SoundTypes.Add(SoundType.MuddyMangroveRootsStep);
        Data.SoundTypes.Add(SoundType.NetherBricksBreak);
        Data.SoundTypes.Add(SoundType.NetherBricksFall);
        Data.SoundTypes.Add(SoundType.NetherBricksHit);
        Data.SoundTypes.Add(SoundType.NetherBricksPlace);
        Data.SoundTypes.Add(SoundType.NetherBricksStep);
        Data.SoundTypes.Add(SoundType.NetherGoldOreBreak);
        Data.SoundTypes.Add(SoundType.NetherGoldOreFall);
        Data.SoundTypes.Add(SoundType.NetherGoldOreHit);
        Data.SoundTypes.Add(SoundType.NetherGoldOrePlace);
        Data.SoundTypes.Add(SoundType.NetherGoldOreStep);
        Data.SoundTypes.Add(SoundType.NetherOreBreak);
        Data.SoundTypes.Add(SoundType.NetherOreFall);
        Data.SoundTypes.Add(SoundType.NetherOreHit);
        Data.SoundTypes.Add(SoundType.NetherOrePlace);
        Data.SoundTypes.Add(SoundType.NetherOreStep);
        Data.SoundTypes.Add(SoundType.NetherSproutsBreak);
        Data.SoundTypes.Add(SoundType.NetherSproutsFall);
        Data.SoundTypes.Add(SoundType.NetherSproutsHit);
        Data.SoundTypes.Add(SoundType.NetherSproutsPlace);
        Data.SoundTypes.Add(SoundType.NetherSproutsStep);
        Data.SoundTypes.Add(SoundType.NetherWartBreak);
        Data.SoundTypes.Add(SoundType.NetherWoodBreak);
        Data.SoundTypes.Add(SoundType.NetherWoodFall);
        Data.SoundTypes.Add(SoundType.NetherWoodHit);
        Data.SoundTypes.Add(SoundType.NetherWoodPlace);
        Data.SoundTypes.Add(SoundType.NetherWoodStep);
        Data.SoundTypes.Add(SoundType.NetherWoodButtonClickOff);
        Data.SoundTypes.Add(SoundType.NetherWoodButtonClickOn);
        Data.SoundTypes.Add(SoundType.NetherWoodDoorClose);
        Data.SoundTypes.Add(SoundType.NetherWoodDoorOpen);
        Data.SoundTypes.Add(SoundType.NetherWoodFenceGateClose);
        Data.SoundTypes.Add(SoundType.NetherWoodFenceGateOpen);
        Data.SoundTypes.Add(SoundType.NetherWoodHangingSignBreak);
        Data.SoundTypes.Add(SoundType.NetherWoodHangingSignFall);
        Data.SoundTypes.Add(SoundType.NetherWoodHangingSignHit);
        Data.SoundTypes.Add(SoundType.NetherWoodHangingSignPlace);
        Data.SoundTypes.Add(SoundType.NetherWoodHangingSignStep);
        Data.SoundTypes.Add(SoundType.NetherWoodPressurePlateClickOff);
        Data.SoundTypes.Add(SoundType.NetherWoodPressurePlateClickOn);
        Data.SoundTypes.Add(SoundType.NetherWoodTrapdoorClose);
        Data.SoundTypes.Add(SoundType.NetherWoodTrapdoorOpen);
        Data.SoundTypes.Add(SoundType.NetheriteBlockBreak);
        Data.SoundTypes.Add(SoundType.NetheriteBlockFall);
        Data.SoundTypes.Add(SoundType.NetheriteBlockHit);
        Data.SoundTypes.Add(SoundType.NetheriteBlockPlace);
        Data.SoundTypes.Add(SoundType.NetheriteBlockStep);
        Data.SoundTypes.Add(SoundType.NetherrackBreak);
        Data.SoundTypes.Add(SoundType.NetherrackFall);
        Data.SoundTypes.Add(SoundType.NetherrackHit);
        Data.SoundTypes.Add(SoundType.NetherrackPlace);
        Data.SoundTypes.Add(SoundType.NetherrackStep);
        Data.SoundTypes.Add(SoundType.NoteBlockBanjo);
        Data.SoundTypes.Add(SoundType.NoteBlockBasedrum);
        Data.SoundTypes.Add(SoundType.NoteBlockBass);
        Data.SoundTypes.Add(SoundType.NoteBlockBell);
        Data.SoundTypes.Add(SoundType.NoteBlockBit);
        Data.SoundTypes.Add(SoundType.NoteBlockChime);
        Data.SoundTypes.Add(SoundType.NoteBlockCowBell);
        Data.SoundTypes.Add(SoundType.NoteBlockDidgeridoo);
        Data.SoundTypes.Add(SoundType.NoteBlockFlute);
        Data.SoundTypes.Add(SoundType.NoteBlockGuitar);
        Data.SoundTypes.Add(SoundType.NoteBlockHarp);
        Data.SoundTypes.Add(SoundType.NoteBlockHat);
        Data.SoundTypes.Add(SoundType.NoteBlockImitateCreeper);
        Data.SoundTypes.Add(SoundType.NoteBlockImitateEnderDragon);
        Data.SoundTypes.Add(SoundType.NoteBlockImitatePiglin);
        Data.SoundTypes.Add(SoundType.NoteBlockImitateSkeleton);
        Data.SoundTypes.Add(SoundType.NoteBlockImitateWitherSkeleton);
        Data.SoundTypes.Add(SoundType.NoteBlockImitateZombie);
        Data.SoundTypes.Add(SoundType.NoteBlockIronXylophone);
        Data.SoundTypes.Add(SoundType.NoteBlockPling);
        Data.SoundTypes.Add(SoundType.NoteBlockSnare);
        Data.SoundTypes.Add(SoundType.NoteBlockXylophone);
        Data.SoundTypes.Add(SoundType.NyliumBreak);
        Data.SoundTypes.Add(SoundType.NyliumFall);
        Data.SoundTypes.Add(SoundType.NyliumHit);
        Data.SoundTypes.Add(SoundType.NyliumPlace);
        Data.SoundTypes.Add(SoundType.NyliumStep);
        Data.SoundTypes.Add(SoundType.PackedMudBreak);
        Data.SoundTypes.Add(SoundType.PackedMudFall);
        Data.SoundTypes.Add(SoundType.PackedMudHit);
        Data.SoundTypes.Add(SoundType.PackedMudPlace);
        Data.SoundTypes.Add(SoundType.PackedMudStep);
        Data.SoundTypes.Add(SoundType.PaleHangingMossIdle);
        Data.SoundTypes.Add(SoundType.PinkPetalsBreak);
        Data.SoundTypes.Add(SoundType.PinkPetalsFall);
        Data.SoundTypes.Add(SoundType.PinkPetalsHit);
        Data.SoundTypes.Add(SoundType.PinkPetalsPlace);
        Data.SoundTypes.Add(SoundType.PinkPetalsStep);
        Data.SoundTypes.Add(SoundType.PistonContract);
        Data.SoundTypes.Add(SoundType.PistonExtend);
        Data.SoundTypes.Add(SoundType.PointedDripstoneBreak);
        Data.SoundTypes.Add(SoundType.PointedDripstoneDripLava);
        Data.SoundTypes.Add(SoundType.PointedDripstoneDripLavaIntoCauldron);
        Data.SoundTypes.Add(SoundType.PointedDripstoneDripWater);
        Data.SoundTypes.Add(SoundType.PointedDripstoneDripWaterIntoCauldron);
        Data.SoundTypes.Add(SoundType.PointedDripstoneFall);
        Data.SoundTypes.Add(SoundType.PointedDripstoneHit);
        Data.SoundTypes.Add(SoundType.PointedDripstoneLand);
        Data.SoundTypes.Add(SoundType.PointedDripstonePlace);
        Data.SoundTypes.Add(SoundType.PointedDripstoneStep);
        Data.SoundTypes.Add(SoundType.PolishedDeepslateBreak);
        Data.SoundTypes.Add(SoundType.PolishedDeepslateFall);
        Data.SoundTypes.Add(SoundType.PolishedDeepslateHit);
        Data.SoundTypes.Add(SoundType.PolishedDeepslatePlace);
        Data.SoundTypes.Add(SoundType.PolishedDeepslateStep);
        Data.SoundTypes.Add(SoundType.PolishedTuffBreak);
        Data.SoundTypes.Add(SoundType.PolishedTuffFall);
        Data.SoundTypes.Add(SoundType.PolishedTuffHit);
        Data.SoundTypes.Add(SoundType.PolishedTuffPlace);
        Data.SoundTypes.Add(SoundType.PolishedTuffStep);
        Data.SoundTypes.Add(SoundType.PortalAmbient);
        Data.SoundTypes.Add(SoundType.PortalTravel);
        Data.SoundTypes.Add(SoundType.PortalTrigger);
        Data.SoundTypes.Add(SoundType.PowderSnowBreak);
        Data.SoundTypes.Add(SoundType.PowderSnowFall);
        Data.SoundTypes.Add(SoundType.PowderSnowHit);
        Data.SoundTypes.Add(SoundType.PowderSnowPlace);
        Data.SoundTypes.Add(SoundType.PowderSnowStep);
        Data.SoundTypes.Add(SoundType.PumpkinCarve);
        Data.SoundTypes.Add(SoundType.RedstoneTorchBurnout);
        Data.SoundTypes.Add(SoundType.ResinBreak);
        Data.SoundTypes.Add(SoundType.ResinFall);
        Data.SoundTypes.Add(SoundType.ResinPlace);
        Data.SoundTypes.Add(SoundType.ResinStep);
        Data.SoundTypes.Add(SoundType.ResinBricksBreak);
        Data.SoundTypes.Add(SoundType.ResinBricksFall);
        Data.SoundTypes.Add(SoundType.ResinBricksHit);
        Data.SoundTypes.Add(SoundType.ResinBricksPlace);
        Data.SoundTypes.Add(SoundType.ResinBricksStep);
        Data.SoundTypes.Add(SoundType.RespawnAnchorAmbient);
        Data.SoundTypes.Add(SoundType.RespawnAnchorCharge);
        Data.SoundTypes.Add(SoundType.RespawnAnchorDeplete);
        Data.SoundTypes.Add(SoundType.RespawnAnchorSetSpawn);
        Data.SoundTypes.Add(SoundType.RootedDirtBreak);
        Data.SoundTypes.Add(SoundType.RootedDirtFall);
        Data.SoundTypes.Add(SoundType.RootedDirtHit);
        Data.SoundTypes.Add(SoundType.RootedDirtPlace);
        Data.SoundTypes.Add(SoundType.RootedDirtStep);
        Data.SoundTypes.Add(SoundType.RootsBreak);
        Data.SoundTypes.Add(SoundType.RootsFall);
        Data.SoundTypes.Add(SoundType.RootsHit);
        Data.SoundTypes.Add(SoundType.RootsPlace);
        Data.SoundTypes.Add(SoundType.RootsStep);
        Data.SoundTypes.Add(SoundType.SandBreak);
        Data.SoundTypes.Add(SoundType.SandFall);
        Data.SoundTypes.Add(SoundType.SandHit);
        Data.SoundTypes.Add(SoundType.SandIdle);
        Data.SoundTypes.Add(SoundType.SandPlace);
        Data.SoundTypes.Add(SoundType.SandStep);
        Data.SoundTypes.Add(SoundType.ScaffoldingBreak);
        Data.SoundTypes.Add(SoundType.ScaffoldingFall);
        Data.SoundTypes.Add(SoundType.ScaffoldingHit);
        Data.SoundTypes.Add(SoundType.ScaffoldingPlace);
        Data.SoundTypes.Add(SoundType.ScaffoldingStep);
        Data.SoundTypes.Add(SoundType.SculkBreak);
        Data.SoundTypes.Add(SoundType.SculkCharge);
        Data.SoundTypes.Add(SoundType.SculkFall);
        Data.SoundTypes.Add(SoundType.SculkHit);
        Data.SoundTypes.Add(SoundType.SculkPlace);
        Data.SoundTypes.Add(SoundType.SculkSpread);
        Data.SoundTypes.Add(SoundType.SculkStep);
        Data.SoundTypes.Add(SoundType.SculkCatalystBloom);
        Data.SoundTypes.Add(SoundType.SculkCatalystBreak);
        Data.SoundTypes.Add(SoundType.SculkCatalystFall);
        Data.SoundTypes.Add(SoundType.SculkCatalystHit);
        Data.SoundTypes.Add(SoundType.SculkCatalystPlace);
        Data.SoundTypes.Add(SoundType.SculkCatalystStep);
        Data.SoundTypes.Add(SoundType.SculkSensorBreak);
        Data.SoundTypes.Add(SoundType.SculkSensorClicking);
        Data.SoundTypes.Add(SoundType.SculkSensorClickingStop);
        Data.SoundTypes.Add(SoundType.SculkSensorFall);
        Data.SoundTypes.Add(SoundType.SculkSensorHit);
        Data.SoundTypes.Add(SoundType.SculkSensorPlace);
        Data.SoundTypes.Add(SoundType.SculkSensorStep);
        Data.SoundTypes.Add(SoundType.SculkShriekerBreak);
        Data.SoundTypes.Add(SoundType.SculkShriekerFall);
        Data.SoundTypes.Add(SoundType.SculkShriekerHit);
        Data.SoundTypes.Add(SoundType.SculkShriekerPlace);
        Data.SoundTypes.Add(SoundType.SculkShriekerShriek);
        Data.SoundTypes.Add(SoundType.SculkShriekerStep);
        Data.SoundTypes.Add(SoundType.SculkVeinBreak);
        Data.SoundTypes.Add(SoundType.SculkVeinFall);
        Data.SoundTypes.Add(SoundType.SculkVeinHit);
        Data.SoundTypes.Add(SoundType.SculkVeinPlace);
        Data.SoundTypes.Add(SoundType.SculkVeinStep);
        Data.SoundTypes.Add(SoundType.ShroomlightBreak);
        Data.SoundTypes.Add(SoundType.ShroomlightFall);
        Data.SoundTypes.Add(SoundType.ShroomlightHit);
        Data.SoundTypes.Add(SoundType.ShroomlightPlace);
        Data.SoundTypes.Add(SoundType.ShroomlightStep);
        Data.SoundTypes.Add(SoundType.ShulkerBoxClose);
        Data.SoundTypes.Add(SoundType.ShulkerBoxOpen);
        Data.SoundTypes.Add(SoundType.SignWaxedInteractFail);
        Data.SoundTypes.Add(SoundType.SlimeBlockBreak);
        Data.SoundTypes.Add(SoundType.SlimeBlockFall);
        Data.SoundTypes.Add(SoundType.SlimeBlockHit);
        Data.SoundTypes.Add(SoundType.SlimeBlockPlace);
        Data.SoundTypes.Add(SoundType.SlimeBlockStep);
        Data.SoundTypes.Add(SoundType.SmallAmethystBudBreak);
        Data.SoundTypes.Add(SoundType.SmallAmethystBudPlace);
        Data.SoundTypes.Add(SoundType.SmallDripleafBreak);
        Data.SoundTypes.Add(SoundType.SmallDripleafFall);
        Data.SoundTypes.Add(SoundType.SmallDripleafHit);
        Data.SoundTypes.Add(SoundType.SmallDripleafPlace);
        Data.SoundTypes.Add(SoundType.SmallDripleafStep);
        Data.SoundTypes.Add(SoundType.SmithingTableUse);
        Data.SoundTypes.Add(SoundType.SmokerSmoke);
        Data.SoundTypes.Add(SoundType.SnifferEggCrack);
        Data.SoundTypes.Add(SoundType.SnifferEggHatch);
        Data.SoundTypes.Add(SoundType.SnifferEggPlop);
        Data.SoundTypes.Add(SoundType.SnowBreak);
        Data.SoundTypes.Add(SoundType.SnowFall);
        Data.SoundTypes.Add(SoundType.SnowHit);
        Data.SoundTypes.Add(SoundType.SnowPlace);
        Data.SoundTypes.Add(SoundType.SnowStep);
        Data.SoundTypes.Add(SoundType.SoulSandBreak);
        Data.SoundTypes.Add(SoundType.SoulSandFall);
        Data.SoundTypes.Add(SoundType.SoulSandHit);
        Data.SoundTypes.Add(SoundType.SoulSandPlace);
        Data.SoundTypes.Add(SoundType.SoulSandStep);
        Data.SoundTypes.Add(SoundType.SoulSoilBreak);
        Data.SoundTypes.Add(SoundType.SoulSoilFall);
        Data.SoundTypes.Add(SoundType.SoulSoilHit);
        Data.SoundTypes.Add(SoundType.SoulSoilPlace);
        Data.SoundTypes.Add(SoundType.SoulSoilStep);
        Data.SoundTypes.Add(SoundType.SpawnerBreak);
        Data.SoundTypes.Add(SoundType.SpawnerFall);
        Data.SoundTypes.Add(SoundType.SpawnerHit);
        Data.SoundTypes.Add(SoundType.SpawnerPlace);
        Data.SoundTypes.Add(SoundType.SpawnerStep);
        Data.SoundTypes.Add(SoundType.SpongeAbsorb);
        Data.SoundTypes.Add(SoundType.SpongeBreak);
        Data.SoundTypes.Add(SoundType.SpongeFall);
        Data.SoundTypes.Add(SoundType.SpongeHit);
        Data.SoundTypes.Add(SoundType.SpongePlace);
        Data.SoundTypes.Add(SoundType.SpongeStep);
        Data.SoundTypes.Add(SoundType.SporeBlossomBreak);
        Data.SoundTypes.Add(SoundType.SporeBlossomFall);
        Data.SoundTypes.Add(SoundType.SporeBlossomHit);
        Data.SoundTypes.Add(SoundType.SporeBlossomPlace);
        Data.SoundTypes.Add(SoundType.SporeBlossomStep);
        Data.SoundTypes.Add(SoundType.StemBreak);
        Data.SoundTypes.Add(SoundType.StemFall);
        Data.SoundTypes.Add(SoundType.StemHit);
        Data.SoundTypes.Add(SoundType.StemPlace);
        Data.SoundTypes.Add(SoundType.StemStep);
        Data.SoundTypes.Add(SoundType.StoneBreak);
        Data.SoundTypes.Add(SoundType.StoneFall);
        Data.SoundTypes.Add(SoundType.StoneHit);
        Data.SoundTypes.Add(SoundType.StonePlace);
        Data.SoundTypes.Add(SoundType.StoneStep);
        Data.SoundTypes.Add(SoundType.StoneButtonClickOff);
        Data.SoundTypes.Add(SoundType.StoneButtonClickOn);
        Data.SoundTypes.Add(SoundType.StonePressurePlateClickOff);
        Data.SoundTypes.Add(SoundType.StonePressurePlateClickOn);
        Data.SoundTypes.Add(SoundType.SuspiciousGravelBreak);
        Data.SoundTypes.Add(SoundType.SuspiciousGravelFall);
        Data.SoundTypes.Add(SoundType.SuspiciousGravelHit);
        Data.SoundTypes.Add(SoundType.SuspiciousGravelPlace);
        Data.SoundTypes.Add(SoundType.SuspiciousGravelStep);
        Data.SoundTypes.Add(SoundType.SuspiciousSandBreak);
        Data.SoundTypes.Add(SoundType.SuspiciousSandFall);
        Data.SoundTypes.Add(SoundType.SuspiciousSandHit);
        Data.SoundTypes.Add(SoundType.SuspiciousSandPlace);
        Data.SoundTypes.Add(SoundType.SuspiciousSandStep);
        Data.SoundTypes.Add(SoundType.SweetBerryBushBreak);
        Data.SoundTypes.Add(SoundType.SweetBerryBushPickBerries);
        Data.SoundTypes.Add(SoundType.SweetBerryBushPlace);
        Data.SoundTypes.Add(SoundType.TrialSpawnerAboutToSpawnItem);
        Data.SoundTypes.Add(SoundType.TrialSpawnerAmbient);
        Data.SoundTypes.Add(SoundType.TrialSpawnerAmbientOminous);
        Data.SoundTypes.Add(SoundType.TrialSpawnerBreak);
        Data.SoundTypes.Add(SoundType.TrialSpawnerCloseShutter);
        Data.SoundTypes.Add(SoundType.TrialSpawnerDetectPlayer);
        Data.SoundTypes.Add(SoundType.TrialSpawnerEjectItem);
        Data.SoundTypes.Add(SoundType.TrialSpawnerFall);
        Data.SoundTypes.Add(SoundType.TrialSpawnerHit);
        Data.SoundTypes.Add(SoundType.TrialSpawnerOminousActivate);
        Data.SoundTypes.Add(SoundType.TrialSpawnerOpenShutter);
        Data.SoundTypes.Add(SoundType.TrialSpawnerPlace);
        Data.SoundTypes.Add(SoundType.TrialSpawnerSpawnItem);
        Data.SoundTypes.Add(SoundType.TrialSpawnerSpawnItemBegin);
        Data.SoundTypes.Add(SoundType.TrialSpawnerSpawnMob);
        Data.SoundTypes.Add(SoundType.TrialSpawnerStep);
        Data.SoundTypes.Add(SoundType.TripwireAttach);
        Data.SoundTypes.Add(SoundType.TripwireClickOff);
        Data.SoundTypes.Add(SoundType.TripwireClickOn);
        Data.SoundTypes.Add(SoundType.TripwireDetach);
        Data.SoundTypes.Add(SoundType.TuffBreak);
        Data.SoundTypes.Add(SoundType.TuffFall);
        Data.SoundTypes.Add(SoundType.TuffHit);
        Data.SoundTypes.Add(SoundType.TuffPlace);
        Data.SoundTypes.Add(SoundType.TuffStep);
        Data.SoundTypes.Add(SoundType.TuffBricksBreak);
        Data.SoundTypes.Add(SoundType.TuffBricksFall);
        Data.SoundTypes.Add(SoundType.TuffBricksHit);
        Data.SoundTypes.Add(SoundType.TuffBricksPlace);
        Data.SoundTypes.Add(SoundType.TuffBricksStep);
        Data.SoundTypes.Add(SoundType.VaultActivate);
        Data.SoundTypes.Add(SoundType.VaultAmbient);
        Data.SoundTypes.Add(SoundType.VaultBreak);
        Data.SoundTypes.Add(SoundType.VaultCloseShutter);
        Data.SoundTypes.Add(SoundType.VaultDeactivate);
        Data.SoundTypes.Add(SoundType.VaultEjectItem);
        Data.SoundTypes.Add(SoundType.VaultFall);
        Data.SoundTypes.Add(SoundType.VaultHit);
        Data.SoundTypes.Add(SoundType.VaultInsertItem);
        Data.SoundTypes.Add(SoundType.VaultInsertItemFail);
        Data.SoundTypes.Add(SoundType.VaultOpenShutter);
        Data.SoundTypes.Add(SoundType.VaultPlace);
        Data.SoundTypes.Add(SoundType.VaultRejectRewardedPlayer);
        Data.SoundTypes.Add(SoundType.VaultStep);
        Data.SoundTypes.Add(SoundType.VineBreak);
        Data.SoundTypes.Add(SoundType.VineFall);
        Data.SoundTypes.Add(SoundType.VineHit);
        Data.SoundTypes.Add(SoundType.VinePlace);
        Data.SoundTypes.Add(SoundType.VineStep);
        Data.SoundTypes.Add(SoundType.WartBlockBreak);
        Data.SoundTypes.Add(SoundType.WartBlockFall);
        Data.SoundTypes.Add(SoundType.WartBlockHit);
        Data.SoundTypes.Add(SoundType.WartBlockPlace);
        Data.SoundTypes.Add(SoundType.WartBlockStep);
        Data.SoundTypes.Add(SoundType.WaterAmbient);
        Data.SoundTypes.Add(SoundType.WeepingVinesBreak);
        Data.SoundTypes.Add(SoundType.WeepingVinesFall);
        Data.SoundTypes.Add(SoundType.WeepingVinesHit);
        Data.SoundTypes.Add(SoundType.WeepingVinesPlace);
        Data.SoundTypes.Add(SoundType.WeepingVinesStep);
        Data.SoundTypes.Add(SoundType.WetGrassBreak);
        Data.SoundTypes.Add(SoundType.WetGrassFall);
        Data.SoundTypes.Add(SoundType.WetGrassHit);
        Data.SoundTypes.Add(SoundType.WetGrassPlace);
        Data.SoundTypes.Add(SoundType.WetGrassStep);
        Data.SoundTypes.Add(SoundType.WetSpongeBreak);
        Data.SoundTypes.Add(SoundType.WetSpongeDries);
        Data.SoundTypes.Add(SoundType.WetSpongeFall);
        Data.SoundTypes.Add(SoundType.WetSpongeHit);
        Data.SoundTypes.Add(SoundType.WetSpongePlace);
        Data.SoundTypes.Add(SoundType.WetSpongeStep);
        Data.SoundTypes.Add(SoundType.WoodBreak);
        Data.SoundTypes.Add(SoundType.WoodFall);
        Data.SoundTypes.Add(SoundType.WoodHit);
        Data.SoundTypes.Add(SoundType.WoodPlace);
        Data.SoundTypes.Add(SoundType.WoodStep);
        Data.SoundTypes.Add(SoundType.WoodenButtonClickOff);
        Data.SoundTypes.Add(SoundType.WoodenButtonClickOn);
        Data.SoundTypes.Add(SoundType.WoodenDoorClose);
        Data.SoundTypes.Add(SoundType.WoodenDoorOpen);
        Data.SoundTypes.Add(SoundType.WoodenPressurePlateClickOff);
        Data.SoundTypes.Add(SoundType.WoodenPressurePlateClickOn);
        Data.SoundTypes.Add(SoundType.WoodenTrapdoorClose);
        Data.SoundTypes.Add(SoundType.WoodenTrapdoorOpen);
        Data.SoundTypes.Add(SoundType.WoolBreak);
        Data.SoundTypes.Add(SoundType.WoolFall);
        Data.SoundTypes.Add(SoundType.WoolHit);
        Data.SoundTypes.Add(SoundType.WoolPlace);
        Data.SoundTypes.Add(SoundType.WoolStep);
        Data.SoundTypes.Add(SoundType.ThornsHit);
        Data.SoundTypes.Add(SoundType.AllayAmbientWithItem);
        Data.SoundTypes.Add(SoundType.AllayAmbientWithoutItem);
        Data.SoundTypes.Add(SoundType.AllayDeath);
        Data.SoundTypes.Add(SoundType.AllayHurt);
        Data.SoundTypes.Add(SoundType.AllayItemGiven);
        Data.SoundTypes.Add(SoundType.AllayItemTaken);
        Data.SoundTypes.Add(SoundType.AllayItemThrown);
        Data.SoundTypes.Add(SoundType.ArmadilloAmbient);
        Data.SoundTypes.Add(SoundType.ArmadilloBrush);
        Data.SoundTypes.Add(SoundType.ArmadilloDeath);
        Data.SoundTypes.Add(SoundType.ArmadilloEat);
        Data.SoundTypes.Add(SoundType.ArmadilloHurt);
        Data.SoundTypes.Add(SoundType.ArmadilloHurtReduced);
        Data.SoundTypes.Add(SoundType.ArmadilloLand);
        Data.SoundTypes.Add(SoundType.ArmadilloPeek);
        Data.SoundTypes.Add(SoundType.ArmadilloRoll);
        Data.SoundTypes.Add(SoundType.ArmadilloScuteDrop);
        Data.SoundTypes.Add(SoundType.ArmadilloStep);
        Data.SoundTypes.Add(SoundType.ArmadilloUnrollFinish);
        Data.SoundTypes.Add(SoundType.ArmadilloUnrollStart);
        Data.SoundTypes.Add(SoundType.ArmorStandBreak);
        Data.SoundTypes.Add(SoundType.ArmorStandFall);
        Data.SoundTypes.Add(SoundType.ArmorStandHit);
        Data.SoundTypes.Add(SoundType.ArmorStandPlace);
        Data.SoundTypes.Add(SoundType.ArrowHit);
        Data.SoundTypes.Add(SoundType.ArrowHitPlayer);
        Data.SoundTypes.Add(SoundType.ArrowShoot);
        Data.SoundTypes.Add(SoundType.AxolotlAttack);
        Data.SoundTypes.Add(SoundType.AxolotlDeath);
        Data.SoundTypes.Add(SoundType.AxolotlHurt);
        Data.SoundTypes.Add(SoundType.AxolotlIdleAir);
        Data.SoundTypes.Add(SoundType.AxolotlIdleWater);
        Data.SoundTypes.Add(SoundType.AxolotlSplash);
        Data.SoundTypes.Add(SoundType.AxolotlSwim);
        Data.SoundTypes.Add(SoundType.BatAmbient);
        Data.SoundTypes.Add(SoundType.BatDeath);
        Data.SoundTypes.Add(SoundType.BatHurt);
        Data.SoundTypes.Add(SoundType.BatLoop);
        Data.SoundTypes.Add(SoundType.BatTakeoff);
        Data.SoundTypes.Add(SoundType.BeeDeath);
        Data.SoundTypes.Add(SoundType.BeeHurt);
        Data.SoundTypes.Add(SoundType.BeeLoop);
        Data.SoundTypes.Add(SoundType.BeeLoopAggressive);
        Data.SoundTypes.Add(SoundType.BeePollinate);
        Data.SoundTypes.Add(SoundType.BeeSting);
        Data.SoundTypes.Add(SoundType.BlazeAmbient);
        Data.SoundTypes.Add(SoundType.BlazeBurn);
        Data.SoundTypes.Add(SoundType.BlazeDeath);
        Data.SoundTypes.Add(SoundType.BlazeHurt);
        Data.SoundTypes.Add(SoundType.BlazeShoot);
        Data.SoundTypes.Add(SoundType.BoatPaddleLand);
        Data.SoundTypes.Add(SoundType.BoatPaddleWater);
        Data.SoundTypes.Add(SoundType.BoggedAmbient);
        Data.SoundTypes.Add(SoundType.BoggedDeath);
        Data.SoundTypes.Add(SoundType.BoggedHurt);
        Data.SoundTypes.Add(SoundType.BoggedShear);
        Data.SoundTypes.Add(SoundType.BoggedStep);
        Data.SoundTypes.Add(SoundType.BreezeCharge);
        Data.SoundTypes.Add(SoundType.BreezeDeath);
        Data.SoundTypes.Add(SoundType.BreezeDeflect);
        Data.SoundTypes.Add(SoundType.BreezeHurt);
        Data.SoundTypes.Add(SoundType.BreezeIdleAir);
        Data.SoundTypes.Add(SoundType.BreezeIdleGround);
        Data.SoundTypes.Add(SoundType.BreezeInhale);
        Data.SoundTypes.Add(SoundType.BreezeJump);
        Data.SoundTypes.Add(SoundType.BreezeLand);
        Data.SoundTypes.Add(SoundType.BreezeShoot);
        Data.SoundTypes.Add(SoundType.BreezeSlide);
        Data.SoundTypes.Add(SoundType.BreezeWhirl);
        Data.SoundTypes.Add(SoundType.BreezeWindBurst);
        Data.SoundTypes.Add(SoundType.CamelAmbient);
        Data.SoundTypes.Add(SoundType.CamelDash);
        Data.SoundTypes.Add(SoundType.CamelDashReady);
        Data.SoundTypes.Add(SoundType.CamelDeath);
        Data.SoundTypes.Add(SoundType.CamelEat);
        Data.SoundTypes.Add(SoundType.CamelHurt);
        Data.SoundTypes.Add(SoundType.CamelSaddle);
        Data.SoundTypes.Add(SoundType.CamelSit);
        Data.SoundTypes.Add(SoundType.CamelStand);
        Data.SoundTypes.Add(SoundType.CamelStep);
        Data.SoundTypes.Add(SoundType.CamelStepSand);
        Data.SoundTypes.Add(SoundType.CatAmbient);
        Data.SoundTypes.Add(SoundType.CatBegForFood);
        Data.SoundTypes.Add(SoundType.CatDeath);
        Data.SoundTypes.Add(SoundType.CatEat);
        Data.SoundTypes.Add(SoundType.CatHiss);
        Data.SoundTypes.Add(SoundType.CatHurt);
        Data.SoundTypes.Add(SoundType.CatPurr);
        Data.SoundTypes.Add(SoundType.CatPurreow);
        Data.SoundTypes.Add(SoundType.CatStrayAmbient);
        Data.SoundTypes.Add(SoundType.ChickenAmbient);
        Data.SoundTypes.Add(SoundType.ChickenDeath);
        Data.SoundTypes.Add(SoundType.ChickenEgg);
        Data.SoundTypes.Add(SoundType.ChickenHurt);
        Data.SoundTypes.Add(SoundType.ChickenStep);
        Data.SoundTypes.Add(SoundType.CodAmbient);
        Data.SoundTypes.Add(SoundType.CodDeath);
        Data.SoundTypes.Add(SoundType.CodFlop);
        Data.SoundTypes.Add(SoundType.CodHurt);
        Data.SoundTypes.Add(SoundType.CowAmbient);
        Data.SoundTypes.Add(SoundType.CowDeath);
        Data.SoundTypes.Add(SoundType.CowHurt);
        Data.SoundTypes.Add(SoundType.CowMilk);
        Data.SoundTypes.Add(SoundType.CowStep);
        Data.SoundTypes.Add(SoundType.CreakingActivate);
        Data.SoundTypes.Add(SoundType.CreakingAmbient);
        Data.SoundTypes.Add(SoundType.CreakingAttack);
        Data.SoundTypes.Add(SoundType.CreakingDeactivate);
        Data.SoundTypes.Add(SoundType.CreakingDeath);
        Data.SoundTypes.Add(SoundType.CreakingFreeze);
        Data.SoundTypes.Add(SoundType.CreakingSpawn);
        Data.SoundTypes.Add(SoundType.CreakingStep);
        Data.SoundTypes.Add(SoundType.CreakingSway);
        Data.SoundTypes.Add(SoundType.CreakingTwitch);
        Data.SoundTypes.Add(SoundType.CreakingUnfreeze);
        Data.SoundTypes.Add(SoundType.CreeperDeath);
        Data.SoundTypes.Add(SoundType.CreeperHurt);
        Data.SoundTypes.Add(SoundType.CreeperPrimed);
        Data.SoundTypes.Add(SoundType.DolphinAmbient);
        Data.SoundTypes.Add(SoundType.DolphinAmbientWater);
        Data.SoundTypes.Add(SoundType.DolphinAttack);
        Data.SoundTypes.Add(SoundType.DolphinDeath);
        Data.SoundTypes.Add(SoundType.DolphinEat);
        Data.SoundTypes.Add(SoundType.DolphinHurt);
        Data.SoundTypes.Add(SoundType.DolphinJump);
        Data.SoundTypes.Add(SoundType.DolphinPlay);
        Data.SoundTypes.Add(SoundType.DolphinSplash);
        Data.SoundTypes.Add(SoundType.DolphinSwim);
        Data.SoundTypes.Add(SoundType.DonkeyAmbient);
        Data.SoundTypes.Add(SoundType.DonkeyAngry);
        Data.SoundTypes.Add(SoundType.DonkeyChest);
        Data.SoundTypes.Add(SoundType.DonkeyDeath);
        Data.SoundTypes.Add(SoundType.DonkeyEat);
        Data.SoundTypes.Add(SoundType.DonkeyHurt);
        Data.SoundTypes.Add(SoundType.DonkeyJump);
        Data.SoundTypes.Add(SoundType.DragonFireballExplode);
        Data.SoundTypes.Add(SoundType.DrownedAmbient);
        Data.SoundTypes.Add(SoundType.DrownedAmbientWater);
        Data.SoundTypes.Add(SoundType.DrownedDeath);
        Data.SoundTypes.Add(SoundType.DrownedDeathWater);
        Data.SoundTypes.Add(SoundType.DrownedHurt);
        Data.SoundTypes.Add(SoundType.DrownedHurtWater);
        Data.SoundTypes.Add(SoundType.DrownedShoot);
        Data.SoundTypes.Add(SoundType.DrownedStep);
        Data.SoundTypes.Add(SoundType.DrownedSwim);
        Data.SoundTypes.Add(SoundType.EggThrow);
        Data.SoundTypes.Add(SoundType.ElderGuardianAmbient);
        Data.SoundTypes.Add(SoundType.ElderGuardianAmbientLand);
        Data.SoundTypes.Add(SoundType.ElderGuardianCurse);
        Data.SoundTypes.Add(SoundType.ElderGuardianDeath);
        Data.SoundTypes.Add(SoundType.ElderGuardianDeathLand);
        Data.SoundTypes.Add(SoundType.ElderGuardianFlop);
        Data.SoundTypes.Add(SoundType.ElderGuardianHurt);
        Data.SoundTypes.Add(SoundType.ElderGuardianHurtLand);
        Data.SoundTypes.Add(SoundType.EnderDragonAmbient);
        Data.SoundTypes.Add(SoundType.EnderDragonDeath);
        Data.SoundTypes.Add(SoundType.EnderDragonFlap);
        Data.SoundTypes.Add(SoundType.EnderDragonGrowl);
        Data.SoundTypes.Add(SoundType.EnderDragonHurt);
        Data.SoundTypes.Add(SoundType.EnderDragonShoot);
        Data.SoundTypes.Add(SoundType.EnderEyeDeath);
        Data.SoundTypes.Add(SoundType.EnderEyeLaunch);
        Data.SoundTypes.Add(SoundType.EnderPearlThrow);
        Data.SoundTypes.Add(SoundType.EndermanAmbient);
        Data.SoundTypes.Add(SoundType.EndermanDeath);
        Data.SoundTypes.Add(SoundType.EndermanHurt);
        Data.SoundTypes.Add(SoundType.EndermanScream);
        Data.SoundTypes.Add(SoundType.EndermanStare);
        Data.SoundTypes.Add(SoundType.EndermanTeleport);
        Data.SoundTypes.Add(SoundType.EndermiteAmbient);
        Data.SoundTypes.Add(SoundType.EndermiteDeath);
        Data.SoundTypes.Add(SoundType.EndermiteHurt);
        Data.SoundTypes.Add(SoundType.EndermiteStep);
        Data.SoundTypes.Add(SoundType.EvokerAmbient);
        Data.SoundTypes.Add(SoundType.EvokerCastSpell);
        Data.SoundTypes.Add(SoundType.EvokerCelebrate);
        Data.SoundTypes.Add(SoundType.EvokerDeath);
        Data.SoundTypes.Add(SoundType.EvokerHurt);
        Data.SoundTypes.Add(SoundType.EvokerPrepareAttack);
        Data.SoundTypes.Add(SoundType.EvokerPrepareSummon);
        Data.SoundTypes.Add(SoundType.EvokerPrepareWololo);
        Data.SoundTypes.Add(SoundType.EvokerFangsAttack);
        Data.SoundTypes.Add(SoundType.ExperienceBottleThrow);
        Data.SoundTypes.Add(SoundType.ExperienceOrbPickup);
        Data.SoundTypes.Add(SoundType.FireworkRocketBlast);
        Data.SoundTypes.Add(SoundType.FireworkRocketBlastFar);
        Data.SoundTypes.Add(SoundType.FireworkRocketLargeBlast);
        Data.SoundTypes.Add(SoundType.FireworkRocketLargeBlastFar);
        Data.SoundTypes.Add(SoundType.FireworkRocketLaunch);
        Data.SoundTypes.Add(SoundType.FireworkRocketShoot);
        Data.SoundTypes.Add(SoundType.FireworkRocketTwinkle);
        Data.SoundTypes.Add(SoundType.FireworkRocketTwinkleFar);
        Data.SoundTypes.Add(SoundType.FishSwim);
        Data.SoundTypes.Add(SoundType.FishingBobberRetrieve);
        Data.SoundTypes.Add(SoundType.FishingBobberSplash);
        Data.SoundTypes.Add(SoundType.FishingBobberThrow);
        Data.SoundTypes.Add(SoundType.FoxAggro);
        Data.SoundTypes.Add(SoundType.FoxAmbient);
        Data.SoundTypes.Add(SoundType.FoxBite);
        Data.SoundTypes.Add(SoundType.FoxDeath);
        Data.SoundTypes.Add(SoundType.FoxEat);
        Data.SoundTypes.Add(SoundType.FoxHurt);
        Data.SoundTypes.Add(SoundType.FoxScreech);
        Data.SoundTypes.Add(SoundType.FoxSleep);
        Data.SoundTypes.Add(SoundType.FoxSniff);
        Data.SoundTypes.Add(SoundType.FoxSpit);
        Data.SoundTypes.Add(SoundType.FoxTeleport);
        Data.SoundTypes.Add(SoundType.FrogAmbient);
        Data.SoundTypes.Add(SoundType.FrogDeath);
        Data.SoundTypes.Add(SoundType.FrogEat);
        Data.SoundTypes.Add(SoundType.FrogHurt);
        Data.SoundTypes.Add(SoundType.FrogLaySpawn);
        Data.SoundTypes.Add(SoundType.FrogLongJump);
        Data.SoundTypes.Add(SoundType.FrogStep);
        Data.SoundTypes.Add(SoundType.FrogTongue);
        Data.SoundTypes.Add(SoundType.GenericBigFall);
        Data.SoundTypes.Add(SoundType.GenericBurn);
        Data.SoundTypes.Add(SoundType.GenericDeath);
        Data.SoundTypes.Add(SoundType.GenericDrink);
        Data.SoundTypes.Add(SoundType.GenericEat);
        Data.SoundTypes.Add(SoundType.GenericExplode);
        Data.SoundTypes.Add(SoundType.GenericExtinguishFire);
        Data.SoundTypes.Add(SoundType.GenericHurt);
        Data.SoundTypes.Add(SoundType.GenericSmallFall);
        Data.SoundTypes.Add(SoundType.GenericSplash);
        Data.SoundTypes.Add(SoundType.GenericSwim);
        Data.SoundTypes.Add(SoundType.GhastAmbient);
        Data.SoundTypes.Add(SoundType.GhastDeath);
        Data.SoundTypes.Add(SoundType.GhastHurt);
        Data.SoundTypes.Add(SoundType.GhastScream);
        Data.SoundTypes.Add(SoundType.GhastShoot);
        Data.SoundTypes.Add(SoundType.GhastWarn);
        Data.SoundTypes.Add(SoundType.GhastlingAmbient);
        Data.SoundTypes.Add(SoundType.GhastlingDeath);
        Data.SoundTypes.Add(SoundType.GhastlingHurt);
        Data.SoundTypes.Add(SoundType.GhastlingSpawn);
        Data.SoundTypes.Add(SoundType.GlowItemFrameAddItem);
        Data.SoundTypes.Add(SoundType.GlowItemFrameBreak);
        Data.SoundTypes.Add(SoundType.GlowItemFramePlace);
        Data.SoundTypes.Add(SoundType.GlowItemFrameRemoveItem);
        Data.SoundTypes.Add(SoundType.GlowItemFrameRotateItem);
        Data.SoundTypes.Add(SoundType.GlowSquidAmbient);
        Data.SoundTypes.Add(SoundType.GlowSquidDeath);
        Data.SoundTypes.Add(SoundType.GlowSquidHurt);
        Data.SoundTypes.Add(SoundType.GlowSquidSquirt);
        Data.SoundTypes.Add(SoundType.GoatAmbient);
        Data.SoundTypes.Add(SoundType.GoatDeath);
        Data.SoundTypes.Add(SoundType.GoatEat);
        Data.SoundTypes.Add(SoundType.GoatHornBreak);
        Data.SoundTypes.Add(SoundType.GoatHurt);
        Data.SoundTypes.Add(SoundType.GoatLongJump);
        Data.SoundTypes.Add(SoundType.GoatMilk);
        Data.SoundTypes.Add(SoundType.GoatPrepareRam);
        Data.SoundTypes.Add(SoundType.GoatRamImpact);
        Data.SoundTypes.Add(SoundType.GoatScreamingAmbient);
        Data.SoundTypes.Add(SoundType.GoatScreamingDeath);
        Data.SoundTypes.Add(SoundType.GoatScreamingEat);
        Data.SoundTypes.Add(SoundType.GoatScreamingHurt);
        Data.SoundTypes.Add(SoundType.GoatScreamingLongJump);
        Data.SoundTypes.Add(SoundType.GoatScreamingMilk);
        Data.SoundTypes.Add(SoundType.GoatScreamingPrepareRam);
        Data.SoundTypes.Add(SoundType.GoatScreamingRamImpact);
        Data.SoundTypes.Add(SoundType.GoatStep);
        Data.SoundTypes.Add(SoundType.GuardianAmbient);
        Data.SoundTypes.Add(SoundType.GuardianAmbientLand);
        Data.SoundTypes.Add(SoundType.GuardianAttack);
        Data.SoundTypes.Add(SoundType.GuardianDeath);
        Data.SoundTypes.Add(SoundType.GuardianDeathLand);
        Data.SoundTypes.Add(SoundType.GuardianFlop);
        Data.SoundTypes.Add(SoundType.GuardianHurt);
        Data.SoundTypes.Add(SoundType.GuardianHurtLand);
        Data.SoundTypes.Add(SoundType.HappyGhastAmbient);
        Data.SoundTypes.Add(SoundType.HappyGhastDeath);
        Data.SoundTypes.Add(SoundType.HappyGhastEquip);
        Data.SoundTypes.Add(SoundType.HappyGhastHarnessGogglesDown);
        Data.SoundTypes.Add(SoundType.HappyGhastHarnessGogglesUp);
        Data.SoundTypes.Add(SoundType.HappyGhastHurt);
        Data.SoundTypes.Add(SoundType.HappyGhastRiding);
        Data.SoundTypes.Add(SoundType.HappyGhastUnequip);
        Data.SoundTypes.Add(SoundType.HoglinAmbient);
        Data.SoundTypes.Add(SoundType.HoglinAngry);
        Data.SoundTypes.Add(SoundType.HoglinAttack);
        Data.SoundTypes.Add(SoundType.HoglinConvertedToZombified);
        Data.SoundTypes.Add(SoundType.HoglinDeath);
        Data.SoundTypes.Add(SoundType.HoglinHurt);
        Data.SoundTypes.Add(SoundType.HoglinRetreat);
        Data.SoundTypes.Add(SoundType.HoglinStep);
        Data.SoundTypes.Add(SoundType.HorseAmbient);
        Data.SoundTypes.Add(SoundType.HorseAngry);
        Data.SoundTypes.Add(SoundType.HorseArmor);
        Data.SoundTypes.Add(SoundType.HorseBreathe);
        Data.SoundTypes.Add(SoundType.HorseDeath);
        Data.SoundTypes.Add(SoundType.HorseEat);
        Data.SoundTypes.Add(SoundType.HorseGallop);
        Data.SoundTypes.Add(SoundType.HorseHurt);
        Data.SoundTypes.Add(SoundType.HorseJump);
        Data.SoundTypes.Add(SoundType.HorseLand);
        Data.SoundTypes.Add(SoundType.HorseSaddle);
        Data.SoundTypes.Add(SoundType.HorseStep);
        Data.SoundTypes.Add(SoundType.HorseStepWood);
        Data.SoundTypes.Add(SoundType.HostileBigFall);
        Data.SoundTypes.Add(SoundType.HostileDeath);
        Data.SoundTypes.Add(SoundType.HostileHurt);
        Data.SoundTypes.Add(SoundType.HostileSmallFall);
        Data.SoundTypes.Add(SoundType.HostileSplash);
        Data.SoundTypes.Add(SoundType.HostileSwim);
        Data.SoundTypes.Add(SoundType.HuskAmbient);
        Data.SoundTypes.Add(SoundType.HuskConvertedToZombie);
        Data.SoundTypes.Add(SoundType.HuskDeath);
        Data.SoundTypes.Add(SoundType.HuskHurt);
        Data.SoundTypes.Add(SoundType.HuskStep);
        Data.SoundTypes.Add(SoundType.IllusionerAmbient);
        Data.SoundTypes.Add(SoundType.IllusionerCastSpell);
        Data.SoundTypes.Add(SoundType.IllusionerDeath);
        Data.SoundTypes.Add(SoundType.IllusionerHurt);
        Data.SoundTypes.Add(SoundType.IllusionerMirrorMove);
        Data.SoundTypes.Add(SoundType.IllusionerPrepareBlindness);
        Data.SoundTypes.Add(SoundType.IllusionerPrepareMirror);
        Data.SoundTypes.Add(SoundType.IronGolemAttack);
        Data.SoundTypes.Add(SoundType.IronGolemDamage);
        Data.SoundTypes.Add(SoundType.IronGolemDeath);
        Data.SoundTypes.Add(SoundType.IronGolemHurt);
        Data.SoundTypes.Add(SoundType.IronGolemRepair);
        Data.SoundTypes.Add(SoundType.IronGolemStep);
        Data.SoundTypes.Add(SoundType.ItemBreak);
        Data.SoundTypes.Add(SoundType.ItemPickup);
        Data.SoundTypes.Add(SoundType.ItemFrameAddItem);
        Data.SoundTypes.Add(SoundType.ItemFrameBreak);
        Data.SoundTypes.Add(SoundType.ItemFramePlace);
        Data.SoundTypes.Add(SoundType.ItemFrameRemoveItem);
        Data.SoundTypes.Add(SoundType.ItemFrameRotateItem);
        Data.SoundTypes.Add(SoundType.LightningBoltImpact);
        Data.SoundTypes.Add(SoundType.LightningBoltThunder);
        Data.SoundTypes.Add(SoundType.LingeringPotionThrow);
        Data.SoundTypes.Add(SoundType.LlamaAmbient);
        Data.SoundTypes.Add(SoundType.LlamaAngry);
        Data.SoundTypes.Add(SoundType.LlamaChest);
        Data.SoundTypes.Add(SoundType.LlamaDeath);
        Data.SoundTypes.Add(SoundType.LlamaEat);
        Data.SoundTypes.Add(SoundType.LlamaHurt);
        Data.SoundTypes.Add(SoundType.LlamaSpit);
        Data.SoundTypes.Add(SoundType.LlamaStep);
        Data.SoundTypes.Add(SoundType.LlamaSwag);
        Data.SoundTypes.Add(SoundType.MagmaCubeDeath);
        Data.SoundTypes.Add(SoundType.MagmaCubeDeathSmall);
        Data.SoundTypes.Add(SoundType.MagmaCubeHurt);
        Data.SoundTypes.Add(SoundType.MagmaCubeHurtSmall);
        Data.SoundTypes.Add(SoundType.MagmaCubeJump);
        Data.SoundTypes.Add(SoundType.MagmaCubeSquish);
        Data.SoundTypes.Add(SoundType.MagmaCubeSquishSmall);
        Data.SoundTypes.Add(SoundType.MinecartInside);
        Data.SoundTypes.Add(SoundType.MinecartInsideUnderwater);
        Data.SoundTypes.Add(SoundType.MinecartRiding);
        Data.SoundTypes.Add(SoundType.MooshroomConvert);
        Data.SoundTypes.Add(SoundType.MooshroomEat);
        Data.SoundTypes.Add(SoundType.MooshroomMilk);
        Data.SoundTypes.Add(SoundType.MooshroomShear);
        Data.SoundTypes.Add(SoundType.MooshroomSuspiciousMilk);
        Data.SoundTypes.Add(SoundType.MuleAmbient);
        Data.SoundTypes.Add(SoundType.MuleAngry);
        Data.SoundTypes.Add(SoundType.MuleChest);
        Data.SoundTypes.Add(SoundType.MuleDeath);
        Data.SoundTypes.Add(SoundType.MuleEat);
        Data.SoundTypes.Add(SoundType.MuleHurt);
        Data.SoundTypes.Add(SoundType.MuleJump);
        Data.SoundTypes.Add(SoundType.OcelotAmbient);
        Data.SoundTypes.Add(SoundType.OcelotDeath);
        Data.SoundTypes.Add(SoundType.OcelotHurt);
        Data.SoundTypes.Add(SoundType.PaintingBreak);
        Data.SoundTypes.Add(SoundType.PaintingPlace);
        Data.SoundTypes.Add(SoundType.PandaAggressiveAmbient);
        Data.SoundTypes.Add(SoundType.PandaAmbient);
        Data.SoundTypes.Add(SoundType.PandaBite);
        Data.SoundTypes.Add(SoundType.PandaCantBreed);
        Data.SoundTypes.Add(SoundType.PandaDeath);
        Data.SoundTypes.Add(SoundType.PandaEat);
        Data.SoundTypes.Add(SoundType.PandaHurt);
        Data.SoundTypes.Add(SoundType.PandaPreSneeze);
        Data.SoundTypes.Add(SoundType.PandaSneeze);
        Data.SoundTypes.Add(SoundType.PandaStep);
        Data.SoundTypes.Add(SoundType.PandaWorriedAmbient);
        Data.SoundTypes.Add(SoundType.ParrotAmbient);
        Data.SoundTypes.Add(SoundType.ParrotDeath);
        Data.SoundTypes.Add(SoundType.ParrotEat);
        Data.SoundTypes.Add(SoundType.ParrotFly);
        Data.SoundTypes.Add(SoundType.ParrotHurt);
        Data.SoundTypes.Add(SoundType.ParrotImitateBlaze);
        Data.SoundTypes.Add(SoundType.ParrotImitateBogged);
        Data.SoundTypes.Add(SoundType.ParrotImitateBreeze);
        Data.SoundTypes.Add(SoundType.ParrotImitateCreaking);
        Data.SoundTypes.Add(SoundType.ParrotImitateCreeper);
        Data.SoundTypes.Add(SoundType.ParrotImitateDrowned);
        Data.SoundTypes.Add(SoundType.ParrotImitateElderGuardian);
        Data.SoundTypes.Add(SoundType.ParrotImitateEnderDragon);
        Data.SoundTypes.Add(SoundType.ParrotImitateEndermite);
        Data.SoundTypes.Add(SoundType.ParrotImitateEvoker);
        Data.SoundTypes.Add(SoundType.ParrotImitateGhast);
        Data.SoundTypes.Add(SoundType.ParrotImitateGuardian);
        Data.SoundTypes.Add(SoundType.ParrotImitateHoglin);
        Data.SoundTypes.Add(SoundType.ParrotImitateHusk);
        Data.SoundTypes.Add(SoundType.ParrotImitateIllusioner);
        Data.SoundTypes.Add(SoundType.ParrotImitateMagmaCube);
        Data.SoundTypes.Add(SoundType.ParrotImitatePhantom);
        Data.SoundTypes.Add(SoundType.ParrotImitatePiglin);
        Data.SoundTypes.Add(SoundType.ParrotImitatePiglinBrute);
        Data.SoundTypes.Add(SoundType.ParrotImitatePillager);
        Data.SoundTypes.Add(SoundType.ParrotImitateRavager);
        Data.SoundTypes.Add(SoundType.ParrotImitateShulker);
        Data.SoundTypes.Add(SoundType.ParrotImitateSilverfish);
        Data.SoundTypes.Add(SoundType.ParrotImitateSkeleton);
        Data.SoundTypes.Add(SoundType.ParrotImitateSlime);
        Data.SoundTypes.Add(SoundType.ParrotImitateSpider);
        Data.SoundTypes.Add(SoundType.ParrotImitateStray);
        Data.SoundTypes.Add(SoundType.ParrotImitateVex);
        Data.SoundTypes.Add(SoundType.ParrotImitateVindicator);
        Data.SoundTypes.Add(SoundType.ParrotImitateWarden);
        Data.SoundTypes.Add(SoundType.ParrotImitateWitch);
        Data.SoundTypes.Add(SoundType.ParrotImitateWither);
        Data.SoundTypes.Add(SoundType.ParrotImitateWitherSkeleton);
        Data.SoundTypes.Add(SoundType.ParrotImitateZoglin);
        Data.SoundTypes.Add(SoundType.ParrotImitateZombie);
        Data.SoundTypes.Add(SoundType.ParrotImitateZombieVillager);
        Data.SoundTypes.Add(SoundType.ParrotStep);
        Data.SoundTypes.Add(SoundType.PhantomAmbient);
        Data.SoundTypes.Add(SoundType.PhantomBite);
        Data.SoundTypes.Add(SoundType.PhantomDeath);
        Data.SoundTypes.Add(SoundType.PhantomFlap);
        Data.SoundTypes.Add(SoundType.PhantomHurt);
        Data.SoundTypes.Add(SoundType.PhantomSwoop);
        Data.SoundTypes.Add(SoundType.PigAmbient);
        Data.SoundTypes.Add(SoundType.PigDeath);
        Data.SoundTypes.Add(SoundType.PigHurt);
        Data.SoundTypes.Add(SoundType.PigSaddle);
        Data.SoundTypes.Add(SoundType.PigStep);
        Data.SoundTypes.Add(SoundType.PiglinAdmiringItem);
        Data.SoundTypes.Add(SoundType.PiglinAmbient);
        Data.SoundTypes.Add(SoundType.PiglinAngry);
        Data.SoundTypes.Add(SoundType.PiglinCelebrate);
        Data.SoundTypes.Add(SoundType.PiglinConvertedToZombified);
        Data.SoundTypes.Add(SoundType.PiglinDeath);
        Data.SoundTypes.Add(SoundType.PiglinHurt);
        Data.SoundTypes.Add(SoundType.PiglinJealous);
        Data.SoundTypes.Add(SoundType.PiglinRetreat);
        Data.SoundTypes.Add(SoundType.PiglinStep);
        Data.SoundTypes.Add(SoundType.PiglinBruteAmbient);
        Data.SoundTypes.Add(SoundType.PiglinBruteAngry);
        Data.SoundTypes.Add(SoundType.PiglinBruteConvertedToZombified);
        Data.SoundTypes.Add(SoundType.PiglinBruteDeath);
        Data.SoundTypes.Add(SoundType.PiglinBruteHurt);
        Data.SoundTypes.Add(SoundType.PiglinBruteStep);
        Data.SoundTypes.Add(SoundType.PillagerAmbient);
        Data.SoundTypes.Add(SoundType.PillagerCelebrate);
        Data.SoundTypes.Add(SoundType.PillagerDeath);
        Data.SoundTypes.Add(SoundType.PillagerHurt);
        Data.SoundTypes.Add(SoundType.PlayerAttackCrit);
        Data.SoundTypes.Add(SoundType.PlayerAttackKnockback);
        Data.SoundTypes.Add(SoundType.PlayerAttackNodamage);
        Data.SoundTypes.Add(SoundType.PlayerAttackStrong);
        Data.SoundTypes.Add(SoundType.PlayerAttackSweep);
        Data.SoundTypes.Add(SoundType.PlayerAttackWeak);
        Data.SoundTypes.Add(SoundType.PlayerBigFall);
        Data.SoundTypes.Add(SoundType.PlayerBreath);
        Data.SoundTypes.Add(SoundType.PlayerBurp);
        Data.SoundTypes.Add(SoundType.PlayerDeath);
        Data.SoundTypes.Add(SoundType.PlayerHurt);
        Data.SoundTypes.Add(SoundType.PlayerHurtDrown);
        Data.SoundTypes.Add(SoundType.PlayerHurtFreeze);
        Data.SoundTypes.Add(SoundType.PlayerHurtOnFire);
        Data.SoundTypes.Add(SoundType.PlayerHurtSweetBerryBush);
        Data.SoundTypes.Add(SoundType.PlayerLevelup);
        Data.SoundTypes.Add(SoundType.PlayerSmallFall);
        Data.SoundTypes.Add(SoundType.PlayerSplash);
        Data.SoundTypes.Add(SoundType.PlayerSplashHighSpeed);
        Data.SoundTypes.Add(SoundType.PlayerSwim);
        Data.SoundTypes.Add(SoundType.PlayerTeleport);
        Data.SoundTypes.Add(SoundType.PolarBearAmbient);
        Data.SoundTypes.Add(SoundType.PolarBearAmbientBaby);
        Data.SoundTypes.Add(SoundType.PolarBearDeath);
        Data.SoundTypes.Add(SoundType.PolarBearHurt);
        Data.SoundTypes.Add(SoundType.PolarBearStep);
        Data.SoundTypes.Add(SoundType.PolarBearWarning);
        Data.SoundTypes.Add(SoundType.PufferFishBlowOut);
        Data.SoundTypes.Add(SoundType.PufferFishBlowUp);
        Data.SoundTypes.Add(SoundType.PufferFishDeath);
        Data.SoundTypes.Add(SoundType.PufferFishFlop);
        Data.SoundTypes.Add(SoundType.PufferFishHurt);
        Data.SoundTypes.Add(SoundType.PufferFishSting);
        Data.SoundTypes.Add(SoundType.RabbitAmbient);
        Data.SoundTypes.Add(SoundType.RabbitAttack);
        Data.SoundTypes.Add(SoundType.RabbitDeath);
        Data.SoundTypes.Add(SoundType.RabbitHurt);
        Data.SoundTypes.Add(SoundType.RabbitJump);
        Data.SoundTypes.Add(SoundType.RavagerAmbient);
        Data.SoundTypes.Add(SoundType.RavagerAttack);
        Data.SoundTypes.Add(SoundType.RavagerCelebrate);
        Data.SoundTypes.Add(SoundType.RavagerDeath);
        Data.SoundTypes.Add(SoundType.RavagerHurt);
        Data.SoundTypes.Add(SoundType.RavagerRoar);
        Data.SoundTypes.Add(SoundType.RavagerStep);
        Data.SoundTypes.Add(SoundType.RavagerStunned);
        Data.SoundTypes.Add(SoundType.SalmonAmbient);
        Data.SoundTypes.Add(SoundType.SalmonDeath);
        Data.SoundTypes.Add(SoundType.SalmonFlop);
        Data.SoundTypes.Add(SoundType.SalmonHurt);
        Data.SoundTypes.Add(SoundType.SheepAmbient);
        Data.SoundTypes.Add(SoundType.SheepDeath);
        Data.SoundTypes.Add(SoundType.SheepHurt);
        Data.SoundTypes.Add(SoundType.SheepShear);
        Data.SoundTypes.Add(SoundType.SheepStep);
        Data.SoundTypes.Add(SoundType.ShulkerAmbient);
        Data.SoundTypes.Add(SoundType.ShulkerClose);
        Data.SoundTypes.Add(SoundType.ShulkerDeath);
        Data.SoundTypes.Add(SoundType.ShulkerHurt);
        Data.SoundTypes.Add(SoundType.ShulkerHurtClosed);
        Data.SoundTypes.Add(SoundType.ShulkerOpen);
        Data.SoundTypes.Add(SoundType.ShulkerShoot);
        Data.SoundTypes.Add(SoundType.ShulkerTeleport);
        Data.SoundTypes.Add(SoundType.ShulkerBulletHit);
        Data.SoundTypes.Add(SoundType.ShulkerBulletHurt);
        Data.SoundTypes.Add(SoundType.SilverfishAmbient);
        Data.SoundTypes.Add(SoundType.SilverfishDeath);
        Data.SoundTypes.Add(SoundType.SilverfishHurt);
        Data.SoundTypes.Add(SoundType.SilverfishStep);
        Data.SoundTypes.Add(SoundType.SkeletonAmbient);
        Data.SoundTypes.Add(SoundType.SkeletonConvertedToStray);
        Data.SoundTypes.Add(SoundType.SkeletonDeath);
        Data.SoundTypes.Add(SoundType.SkeletonHurt);
        Data.SoundTypes.Add(SoundType.SkeletonShoot);
        Data.SoundTypes.Add(SoundType.SkeletonStep);
        Data.SoundTypes.Add(SoundType.SkeletonHorseAmbient);
        Data.SoundTypes.Add(SoundType.SkeletonHorseAmbientWater);
        Data.SoundTypes.Add(SoundType.SkeletonHorseDeath);
        Data.SoundTypes.Add(SoundType.SkeletonHorseGallopWater);
        Data.SoundTypes.Add(SoundType.SkeletonHorseHurt);
        Data.SoundTypes.Add(SoundType.SkeletonHorseJumpWater);
        Data.SoundTypes.Add(SoundType.SkeletonHorseStepWater);
        Data.SoundTypes.Add(SoundType.SkeletonHorseSwim);
        Data.SoundTypes.Add(SoundType.SlimeAttack);
        Data.SoundTypes.Add(SoundType.SlimeDeath);
        Data.SoundTypes.Add(SoundType.SlimeDeathSmall);
        Data.SoundTypes.Add(SoundType.SlimeHurt);
        Data.SoundTypes.Add(SoundType.SlimeHurtSmall);
        Data.SoundTypes.Add(SoundType.SlimeJump);
        Data.SoundTypes.Add(SoundType.SlimeJumpSmall);
        Data.SoundTypes.Add(SoundType.SlimeSquish);
        Data.SoundTypes.Add(SoundType.SlimeSquishSmall);
        Data.SoundTypes.Add(SoundType.SnifferDeath);
        Data.SoundTypes.Add(SoundType.SnifferDigging);
        Data.SoundTypes.Add(SoundType.SnifferDiggingStop);
        Data.SoundTypes.Add(SoundType.SnifferDropSeed);
        Data.SoundTypes.Add(SoundType.SnifferEat);
        Data.SoundTypes.Add(SoundType.SnifferHappy);
        Data.SoundTypes.Add(SoundType.SnifferHurt);
        Data.SoundTypes.Add(SoundType.SnifferIdle);
        Data.SoundTypes.Add(SoundType.SnifferScenting);
        Data.SoundTypes.Add(SoundType.SnifferSearching);
        Data.SoundTypes.Add(SoundType.SnifferSniffing);
        Data.SoundTypes.Add(SoundType.SnifferStep);
        Data.SoundTypes.Add(SoundType.SnowGolemAmbient);
        Data.SoundTypes.Add(SoundType.SnowGolemDeath);
        Data.SoundTypes.Add(SoundType.SnowGolemHurt);
        Data.SoundTypes.Add(SoundType.SnowGolemShear);
        Data.SoundTypes.Add(SoundType.SnowGolemShoot);
        Data.SoundTypes.Add(SoundType.SnowballThrow);
        Data.SoundTypes.Add(SoundType.SpiderAmbient);
        Data.SoundTypes.Add(SoundType.SpiderDeath);
        Data.SoundTypes.Add(SoundType.SpiderHurt);
        Data.SoundTypes.Add(SoundType.SpiderStep);
        Data.SoundTypes.Add(SoundType.SplashPotionBreak);
        Data.SoundTypes.Add(SoundType.SplashPotionThrow);
        Data.SoundTypes.Add(SoundType.SquidAmbient);
        Data.SoundTypes.Add(SoundType.SquidDeath);
        Data.SoundTypes.Add(SoundType.SquidHurt);
        Data.SoundTypes.Add(SoundType.SquidSquirt);
        Data.SoundTypes.Add(SoundType.StrayAmbient);
        Data.SoundTypes.Add(SoundType.StrayDeath);
        Data.SoundTypes.Add(SoundType.StrayHurt);
        Data.SoundTypes.Add(SoundType.StrayStep);
        Data.SoundTypes.Add(SoundType.StriderAmbient);
        Data.SoundTypes.Add(SoundType.StriderDeath);
        Data.SoundTypes.Add(SoundType.StriderEat);
        Data.SoundTypes.Add(SoundType.StriderHappy);
        Data.SoundTypes.Add(SoundType.StriderHurt);
        Data.SoundTypes.Add(SoundType.StriderRetreat);
        Data.SoundTypes.Add(SoundType.StriderSaddle);
        Data.SoundTypes.Add(SoundType.StriderStep);
        Data.SoundTypes.Add(SoundType.StriderStepLava);
        Data.SoundTypes.Add(SoundType.TadpoleDeath);
        Data.SoundTypes.Add(SoundType.TadpoleFlop);
        Data.SoundTypes.Add(SoundType.TadpoleGrowUp);
        Data.SoundTypes.Add(SoundType.TadpoleHurt);
        Data.SoundTypes.Add(SoundType.TntPrimed);
        Data.SoundTypes.Add(SoundType.TropicalFishAmbient);
        Data.SoundTypes.Add(SoundType.TropicalFishDeath);
        Data.SoundTypes.Add(SoundType.TropicalFishFlop);
        Data.SoundTypes.Add(SoundType.TropicalFishHurt);
        Data.SoundTypes.Add(SoundType.TurtleAmbientLand);
        Data.SoundTypes.Add(SoundType.TurtleDeath);
        Data.SoundTypes.Add(SoundType.TurtleDeathBaby);
        Data.SoundTypes.Add(SoundType.TurtleEggBreak);
        Data.SoundTypes.Add(SoundType.TurtleEggCrack);
        Data.SoundTypes.Add(SoundType.TurtleEggHatch);
        Data.SoundTypes.Add(SoundType.TurtleHurt);
        Data.SoundTypes.Add(SoundType.TurtleHurtBaby);
        Data.SoundTypes.Add(SoundType.TurtleLayEgg);
        Data.SoundTypes.Add(SoundType.TurtleShamble);
        Data.SoundTypes.Add(SoundType.TurtleShambleBaby);
        Data.SoundTypes.Add(SoundType.TurtleSwim);
        Data.SoundTypes.Add(SoundType.VexAmbient);
        Data.SoundTypes.Add(SoundType.VexCharge);
        Data.SoundTypes.Add(SoundType.VexDeath);
        Data.SoundTypes.Add(SoundType.VexHurt);
        Data.SoundTypes.Add(SoundType.VillagerAmbient);
        Data.SoundTypes.Add(SoundType.VillagerCelebrate);
        Data.SoundTypes.Add(SoundType.VillagerDeath);
        Data.SoundTypes.Add(SoundType.VillagerHurt);
        Data.SoundTypes.Add(SoundType.VillagerNo);
        Data.SoundTypes.Add(SoundType.VillagerTrade);
        Data.SoundTypes.Add(SoundType.VillagerWorkArmorer);
        Data.SoundTypes.Add(SoundType.VillagerWorkButcher);
        Data.SoundTypes.Add(SoundType.VillagerWorkCartographer);
        Data.SoundTypes.Add(SoundType.VillagerWorkCleric);
        Data.SoundTypes.Add(SoundType.VillagerWorkFarmer);
        Data.SoundTypes.Add(SoundType.VillagerWorkFisherman);
        Data.SoundTypes.Add(SoundType.VillagerWorkFletcher);
        Data.SoundTypes.Add(SoundType.VillagerWorkLeatherworker);
        Data.SoundTypes.Add(SoundType.VillagerWorkLibrarian);
        Data.SoundTypes.Add(SoundType.VillagerWorkMason);
        Data.SoundTypes.Add(SoundType.VillagerWorkShepherd);
        Data.SoundTypes.Add(SoundType.VillagerWorkToolsmith);
        Data.SoundTypes.Add(SoundType.VillagerWorkWeaponsmith);
        Data.SoundTypes.Add(SoundType.VillagerYes);
        Data.SoundTypes.Add(SoundType.VindicatorAmbient);
        Data.SoundTypes.Add(SoundType.VindicatorCelebrate);
        Data.SoundTypes.Add(SoundType.VindicatorDeath);
        Data.SoundTypes.Add(SoundType.VindicatorHurt);
        Data.SoundTypes.Add(SoundType.WanderingTraderAmbient);
        Data.SoundTypes.Add(SoundType.WanderingTraderDeath);
        Data.SoundTypes.Add(SoundType.WanderingTraderDisappeared);
        Data.SoundTypes.Add(SoundType.WanderingTraderDrinkMilk);
        Data.SoundTypes.Add(SoundType.WanderingTraderDrinkPotion);
        Data.SoundTypes.Add(SoundType.WanderingTraderHurt);
        Data.SoundTypes.Add(SoundType.WanderingTraderNo);
        Data.SoundTypes.Add(SoundType.WanderingTraderReappeared);
        Data.SoundTypes.Add(SoundType.WanderingTraderTrade);
        Data.SoundTypes.Add(SoundType.WanderingTraderYes);
        Data.SoundTypes.Add(SoundType.WardenAgitated);
        Data.SoundTypes.Add(SoundType.WardenAmbient);
        Data.SoundTypes.Add(SoundType.WardenAngry);
        Data.SoundTypes.Add(SoundType.WardenAttackImpact);
        Data.SoundTypes.Add(SoundType.WardenDeath);
        Data.SoundTypes.Add(SoundType.WardenDig);
        Data.SoundTypes.Add(SoundType.WardenEmerge);
        Data.SoundTypes.Add(SoundType.WardenHeartbeat);
        Data.SoundTypes.Add(SoundType.WardenHurt);
        Data.SoundTypes.Add(SoundType.WardenListening);
        Data.SoundTypes.Add(SoundType.WardenListeningAngry);
        Data.SoundTypes.Add(SoundType.WardenNearbyClose);
        Data.SoundTypes.Add(SoundType.WardenNearbyCloser);
        Data.SoundTypes.Add(SoundType.WardenNearbyClosest);
        Data.SoundTypes.Add(SoundType.WardenRoar);
        Data.SoundTypes.Add(SoundType.WardenSniff);
        Data.SoundTypes.Add(SoundType.WardenSonicBoom);
        Data.SoundTypes.Add(SoundType.WardenSonicCharge);
        Data.SoundTypes.Add(SoundType.WardenStep);
        Data.SoundTypes.Add(SoundType.WardenTendrilClicks);
        Data.SoundTypes.Add(SoundType.WindChargeThrow);
        Data.SoundTypes.Add(SoundType.WindChargeWindBurst);
        Data.SoundTypes.Add(SoundType.WitchAmbient);
        Data.SoundTypes.Add(SoundType.WitchCelebrate);
        Data.SoundTypes.Add(SoundType.WitchDeath);
        Data.SoundTypes.Add(SoundType.WitchDrink);
        Data.SoundTypes.Add(SoundType.WitchHurt);
        Data.SoundTypes.Add(SoundType.WitchThrow);
        Data.SoundTypes.Add(SoundType.WitherAmbient);
        Data.SoundTypes.Add(SoundType.WitherBreakBlock);
        Data.SoundTypes.Add(SoundType.WitherDeath);
        Data.SoundTypes.Add(SoundType.WitherHurt);
        Data.SoundTypes.Add(SoundType.WitherShoot);
        Data.SoundTypes.Add(SoundType.WitherSpawn);
        Data.SoundTypes.Add(SoundType.WitherSkeletonAmbient);
        Data.SoundTypes.Add(SoundType.WitherSkeletonDeath);
        Data.SoundTypes.Add(SoundType.WitherSkeletonHurt);
        Data.SoundTypes.Add(SoundType.WitherSkeletonStep);
        Data.SoundTypes.Add(SoundType.WolfAmbient);
        Data.SoundTypes.Add(SoundType.WolfDeath);
        Data.SoundTypes.Add(SoundType.WolfGrowl);
        Data.SoundTypes.Add(SoundType.WolfHurt);
        Data.SoundTypes.Add(SoundType.WolfPant);
        Data.SoundTypes.Add(SoundType.WolfShake);
        Data.SoundTypes.Add(SoundType.WolfStep);
        Data.SoundTypes.Add(SoundType.WolfWhine);
        Data.SoundTypes.Add(SoundType.WolfAngryAmbient);
        Data.SoundTypes.Add(SoundType.WolfAngryDeath);
        Data.SoundTypes.Add(SoundType.WolfAngryGrowl);
        Data.SoundTypes.Add(SoundType.WolfAngryHurt);
        Data.SoundTypes.Add(SoundType.WolfAngryPant);
        Data.SoundTypes.Add(SoundType.WolfAngryWhine);
        Data.SoundTypes.Add(SoundType.WolfBigAmbient);
        Data.SoundTypes.Add(SoundType.WolfBigDeath);
        Data.SoundTypes.Add(SoundType.WolfBigGrowl);
        Data.SoundTypes.Add(SoundType.WolfBigHurt);
        Data.SoundTypes.Add(SoundType.WolfBigPant);
        Data.SoundTypes.Add(SoundType.WolfBigWhine);
        Data.SoundTypes.Add(SoundType.WolfCuteAmbient);
        Data.SoundTypes.Add(SoundType.WolfCuteDeath);
        Data.SoundTypes.Add(SoundType.WolfCuteGrowl);
        Data.SoundTypes.Add(SoundType.WolfCuteHurt);
        Data.SoundTypes.Add(SoundType.WolfCutePant);
        Data.SoundTypes.Add(SoundType.WolfCuteWhine);
        Data.SoundTypes.Add(SoundType.WolfGrumpyAmbient);
        Data.SoundTypes.Add(SoundType.WolfGrumpyDeath);
        Data.SoundTypes.Add(SoundType.WolfGrumpyGrowl);
        Data.SoundTypes.Add(SoundType.WolfGrumpyHurt);
        Data.SoundTypes.Add(SoundType.WolfGrumpyPant);
        Data.SoundTypes.Add(SoundType.WolfGrumpyWhine);
        Data.SoundTypes.Add(SoundType.WolfPuglinAmbient);
        Data.SoundTypes.Add(SoundType.WolfPuglinDeath);
        Data.SoundTypes.Add(SoundType.WolfPuglinGrowl);
        Data.SoundTypes.Add(SoundType.WolfPuglinHurt);
        Data.SoundTypes.Add(SoundType.WolfPuglinPant);
        Data.SoundTypes.Add(SoundType.WolfPuglinWhine);
        Data.SoundTypes.Add(SoundType.WolfSadAmbient);
        Data.SoundTypes.Add(SoundType.WolfSadDeath);
        Data.SoundTypes.Add(SoundType.WolfSadGrowl);
        Data.SoundTypes.Add(SoundType.WolfSadHurt);
        Data.SoundTypes.Add(SoundType.WolfSadPant);
        Data.SoundTypes.Add(SoundType.WolfSadWhine);
        Data.SoundTypes.Add(SoundType.ZoglinAmbient);
        Data.SoundTypes.Add(SoundType.ZoglinAngry);
        Data.SoundTypes.Add(SoundType.ZoglinAttack);
        Data.SoundTypes.Add(SoundType.ZoglinDeath);
        Data.SoundTypes.Add(SoundType.ZoglinHurt);
        Data.SoundTypes.Add(SoundType.ZoglinStep);
        Data.SoundTypes.Add(SoundType.ZombieAmbient);
        Data.SoundTypes.Add(SoundType.ZombieAttackIronDoor);
        Data.SoundTypes.Add(SoundType.ZombieAttackWoodenDoor);
        Data.SoundTypes.Add(SoundType.ZombieBreakWoodenDoor);
        Data.SoundTypes.Add(SoundType.ZombieConvertedToDrowned);
        Data.SoundTypes.Add(SoundType.ZombieDeath);
        Data.SoundTypes.Add(SoundType.ZombieDestroyEgg);
        Data.SoundTypes.Add(SoundType.ZombieHurt);
        Data.SoundTypes.Add(SoundType.ZombieInfect);
        Data.SoundTypes.Add(SoundType.ZombieStep);
        Data.SoundTypes.Add(SoundType.ZombieHorseAmbient);
        Data.SoundTypes.Add(SoundType.ZombieHorseDeath);
        Data.SoundTypes.Add(SoundType.ZombieHorseHurt);
        Data.SoundTypes.Add(SoundType.ZombieVillagerAmbient);
        Data.SoundTypes.Add(SoundType.ZombieVillagerConverted);
        Data.SoundTypes.Add(SoundType.ZombieVillagerCure);
        Data.SoundTypes.Add(SoundType.ZombieVillagerDeath);
        Data.SoundTypes.Add(SoundType.ZombieVillagerHurt);
        Data.SoundTypes.Add(SoundType.ZombieVillagerStep);
        Data.SoundTypes.Add(SoundType.ZombifiedPiglinAmbient);
        Data.SoundTypes.Add(SoundType.ZombifiedPiglinAngry);
        Data.SoundTypes.Add(SoundType.ZombifiedPiglinDeath);
        Data.SoundTypes.Add(SoundType.ZombifiedPiglinHurt);
        Data.SoundTypes.Add(SoundType.MobEffectBadOmen);
        Data.SoundTypes.Add(SoundType.MobEffectRaidOmen);
        Data.SoundTypes.Add(SoundType.MobEffectTrialOmen);
        Data.SoundTypes.Add(SoundType.RaidHorn);
        Data.SoundTypes.Add(SoundType.ArmorEquipChain);
        Data.SoundTypes.Add(SoundType.ArmorEquipDiamond);
        Data.SoundTypes.Add(SoundType.ArmorEquipElytra);
        Data.SoundTypes.Add(SoundType.ArmorEquipGeneric);
        Data.SoundTypes.Add(SoundType.ArmorEquipGold);
        Data.SoundTypes.Add(SoundType.ArmorEquipIron);
        Data.SoundTypes.Add(SoundType.ArmorEquipLeather);
        Data.SoundTypes.Add(SoundType.ArmorEquipNetherite);
        Data.SoundTypes.Add(SoundType.ArmorEquipTurtle);
        Data.SoundTypes.Add(SoundType.ArmorEquipWolf);
        Data.SoundTypes.Add(SoundType.ArmorUnequipWolf);
        Data.SoundTypes.Add(SoundType.AxeScrape);
        Data.SoundTypes.Add(SoundType.AxeStrip);
        Data.SoundTypes.Add(SoundType.AxeWaxOff);
        Data.SoundTypes.Add(SoundType.BoneMealUse);
        Data.SoundTypes.Add(SoundType.BookPageTurn);
        Data.SoundTypes.Add(SoundType.BookPut);
        Data.SoundTypes.Add(SoundType.BottleEmpty);
        Data.SoundTypes.Add(SoundType.BottleFill);
        Data.SoundTypes.Add(SoundType.BottleFillDragonbreath);
        Data.SoundTypes.Add(SoundType.BrushBrushingGeneric);
        Data.SoundTypes.Add(SoundType.BrushBrushingGravel);
        Data.SoundTypes.Add(SoundType.BrushBrushingGravelComplete);
        Data.SoundTypes.Add(SoundType.BrushBrushingSand);
        Data.SoundTypes.Add(SoundType.BrushBrushingSandComplete);
        Data.SoundTypes.Add(SoundType.BucketEmpty);
        Data.SoundTypes.Add(SoundType.BucketEmptyAxolotl);
        Data.SoundTypes.Add(SoundType.BucketEmptyFish);
        Data.SoundTypes.Add(SoundType.BucketEmptyLava);
        Data.SoundTypes.Add(SoundType.BucketEmptyPowderSnow);
        Data.SoundTypes.Add(SoundType.BucketEmptyTadpole);
        Data.SoundTypes.Add(SoundType.BucketFill);
        Data.SoundTypes.Add(SoundType.BucketFillAxolotl);
        Data.SoundTypes.Add(SoundType.BucketFillFish);
        Data.SoundTypes.Add(SoundType.BucketFillLava);
        Data.SoundTypes.Add(SoundType.BucketFillPowderSnow);
        Data.SoundTypes.Add(SoundType.BucketFillTadpole);
        Data.SoundTypes.Add(SoundType.BundleDropContents);
        Data.SoundTypes.Add(SoundType.BundleInsert);
        Data.SoundTypes.Add(SoundType.BundleInsertFail);
        Data.SoundTypes.Add(SoundType.BundleRemoveOne);
        Data.SoundTypes.Add(SoundType.ChorusFruitTeleport);
        Data.SoundTypes.Add(SoundType.CropPlant);
        Data.SoundTypes.Add(SoundType.CrossbowHit);
        Data.SoundTypes.Add(SoundType.CrossbowLoadingEnd);
        Data.SoundTypes.Add(SoundType.CrossbowLoadingMiddle);
        Data.SoundTypes.Add(SoundType.CrossbowLoadingStart);
        Data.SoundTypes.Add(SoundType.CrossbowQuickCharge1);
        Data.SoundTypes.Add(SoundType.CrossbowQuickCharge2);
        Data.SoundTypes.Add(SoundType.CrossbowQuickCharge3);
        Data.SoundTypes.Add(SoundType.CrossbowShoot);
        Data.SoundTypes.Add(SoundType.DyeUse);
        Data.SoundTypes.Add(SoundType.ElytraFlying);
        Data.SoundTypes.Add(SoundType.FirechargeUse);
        Data.SoundTypes.Add(SoundType.FlintandsteelUse);
        Data.SoundTypes.Add(SoundType.GlowInkSacUse);
        Data.SoundTypes.Add(SoundType.GoatHornSound0);
        Data.SoundTypes.Add(SoundType.GoatHornSound1);
        Data.SoundTypes.Add(SoundType.GoatHornSound2);
        Data.SoundTypes.Add(SoundType.GoatHornSound3);
        Data.SoundTypes.Add(SoundType.GoatHornSound4);
        Data.SoundTypes.Add(SoundType.GoatHornSound5);
        Data.SoundTypes.Add(SoundType.GoatHornSound6);
        Data.SoundTypes.Add(SoundType.GoatHornSound7);
        Data.SoundTypes.Add(SoundType.HoeTill);
        Data.SoundTypes.Add(SoundType.HoneyBottleDrink);
        Data.SoundTypes.Add(SoundType.HoneycombWaxOn);
        Data.SoundTypes.Add(SoundType.HorseArmorUnequip);
        Data.SoundTypes.Add(SoundType.InkSacUse);
        Data.SoundTypes.Add(SoundType.LeadBreak);
        Data.SoundTypes.Add(SoundType.LeadTied);
        Data.SoundTypes.Add(SoundType.LeadUntied);
        Data.SoundTypes.Add(SoundType.LlamaCarpetUnequip);
        Data.SoundTypes.Add(SoundType.LodestoneCompassLock);
        Data.SoundTypes.Add(SoundType.MaceSmashAir);
        Data.SoundTypes.Add(SoundType.MaceSmashGround);
        Data.SoundTypes.Add(SoundType.MaceSmashGroundHeavy);
        Data.SoundTypes.Add(SoundType.NetherWartPlant);
        Data.SoundTypes.Add(SoundType.OminousBottleDispose);
        Data.SoundTypes.Add(SoundType.SaddleUnequip);
        Data.SoundTypes.Add(SoundType.ShearsSnip);
        Data.SoundTypes.Add(SoundType.ShieldBlock);
        Data.SoundTypes.Add(SoundType.ShieldBreak);
        Data.SoundTypes.Add(SoundType.ShovelFlatten);
        Data.SoundTypes.Add(SoundType.SpyglassStopUsing);
        Data.SoundTypes.Add(SoundType.SpyglassUse);
        Data.SoundTypes.Add(SoundType.TotemUse);
        Data.SoundTypes.Add(SoundType.TridentHit);
        Data.SoundTypes.Add(SoundType.TridentHitGround);
        Data.SoundTypes.Add(SoundType.TridentReturn);
        Data.SoundTypes.Add(SoundType.TridentRiptide1);
        Data.SoundTypes.Add(SoundType.TridentRiptide2);
        Data.SoundTypes.Add(SoundType.TridentRiptide3);
        Data.SoundTypes.Add(SoundType.TridentThrow);
        Data.SoundTypes.Add(SoundType.TridentThunder);
        Data.SoundTypes.Add(SoundType.WolfArmorBreak);
        Data.SoundTypes.Add(SoundType.WolfArmorCrack);
        Data.SoundTypes.Add(SoundType.WolfArmorDamage);
        Data.SoundTypes.Add(SoundType.WolfArmorRepair);
        Data.SoundTypes.Add(SoundType.Creative);
        Data.SoundTypes.Add(SoundType.Credits);
        Data.SoundTypes.Add(SoundType.Dragon);
        Data.SoundTypes.Add(SoundType.End);
        Data.SoundTypes.Add(SoundType.Game);
        Data.SoundTypes.Add(SoundType.Menu);
        Data.SoundTypes.Add(SoundType.NetherBasaltDeltas);
        Data.SoundTypes.Add(SoundType.NetherCrimsonForest);
        Data.SoundTypes.Add(SoundType.NetherNetherWastes);
        Data.SoundTypes.Add(SoundType.NetherSoulSandValley);
        Data.SoundTypes.Add(SoundType.NetherWarpedForest);
        Data.SoundTypes.Add(SoundType.OverworldBadlands);
        Data.SoundTypes.Add(SoundType.OverworldBambooJungle);
        Data.SoundTypes.Add(SoundType.OverworldCherryGrove);
        Data.SoundTypes.Add(SoundType.OverworldDeepDark);
        Data.SoundTypes.Add(SoundType.OverworldDesert);
        Data.SoundTypes.Add(SoundType.OverworldDripstoneCaves);
        Data.SoundTypes.Add(SoundType.OverworldFlowerForest);
        Data.SoundTypes.Add(SoundType.OverworldForest);
        Data.SoundTypes.Add(SoundType.OverworldFrozenPeaks);
        Data.SoundTypes.Add(SoundType.OverworldGrove);
        Data.SoundTypes.Add(SoundType.OverworldJaggedPeaks);
        Data.SoundTypes.Add(SoundType.OverworldJungle);
        Data.SoundTypes.Add(SoundType.OverworldLushCaves);
        Data.SoundTypes.Add(SoundType.OverworldMeadow);
        Data.SoundTypes.Add(SoundType.OverworldOldGrowthTaiga);
        Data.SoundTypes.Add(SoundType.OverworldSnowySlopes);
        Data.SoundTypes.Add(SoundType.OverworldSparseJungle);
        Data.SoundTypes.Add(SoundType.OverworldStonyPeaks);
        Data.SoundTypes.Add(SoundType.OverworldSwamp);
        Data.SoundTypes.Add(SoundType.UnderWater);
        Data.SoundTypes.Add(SoundType.Disc11);
        Data.SoundTypes.Add(SoundType.Disc13);
        Data.SoundTypes.Add(SoundType.Disc5);
        Data.SoundTypes.Add(SoundType.DiscBlocks);
        Data.SoundTypes.Add(SoundType.DiscCat);
        Data.SoundTypes.Add(SoundType.DiscChirp);
        Data.SoundTypes.Add(SoundType.DiscCreator);
        Data.SoundTypes.Add(SoundType.DiscCreatorMusicBox);
        Data.SoundTypes.Add(SoundType.DiscFar);
        Data.SoundTypes.Add(SoundType.DiscLavaChicken);
        Data.SoundTypes.Add(SoundType.DiscMall);
        Data.SoundTypes.Add(SoundType.DiscMellohi);
        Data.SoundTypes.Add(SoundType.DiscOtherside);
        Data.SoundTypes.Add(SoundType.DiscPigstep);
        Data.SoundTypes.Add(SoundType.DiscPrecipice);
        Data.SoundTypes.Add(SoundType.DiscRelic);
        Data.SoundTypes.Add(SoundType.DiscStal);
        Data.SoundTypes.Add(SoundType.DiscStrad);
        Data.SoundTypes.Add(SoundType.DiscTears);
        Data.SoundTypes.Add(SoundType.DiscWait);
        Data.SoundTypes.Add(SoundType.DiscWard);
        Data.SoundTypes.Add(SoundType.SoulEscape);
        Data.SoundTypes.Add(SoundType.ButtonClick);
        Data.SoundTypes.Add(SoundType.CartographyTableTakeResult);
        Data.SoundTypes.Add(SoundType.HudBubblePop);
        Data.SoundTypes.Add(SoundType.LoomSelectPattern);
        Data.SoundTypes.Add(SoundType.LoomTakeResult);
        Data.SoundTypes.Add(SoundType.StonecutterSelectRecipe);
        Data.SoundTypes.Add(SoundType.StonecutterTakeResult);
        Data.SoundTypes.Add(SoundType.ToastChallengeComplete);
        Data.SoundTypes.Add(SoundType.ToastIn);
        Data.SoundTypes.Add(SoundType.ToastOut);
        Data.SoundTypes.Add(SoundType.Rain);
        Data.SoundTypes.Add(SoundType.RainAbove);

        Data.InventoryTypes.Add(InventoryType.Anvil);
        Data.InventoryTypes.Add(InventoryType.Beacon);
        Data.InventoryTypes.Add(InventoryType.BlastFurnace);
        Data.InventoryTypes.Add(InventoryType.BrewingStand);
        Data.InventoryTypes.Add(InventoryType.CartographyTable);
        Data.InventoryTypes.Add(InventoryType.Crafter3x3);
        Data.InventoryTypes.Add(InventoryType.Crafting);
        Data.InventoryTypes.Add(InventoryType.Enchantment);
        Data.InventoryTypes.Add(InventoryType.Furnace);
        Data.InventoryTypes.Add(InventoryType.Generic3x3);
        Data.InventoryTypes.Add(InventoryType.Generic9x1);
        Data.InventoryTypes.Add(InventoryType.Generic9x2);
        Data.InventoryTypes.Add(InventoryType.Generic9x3);
        Data.InventoryTypes.Add(InventoryType.Generic9x4);
        Data.InventoryTypes.Add(InventoryType.Generic9x5);
        Data.InventoryTypes.Add(InventoryType.Generic9x6);
        Data.InventoryTypes.Add(InventoryType.Grindstone);
        Data.InventoryTypes.Add(InventoryType.Hopper);
        Data.InventoryTypes.Add(InventoryType.Lectern);
        Data.InventoryTypes.Add(InventoryType.Loom);
        Data.InventoryTypes.Add(InventoryType.Merchant);
        Data.InventoryTypes.Add(InventoryType.ShulkerBox);
        Data.InventoryTypes.Add(InventoryType.Smithing);
        Data.InventoryTypes.Add(InventoryType.Smoker);
        Data.InventoryTypes.Add(InventoryType.Stonecutter);


        Data.PotionEffectTypes.Add(PotionEffectType.Speed);
        Data.PotionEffectTypes.Add(PotionEffectType.Slowness);
        Data.PotionEffectTypes.Add(PotionEffectType.Haste);
        Data.PotionEffectTypes.Add(PotionEffectType.MiningFatigue);
        Data.PotionEffectTypes.Add(PotionEffectType.Strength);
        Data.PotionEffectTypes.Add(PotionEffectType.InstantHealth);
        Data.PotionEffectTypes.Add(PotionEffectType.InstantDamage);
        Data.PotionEffectTypes.Add(PotionEffectType.JumpBoost);
        Data.PotionEffectTypes.Add(PotionEffectType.Nausea);
        Data.PotionEffectTypes.Add(PotionEffectType.Regeneration);
        Data.PotionEffectTypes.Add(PotionEffectType.Resistance);
        Data.PotionEffectTypes.Add(PotionEffectType.FireResistance);
        Data.PotionEffectTypes.Add(PotionEffectType.WaterBreathing);
        Data.PotionEffectTypes.Add(PotionEffectType.Invisibility);
        Data.PotionEffectTypes.Add(PotionEffectType.Blindness);
        Data.PotionEffectTypes.Add(PotionEffectType.NightVision);
        Data.PotionEffectTypes.Add(PotionEffectType.Hunger);
        Data.PotionEffectTypes.Add(PotionEffectType.Weakness);
        Data.PotionEffectTypes.Add(PotionEffectType.Poison);
        Data.PotionEffectTypes.Add(PotionEffectType.Wither);
        Data.PotionEffectTypes.Add(PotionEffectType.HealthBoost);
        Data.PotionEffectTypes.Add(PotionEffectType.Absorption);
        Data.PotionEffectTypes.Add(PotionEffectType.Saturation);
        Data.PotionEffectTypes.Add(PotionEffectType.Glowing);
        Data.PotionEffectTypes.Add(PotionEffectType.Levitation);
        Data.PotionEffectTypes.Add(PotionEffectType.Luck);
        Data.PotionEffectTypes.Add(PotionEffectType.Unluck);
        Data.PotionEffectTypes.Add(PotionEffectType.SlowFalling);
        Data.PotionEffectTypes.Add(PotionEffectType.ConduitPower);
        Data.PotionEffectTypes.Add(PotionEffectType.DolphinsGrace);
        Data.PotionEffectTypes.Add(PotionEffectType.BadOmen);
        Data.PotionEffectTypes.Add(PotionEffectType.HeroOfTheVillage);
        Data.PotionEffectTypes.Add(PotionEffectType.Darkness);
        Data.PotionEffectTypes.Add(PotionEffectType.TrialOmen);
        Data.PotionEffectTypes.Add(PotionEffectType.RaidOmen);
        Data.PotionEffectTypes.Add(PotionEffectType.WindCharged);
        Data.PotionEffectTypes.Add(PotionEffectType.Weaving);
        Data.PotionEffectTypes.Add(PotionEffectType.Oozing);
        Data.PotionEffectTypes.Add(PotionEffectType.Infested);

        Data.ConsumeEffects.Add(ConsumeEffect.ApplyEffects);
        Data.ConsumeEffects.Add(ConsumeEffect.ClearAllEffects);
        Data.ConsumeEffects.Add(ConsumeEffect.PlaySound);
        Data.ConsumeEffects.Add(ConsumeEffect.RemoveEffects);
        Data.ConsumeEffects.Add(ConsumeEffect.TeleportRandomly);

        Data.BlockEntityTypes.Add(BlockEntityType.Banner);
        Data.BlockEntityTypes.Add(BlockEntityType.Barrel);
        Data.BlockEntityTypes.Add(BlockEntityType.Beacon);
        Data.BlockEntityTypes.Add(BlockEntityType.Bed);
        Data.BlockEntityTypes.Add(BlockEntityType.Beehive);
        Data.BlockEntityTypes.Add(BlockEntityType.Bell);
        Data.BlockEntityTypes.Add(BlockEntityType.BlastFurnace);
        Data.BlockEntityTypes.Add(BlockEntityType.BrewingStand);
        Data.BlockEntityTypes.Add(BlockEntityType.BrushableBlock);
        Data.BlockEntityTypes.Add(BlockEntityType.CalibratedSculkSensor);
        Data.BlockEntityTypes.Add(BlockEntityType.Campfire);
        Data.BlockEntityTypes.Add(BlockEntityType.Chest);
        Data.BlockEntityTypes.Add(BlockEntityType.ChiseledBookshelf);
        Data.BlockEntityTypes.Add(BlockEntityType.CommandBlock);
        Data.BlockEntityTypes.Add(BlockEntityType.Comparator);
        Data.BlockEntityTypes.Add(BlockEntityType.Conduit);
        Data.BlockEntityTypes.Add(BlockEntityType.Crafter);
        Data.BlockEntityTypes.Add(BlockEntityType.CreakingHeart);
        Data.BlockEntityTypes.Add(BlockEntityType.DaylightDetector);
        Data.BlockEntityTypes.Add(BlockEntityType.DecoratedPot);
        Data.BlockEntityTypes.Add(BlockEntityType.Dispenser);
        Data.BlockEntityTypes.Add(BlockEntityType.Dropper);
        Data.BlockEntityTypes.Add(BlockEntityType.EnchantingTable);
        Data.BlockEntityTypes.Add(BlockEntityType.EndGateway);
        Data.BlockEntityTypes.Add(BlockEntityType.EndPortal);
        Data.BlockEntityTypes.Add(BlockEntityType.EnderChest);
        Data.BlockEntityTypes.Add(BlockEntityType.Furnace);
        Data.BlockEntityTypes.Add(BlockEntityType.HangingSign);
        Data.BlockEntityTypes.Add(BlockEntityType.Hopper);
        Data.BlockEntityTypes.Add(BlockEntityType.Jigsaw);
        Data.BlockEntityTypes.Add(BlockEntityType.Jukebox);
        Data.BlockEntityTypes.Add(BlockEntityType.Lectern);
        Data.BlockEntityTypes.Add(BlockEntityType.MobSpawner);
        Data.BlockEntityTypes.Add(BlockEntityType.Piston);
        Data.BlockEntityTypes.Add(BlockEntityType.SculkCatalyst);
        Data.BlockEntityTypes.Add(BlockEntityType.SculkSensor);
        Data.BlockEntityTypes.Add(BlockEntityType.SculkShrieker);
        Data.BlockEntityTypes.Add(BlockEntityType.ShulkerBox);
        Data.BlockEntityTypes.Add(BlockEntityType.Sign);
        Data.BlockEntityTypes.Add(BlockEntityType.Skull);
        Data.BlockEntityTypes.Add(BlockEntityType.Smoker);
        Data.BlockEntityTypes.Add(BlockEntityType.StructureBlock);
        Data.BlockEntityTypes.Add(BlockEntityType.TestBlock);
        Data.BlockEntityTypes.Add(BlockEntityType.TestInstanceBlock);
        Data.BlockEntityTypes.Add(BlockEntityType.TrappedChest);
        Data.BlockEntityTypes.Add(BlockEntityType.TrialSpawner);
        Data.BlockEntityTypes.Add(BlockEntityType.Vault);

        Data.Attributes.Add(Attribute.Armor);
        Data.Attributes.Add(Attribute.ArmorToughness);
        Data.Attributes.Add(Attribute.AttackDamage);
        Data.Attributes.Add(Attribute.AttackKnockback);
        Data.Attributes.Add(Attribute.AttackSpeed);
        Data.Attributes.Add(Attribute.BlockBreakSpeed);
        Data.Attributes.Add(Attribute.BlockInteractionRange);
        Data.Attributes.Add(Attribute.BurningTime);
        Data.Attributes.Add(Attribute.CameraDistance);
        Data.Attributes.Add(Attribute.EntityInteractionRange);
        Data.Attributes.Add(Attribute.ExplosionKnockbackResistance);
        Data.Attributes.Add(Attribute.FallDamageMultiplier);
        Data.Attributes.Add(Attribute.FlyingSpeed);
        Data.Attributes.Add(Attribute.FollowRange);
        Data.Attributes.Add(Attribute.Gravity);
        Data.Attributes.Add(Attribute.JumpStrength);
        Data.Attributes.Add(Attribute.KnockbackResistance);
        Data.Attributes.Add(Attribute.Luck);
        Data.Attributes.Add(Attribute.MaxAbsorption);
        Data.Attributes.Add(Attribute.MaxHealth);
        Data.Attributes.Add(Attribute.MiningEfficiency);
        Data.Attributes.Add(Attribute.MovementEfficiency);
        Data.Attributes.Add(Attribute.MovementSpeed);
        Data.Attributes.Add(Attribute.OxygenBonus);
        Data.Attributes.Add(Attribute.SafeFallDistance);
        Data.Attributes.Add(Attribute.Scale);
        Data.Attributes.Add(Attribute.SneakingSpeed);
        Data.Attributes.Add(Attribute.SpawnReinforcements);
        Data.Attributes.Add(Attribute.StepHeight);
        Data.Attributes.Add(Attribute.SubmergedMiningSpeed);
        Data.Attributes.Add(Attribute.SweepingDamageRatio);
        Data.Attributes.Add(Attribute.TemptRange);
        Data.Attributes.Add(Attribute.WaterMovementEfficiency);
        Data.Attributes.Add(Attribute.WaypointReceiveRange);
        Data.Attributes.Add(Attribute.WaypointTransmitRange);

    }
}
